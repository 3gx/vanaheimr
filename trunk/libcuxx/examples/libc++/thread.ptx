//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	// .globl	_Z18pthread_mutex_lockP15pthread_mutex_t
.extern .func _ZSt9terminatev
(

)
;
.extern .func  (.param .b32 func_retval0) _Z12pthread_joinmPPv
(
	.param .b64 _Z12pthread_joinmPPv_param_0,
	.param .b64 _Z12pthread_joinmPPv_param_1
)
;
.extern .func  (.param .b64 func_retval0) __cxa_allocate_exception
(
	.param .b64 __cxa_allocate_exception_param_0
)
;
.extern .func _ZNSt3__112system_errorC1ENS_10error_codeEPKc
(
	.param .b64 _ZNSt3__112system_errorC1ENS_10error_codeEPKc_param_0,
	.param .b32 _ZNSt3__112system_errorC1ENS_10error_codeEPKc_param_1,
	.param .b64 _ZNSt3__112system_errorC1ENS_10error_codeEPKc_param_2,
	.param .b64 _ZNSt3__112system_errorC1ENS_10error_codeEPKc_param_3
)
;
.extern .func  (.param .b64 func_retval0) _ZNSt3__115system_categoryEv
(

)
;
.extern .func  (.param .b32 func_retval0) __gxx_personality_v0
(

)
;
.extern .func __cxa_free_exception
(
	.param .b64 __cxa_free_exception_param_0
)
;
.extern .func _ZNSt3__112system_errorD1Ev
(
	.param .b64 _ZNSt3__112system_errorD1Ev_param_0
)
;
.extern .func __cxa_throw
(
	.param .b64 __cxa_throw_param_0,
	.param .b64 __cxa_throw_param_1,
	.param .b64 __cxa_throw_param_2
)
;
.extern .func  (.param .b32 func_retval0) _Z14pthread_detachm
(
	.param .b64 _Z14pthread_detachm_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z9nanosleepPK8timespecPS_
(
	.param .b64 _Z9nanosleepPK8timespecPS__param_0,
	.param .b64 _Z9nanosleepPK8timespecPS__param_1
)
;
.extern .func  (.param .b32 func_retval0) __cxa_guard_acquire
(
	.param .b64 __cxa_guard_acquire_param_0
)
;
.func _ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev
(
	.param .b64 _ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev_param_0
)
;
.func _ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev
(
	.param .b64 _ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev_param_0
)
;
.extern .func  (.param .b32 func_retval0) __cxa_atexit
(
	.param .b64 __cxa_atexit_param_0,
	.param .b64 __cxa_atexit_param_1,
	.param .b64 __cxa_atexit_param_2
)
;
.extern .func __cxa_guard_abort
(
	.param .b64 __cxa_guard_abort_param_0
)
;
.extern .func __cxa_guard_release
(
	.param .b64 __cxa_guard_release_param_0
)
;
.extern .func _ZNSt3__15mutex6unlockEv
(
	.param .b64 _ZNSt3__15mutex6unlockEv_param_0
)
;
.extern .func _ZNSt3__118condition_variable10notify_allEv
(
	.param .b64 _ZNSt3__118condition_variable10notify_allEv_param_0
)
;
.extern .func _ZNSt3__117__assoc_sub_state12__make_readyEv
(
	.param .b64 _ZNSt3__117__assoc_sub_state12__make_readyEv_param_0
)
;
.extern .func  (.param .b32 func_retval0) _ZNSt3__114__shared_count16__release_sharedEv
(
	.param .b64 _ZNSt3__114__shared_count16__release_sharedEv_param_0
)
;
.func _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
(
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev_param_0
)
;
.func _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
(
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev_param_0
)
;
.func __clang_call_terminate
(
	.param .b64 __clang_call_terminate_param_0
)
;
.extern .func  (.param .b64 func_retval0) __cxa_begin_catch
(
	.param .b64 __cxa_begin_catch_param_0
)
;
.extern .func _ZNSt3__114__shared_count12__add_sharedEv
(
	.param .b64 _ZNSt3__114__shared_count12__add_sharedEv_param_0
)
;
.extern .func  (.param .b64 func_retval0) _Znwy
(
	.param .b64 _Znwy_param_0
)
;
.func _ZNSt3__119__thread_struct_impC2Ev
(
	.param .b64 _ZNSt3__119__thread_struct_impC2Ev_param_0
)
;
.extern .func _ZdlPv
(
	.param .b64 _ZdlPv_param_0
)
;
.func _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
(
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT__param_0,
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT__param_1
)
;
.func _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5_
(
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_0,
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_1,
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_2,
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_3
)
;
.func _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE
(
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE_param_0,
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE_param_1
)
;
.func _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev
(
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev_param_0
)
;
.func _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y
(
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_1,
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_2
)
;
.extern .func  (.param .b64 func_retval0) _Z6memcpyPvPKvy
(
	.param .b64 _Z6memcpyPvPKvy_param_0,
	.param .b64 _Z6memcpyPvPKvy_param_1,
	.param .b64 _Z6memcpyPvPKvy_param_2
)
;
.func  (.param .b64 func_retval0) _ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv
(
	.param .b64 _ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv_param_0
)
;
.func _ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
(
	.param .b64 _ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv_param_0
)
;
.extern .func _ZNSt12length_errorD1Ev
(
	.param .b64 _ZNSt12length_errorD1Ev_param_0
)
;
.extern .func _ZNSt11logic_errorC2EPKc
(
	.param .b64 _ZNSt11logic_errorC2EPKc_param_0,
	.param .b64 _ZNSt11logic_errorC2EPKc_param_1
)
;
.func  (.param .b64 func_retval0) _ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv
(
	.param .b64 _ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy
(
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy_param_1
)
;
.func _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_
(
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT__param_0,
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT__param_1
)
;
.func _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9_
(
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_0,
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_1,
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_2,
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_3
)
;
.func _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE
(
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE_param_0,
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE_param_1
)
;
.func _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev
(
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev_param_0
)
;
.func _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y
(
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_1,
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_2
)
;
.func  (.param .b64 func_retval0) _ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv
(
	.param .b64 _ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv
(
	.param .b64 _ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv_param_0
)
;
.func  (.param .b64 func_retval0) _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy
(
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z18pthread_key_deletej
(
	.param .b32 _Z18pthread_key_deletej_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z18pthread_key_createPjPFvPvE
(
	.param .b64 _Z18pthread_key_createPjPFvPvE_param_0,
	.param .b64 _Z18pthread_key_createPjPFvPvE_param_1
)
;
.func _ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv
(
	.param .b64 _ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv_param_0
)
;
.func _ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
(
	.param .b64 _ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev_param_0
)
;
.func _ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
(
	.param .b64 _ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev_param_0
)
;
.global .align 1 .b8 .str[20] = {116, 104, 114, 101, 97, 100, 58, 58, 106, 111, 105, 110, 32, 102, 97, 105, 108, 101, 100, 0};
.extern .global .align 8 .b64 _ZTINSt3__112system_errorE;
.global .align 1 .b8 .str1[22] = {116, 104, 114, 101, 97, 100, 58, 58, 100, 101, 116, 97, 99, 104, 32, 102, 97, 105, 108, 101, 100, 0};
.global .align 4 .b8 _ZZNSt3__119__thread_local_dataEvE3__p[4];
.global .align 8 .u64 _ZGVZNSt3__119__thread_local_dataEvE3__p;
.extern .global .align 1 .u8 __dso_handle;
.global .align 1 .b8 .str2[7] = {118, 101, 99, 116, 111, 114, 0};
.extern .global .align 8 .b64 _ZTISt12length_error;
.extern .global .align 8 .b8 _ZTVSt12length_error[40];
.global .align 1 .b8 .str3[42] = {95, 95, 116, 104, 114, 101, 97, 100, 95, 115, 112, 101, 99, 105, 102, 105, 99, 95, 112, 116, 114, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 0};
                                        // @_Z18pthread_mutex_lockP15pthread_mutex_t
.visible .func  (.param .b32 func_retval0) _Z18pthread_mutex_lockP15pthread_mutex_t(
	.param .b64 _Z18pthread_mutex_lockP15pthread_mutex_t_param_0
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl2, __local_depot0;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_Z18pthread_mutex_lockP15pthread_mutex_t_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z20pthread_mutex_unlockP15pthread_mutex_t
.visible .func  (.param .b32 func_retval0) _Z20pthread_mutex_unlockP15pthread_mutex_t(
	.param .b64 _Z20pthread_mutex_unlockP15pthread_mutex_t_param_0
)                                       // @_Z20pthread_mutex_unlockP15pthread_mutex_t
{
	.local .align 8 .b8 	__local_depot1[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl2, __local_depot1;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_Z20pthread_mutex_unlockP15pthread_mutex_t_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_ZNSt3__16threadD2Ev
	.align	2
.visible .func _ZNSt3__16threadD2Ev(
	.param .b64 _ZNSt3__16threadD2Ev_param_0
)                                       // @_ZNSt3__16threadD2Ev
{
	.local .align 8 .b8 	__local_depot2[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	mov.u64 	%rl3, __local_depot2;
	cvta.local.u64 	%SP, %rl3;
	ld.param.u64 	%rl1, [_ZNSt3__16threadD2Ev_param_0];
	st.u64 	[%SP+0], %rl1;
	ld.u64 	%rl2, [%rl1];
	setp.eq.s64	%p1, %rl2, 0;
	@%p1 bra 	BB2_2;
	bra.uni 	BB2_1;
BB2_2:                                  // %if.end
	ret;
BB2_1:                                  // %if.then
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 0
}

	// .globl	_ZNSt3__16thread4joinEv
	.align	2
.visible .func _ZNSt3__16thread4joinEv(
	.param .b64 _ZNSt3__16thread4joinEv_param_0
)                                       // @_ZNSt3__16thread4joinEv
{
	.local .align 8 .b8 	__local_depot3[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<5>;
	.reg .s64 	%rl<18>;

// BB#0:                                // %entry
	mov.u64 	%rl17, __local_depot3;
	cvta.local.u64 	%SP, %rl17;
	ld.param.u64 	%rl3, [_ZNSt3__16thread4joinEv_param_0];
	st.u64 	[%SP+24], %rl3;
	ld.u64 	%rl7, [%rl3];
	mov.u64 	%rl8, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z12pthread_joinmPPv, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 1
	st.u32 	[%SP+32], %r1;
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB3_3;
	bra.uni 	BB3_1;
BB3_3:                                  // %if.end
	st.u64 	[%rl3], %rl8;
	ret;
BB3_1:                                  // %if.then
	mov.u64 	%rl5, .str;
	cvta.global.u64 	%rl1, %rl5;
	mov.u64 	%rl6, _ZTINSt3__112system_errorE;
	cvta.global.u64 	%rl2, %rl6;
	mov.u64 	%rl10, 32;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.u32 	%r2, [%SP+32];
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__115system_categoryEv, 
	(
	);
	ld.param.b64	%rl11, [retval0+0];
	
	//{
	}// Callseq End 3
	add.u64 	%rl12, %SP, 40;
	st.u64 	[%SP+0], %rl12;
	st.u32 	[%SP+8], %r2;
	st.u64 	[%SP+16], %rl11;
	ld.u64 	%rl13, [%SP+0];
	ld.u32 	%r3, [%SP+8];
	st.u32 	[%rl13], %r3;
	ld.u64 	%rl14, [%SP+16];
	st.u64 	[%rl13+8], %rl14;
	ld.u32 	%r4, [%SP+40];
	ld.u64 	%rl15, [%SP+48];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r4;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl1;
	call.uni 
	_ZNSt3__112system_errorC1ENS_10error_codeEPKc, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 4
// BB#2:                                // %invoke.cont
	mov.u64 	%rl16, _ZNSt3__112system_errorD1Ev;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl16;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 5
}

	// .globl	_ZNSt3__16thread6detachEv
	.align	2
.visible .func _ZNSt3__16thread6detachEv(
	.param .b64 _ZNSt3__16thread6detachEv_param_0
)                                       // @_ZNSt3__16thread6detachEv
{
	.local .align 8 .b8 	__local_depot4[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<7>;
	.reg .s64 	%rl<18>;

// BB#0:                                // %entry
	mov.u64 	%rl17, __local_depot4;
	cvta.local.u64 	%SP, %rl17;
	ld.param.u64 	%rl3, [_ZNSt3__16thread6detachEv_param_0];
	st.u64 	[%SP+24], %rl3;
	mov.u32 	%r1, 9943;
	st.u32 	[%SP+32], %r1;
	ld.u64 	%rl7, [%rl3];
	setp.eq.s64	%p1, %rl7, 0;
	@%p1 bra 	BB4_3;
// BB#1:                                // %if.then
	ld.u64 	%rl8, [%rl3];
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14pthread_detachm, 
	(
	param0
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 6
	st.u32 	[%SP+32], %r2;
	setp.ne.s32	%p2, %r2, 0;
	@%p2 bra 	BB4_3;
// BB#2:                                // %if.then4
	mov.u64 	%rl9, 0;
	st.u64 	[%rl3], %rl9;
BB4_3:                                  // %if.end6
	ld.u32 	%r3, [%SP+32];
	setp.eq.s32	%p3, %r3, 0;
	@%p3 bra 	BB4_6;
	bra.uni 	BB4_4;
BB4_6:                                  // %if.end9
	ret;
BB4_4:                                  // %if.then7
	mov.u64 	%rl5, .str1;
	cvta.global.u64 	%rl1, %rl5;
	mov.u64 	%rl6, _ZTINSt3__112system_errorE;
	cvta.global.u64 	%rl2, %rl6;
	mov.u64 	%rl10, 32;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 7
	ld.u32 	%r4, [%SP+32];
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__115system_categoryEv, 
	(
	);
	ld.param.b64	%rl11, [retval0+0];
	
	//{
	}// Callseq End 8
	add.u64 	%rl12, %SP, 40;
	st.u64 	[%SP+0], %rl12;
	st.u32 	[%SP+8], %r4;
	st.u64 	[%SP+16], %rl11;
	ld.u64 	%rl13, [%SP+0];
	ld.u32 	%r5, [%SP+8];
	st.u32 	[%rl13], %r5;
	ld.u64 	%rl14, [%SP+16];
	st.u64 	[%rl13+8], %rl14;
	ld.u32 	%r6, [%SP+40];
	ld.u64 	%rl15, [%SP+48];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r6;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl1;
	call.uni 
	_ZNSt3__112system_errorC1ENS_10error_codeEPKc, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 9
// BB#5:                                // %invoke.cont
	mov.u64 	%rl16, _ZNSt3__112system_errorD1Ev;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl16;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 10
}

	// .globl	_ZNSt3__16thread20hardware_concurrencyEv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNSt3__16thread20hardware_concurrencyEv(

)                                       // @_ZNSt3__16thread20hardware_concurrencyEv
{
	.reg .s32 	%r<2>;

// BB#0:                                // %entry
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE
.visible .func _ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE(
	.param .b64 _ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE_param_0
)                                       // @_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE
{
	.local .align 8 .b8 	__local_depot6[504];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<72>;

// BB#0:                                // %entry
	mov.u64 	%rl71, __local_depot6;
	cvta.local.u64 	%SP, %rl71;
	ld.param.u64 	%rl1, [_ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE_param_0];
	st.u64 	[%SP+448], %rl1;
	mov.u64 	%rl2, 0;
	st.u64 	[%SP+440], %rl2;
	add.u64 	%rl3, %SP, 432;
	st.u64 	[%SP+408], %rl3;
	add.u64 	%rl4, %SP, 440;
	st.u64 	[%SP+416], %rl4;
	st.u64 	[%SP+424], %rl2;
	ld.u64 	%rl5, [%SP+408];
	ld.u64 	%rl6, [%SP+416];
	ld.u64 	%rl7, [%rl6];
	st.u64 	[%rl5], %rl7;
	ld.u64 	%rl8, [%SP+432];
	st.u64 	[%SP+456], %rl8;
	st.u64 	[%SP+64], %rl1;
	add.u64 	%rl9, %SP, 456;
	st.u64 	[%SP+72], %rl9;
	ld.u64 	%rl10, [%SP+64];
	st.u64 	[%SP+40], %rl9;
	st.u64 	[%SP+48], %rl10;
	ld.u64 	%rl11, [%SP+40];
	add.u64 	%rl12, %SP, 56;
	st.u64 	[%SP+16], %rl12;
	st.u64 	[%SP+24], %rl11;
	st.u64 	[%SP+32], %rl10;
	ld.u64 	%rl13, [%SP+24];
	st.u64 	[%SP+8], %rl13;
	ld.u64 	%rl14, [%rl13];
	ld.u64 	%rl15, [%SP+32];
	st.u64 	[%SP+0], %rl15;
	ld.u64 	%rl16, [%rl15];
	setp.ge.s64	%p1, %rl14, %rl16;
	@%p1 bra 	BB6_5;
// BB#1:                                // %if.then
	ld.u64 	%rl17, [%SP+448];
	st.u64 	[%SP+152], %rl17;
	add.u64 	%rl18, %SP, 160;
	st.u64 	[%SP+120], %rl18;
	st.u64 	[%SP+128], %rl17;
	st.u64 	[%SP+104], %rl17;
	ld.u64 	%rl19, [%rl17];
	mul.hi.s64 	%rl20, %rl19, 1237940039285380275;
	shr.u64 	%rl21, %rl20, 63;
	shr.s64 	%rl22, %rl20, 26;
	add.s64 	%rl23, %rl22, %rl21;
	st.u64 	[%SP+136], %rl23;
	add.u64 	%rl24, %SP, 112;
	st.u64 	[%SP+80], %rl24;
	add.u64 	%rl25, %SP, 136;
	st.u64 	[%SP+88], %rl25;
	st.u64 	[%SP+96], %rl2;
	ld.u64 	%rl27, [%SP+80];
	ld.u64 	%rl28, [%SP+88];
	ld.u64 	%rl29, [%rl28];
	st.u64 	[%rl27], %rl29;
	ld.u64 	%rl30, [%SP+112];
	st.u64 	[%SP+144], %rl30;
	st.u64 	[%SP+464], %rl30;
	mov.u64 	%rl31, 9223372036854775807;
	st.u64 	[%SP+488], %rl31;
	add.u64 	%rl32, %SP, 464;
	st.u64 	[%SP+168], %rl32;
	ld.u64 	%rl33, [%SP+464];
	setp.eq.s64	%p2, %rl33, 9223372036854775807;
	@%p2 bra 	BB6_3;
// BB#2:                                // %if.then4
	st.u64 	[%SP+176], %rl32;
	ld.u64 	%rl37, [%SP+464];
	st.u64 	[%SP+472], %rl37;
	ld.u64 	%rl38, [%SP+448];
	st.u64 	[%SP+360], %rl38;
	st.u64 	[%SP+368], %rl32;
	ld.u64 	%rl39, [%SP+360];
	ld.u64 	%rl40, [%rl39];
	st.u64 	[%SP+384], %rl40;
	add.u64 	%rl41, %SP, 384;
	st.u64 	[%SP+344], %rl41;
	ld.u64 	%rl42, [%SP+384];
	ld.u64 	%rl43, [%SP+368];
	add.u64 	%rl44, %SP, 392;
	st.u64 	[%SP+280], %rl44;
	st.u64 	[%SP+288], %rl43;
	st.u64 	[%SP+296], %rl2;
	ld.u64 	%rl46, [%SP+280];
	ld.u64 	%rl47, [%SP+288];
	st.u64 	[%SP+264], %rl47;
	add.u64 	%rl48, %SP, 272;
	st.u64 	[%SP+232], %rl48;
	st.u64 	[%SP+240], %rl47;
	st.u64 	[%SP+216], %rl47;
	ld.u64 	%rl49, [%rl47];
	mul.lo.s64 	%rl50, %rl49, 1000000000;
	st.u64 	[%SP+248], %rl50;
	add.u64 	%rl51, %SP, 224;
	st.u64 	[%SP+192], %rl51;
	add.u64 	%rl52, %SP, 248;
	st.u64 	[%SP+200], %rl52;
	st.u64 	[%SP+208], %rl2;
	ld.u64 	%rl53, [%SP+192];
	ld.u64 	%rl54, [%SP+200];
	ld.u64 	%rl55, [%rl54];
	st.u64 	[%rl53], %rl55;
	ld.u64 	%rl56, [%SP+224];
	st.u64 	[%SP+256], %rl56;
	st.u64 	[%SP+304], %rl56;
	add.u64 	%rl57, %SP, 304;
	st.u64 	[%SP+184], %rl57;
	ld.u64 	%rl58, [%SP+304];
	st.u64 	[%rl46], %rl58;
	st.u64 	[%SP+312], %rl44;
	ld.u64 	%rl59, [%SP+392];
	sub.s64 	%rl60, %rl42, %rl59;
	st.u64 	[%SP+376], %rl60;
	add.u64 	%rl61, %SP, 352;
	st.u64 	[%SP+320], %rl61;
	add.u64 	%rl62, %SP, 376;
	st.u64 	[%SP+328], %rl62;
	st.u64 	[%SP+336], %rl2;
	ld.u64 	%rl63, [%SP+320];
	ld.u64 	%rl64, [%SP+328];
	ld.u64 	%rl65, [%rl64];
	st.u64 	[%rl63], %rl65;
	ld.u64 	%rl66, [%SP+352];
	st.u64 	[%SP+496], %rl66;
	add.u64 	%rl67, %SP, 496;
	st.u64 	[%SP+400], %rl67;
	ld.u64 	%rl68, [%SP+496];
	st.u64 	[%SP+480], %rl68;
	bra.uni 	BB6_4;
BB6_3:                                  // %if.else
	st.u64 	[%SP+472], %rl31;
	mov.u64 	%rl35, 999999999;
	st.u64 	[%SP+480], %rl35;
BB6_4:                                  // %if.end
	add.u64 	%rl69, %SP, 472;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl69;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9nanosleepPK8timespecPS_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 11
BB6_5:                                  // %if.end11
	ret;
}

	// .globl	_ZNSt3__119__thread_local_dataEv
.visible .func  (.param .b64 func_retval0) _ZNSt3__119__thread_local_dataEv(

)                                       // @_ZNSt3__119__thread_local_dataEv
{
	.local .align 8 .b8 	__local_depot7[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<9>;

// BB#0:                                // %entry
	mov.u64 	%rl8, __local_depot7;
	cvta.local.u64 	%SP, %rl8;
	mov.u64 	%rl4, _ZGVZNSt3__119__thread_local_dataEvE3__p;
	cvta.global.u64 	%rl1, %rl4;
	mov.u64 	%rl5, _ZZNSt3__119__thread_local_dataEvE3__p;
	cvta.global.u64 	%rl2, %rl5;
	ld.u8 	%rs1, [%rl1];
	setp.ne.s16	%p1, %rs1, 0;
	@%p1 bra 	BB7_4;
// BB#1:                                // %init.check
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_guard_acquire, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 12
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB7_4;
// BB#2:                                // %init
	mov.u64 	%rl6, __dso_handle;
	cvta.global.u64 	%rl3, %rl6;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 13
// BB#3:                                // %invoke.cont
	mov.u64 	%rl7, _ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_atexit, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 14
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	__cxa_guard_release, 
	(
	param0
	);
	
	//{
	}// Callseq End 15
BB7_4:                                  // %init.end
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	.weak	_ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev
	.align	2
.func _ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev(
	.param .b64 _ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev_param_0
)                                       // @_ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev
{
	.local .align 8 .b8 	__local_depot8[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<5>;
	.reg .s64 	%rl<16>;

// BB#0:                                // %entry
	mov.u64 	%rl15, __local_depot8;
	cvta.local.u64 	%SP, %rl15;
	ld.param.u64 	%rl4, [_ZNSt3__121__thread_specific_ptrINS_15__thread_structEEC2Ev_param_0];
	st.u64 	[%SP+24], %rl4;
	mov.u64 	%rl7, _ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl7;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_key_createPjPFvPvE, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 16
	st.u32 	[%SP+32], %r1;
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB8_3;
	bra.uni 	BB8_1;
BB8_3:                                  // %if.end
	ret;
BB8_1:                                  // %if.then
	mov.u64 	%rl5, .str3;
	cvta.global.u64 	%rl1, %rl5;
	mov.u64 	%rl6, _ZTINSt3__112system_errorE;
	cvta.global.u64 	%rl2, %rl6;
	mov.u64 	%rl8, 32;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl8;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl3, [retval0+0];
	
	//{
	}// Callseq End 17
	ld.u32 	%r2, [%SP+32];
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__115system_categoryEv, 
	(
	);
	ld.param.b64	%rl9, [retval0+0];
	
	//{
	}// Callseq End 18
	add.u64 	%rl10, %SP, 40;
	st.u64 	[%SP+0], %rl10;
	st.u32 	[%SP+8], %r2;
	st.u64 	[%SP+16], %rl9;
	ld.u64 	%rl11, [%SP+0];
	ld.u32 	%r3, [%SP+8];
	st.u32 	[%rl11], %r3;
	ld.u64 	%rl12, [%SP+16];
	st.u64 	[%rl11+8], %rl12;
	ld.u32 	%r4, [%SP+40];
	ld.u64 	%rl13, [%SP+48];
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b32 param1;
	st.param.b32	[param1+0], %r4;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl1;
	call.uni 
	_ZNSt3__112system_errorC1ENS_10error_codeEPKc, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 19
// BB#2:                                // %invoke.cont
	mov.u64 	%rl14, _ZNSt3__112system_errorD1Ev;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl14;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 20
}

	.weak	_ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev
	.align	2
.func _ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev(
	.param .b64 _ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev_param_0
)                                       // @_ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev
{
	.local .align 8 .b8 	__local_depot9[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl2, __local_depot9;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__121__thread_specific_ptrINS_15__thread_structEED2Ev_param_0];
	st.u64 	[%SP+0], %rl1;
	ld.u32 	%r1, [%rl1];
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_key_deletej, 
	(
	param0
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 21
// BB#1:                                // %invoke.cont
	ret;
}

	.hidden	_ZNSt3__119__thread_struct_impD2Ev
	// .globl	_ZNSt3__119__thread_struct_impD2Ev
	.align	2
.visible .func _ZNSt3__119__thread_struct_impD2Ev(
	.param .b64 _ZNSt3__119__thread_struct_impD2Ev_param_0
)                                       // @_ZNSt3__119__thread_struct_impD2Ev
{
	.local .align 8 .b8 	__local_depot10[424];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<50>;

// BB#0:                                // %entry
	mov.u64 	%rl49, __local_depot10;
	cvta.local.u64 	%SP, %rl49;
	ld.param.u64 	%rl1, [_ZNSt3__119__thread_struct_impD2Ev_param_0];
	st.u64 	[%SP+368], %rl1;
	add.s64 	%rl2, %rl1, 24;
	st.u64 	[%SP+360], %rl2;
	ld.u64 	%rl3, [%rl1+24];
	st.u64 	[%SP+336], %rl2;
	st.u64 	[%SP+344], %rl3;
	add.u64 	%rl4, %SP, 328;
	st.u64 	[%SP+312], %rl4;
	st.u64 	[%SP+320], %rl3;
	ld.u64 	%rl5, [%SP+312];
	st.u64 	[%rl5], %rl3;
	ld.u64 	%rl6, [%SP+328];
	st.u64 	[%SP+352], %rl6;
	st.u64 	[%SP+376], %rl6;
	st.u64 	[%SP+304], %rl2;
	ld.u64 	%rl7, [%rl1+32];
	st.u64 	[%SP+280], %rl2;
	st.u64 	[%SP+288], %rl7;
	add.u64 	%rl8, %SP, 272;
	st.u64 	[%SP+256], %rl8;
	st.u64 	[%SP+264], %rl7;
	ld.u64 	%rl9, [%SP+256];
	st.u64 	[%rl9], %rl7;
	ld.u64 	%rl10, [%SP+272];
	st.u64 	[%SP+296], %rl10;
	st.u64 	[%SP+384], %rl10;
	bra.uni 	BB10_1;
BB10_2:                                 // %for.inc
                                        //   in Loop: Header=BB10_1 Depth=1
	st.u64 	[%SP+200], %rl11;
	ld.u64 	%rl43, [%SP+376];
	ld.u64 	%rl44, [%rl43+8];
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl44;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 26
	st.u64 	[%SP+192], %rl11;
	ld.u64 	%rl45, [%SP+376];
	ld.u64 	%rl46, [%rl45];
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl46;
	call.uni 
	_ZNSt3__118condition_variable10notify_allEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 27
	st.u64 	[%SP+184], %rl11;
	ld.u64 	%rl47, [%SP+376];
	add.s64 	%rl48, %rl47, 16;
	st.u64 	[%SP+376], %rl48;
BB10_1:                                 // %for.cond
                                        // =>This Inner Loop Header: Depth=1
	add.u64 	%rl11, %SP, 376;
	st.u64 	[%SP+240], %rl11;
	add.u64 	%rl12, %SP, 384;
	st.u64 	[%SP+248], %rl12;
	ld.u64 	%rl13, [%SP+240];
	st.u64 	[%SP+224], %rl13;
	st.u64 	[%SP+232], %rl12;
	ld.u64 	%rl14, [%SP+224];
	st.u64 	[%SP+216], %rl14;
	ld.u64 	%rl15, [%rl14];
	ld.u64 	%rl16, [%SP+232];
	st.u64 	[%SP+208], %rl16;
	ld.u64 	%rl17, [%rl16];
	setp.eq.s64	%p1, %rl15, %rl17;
	@%p1 bra 	BB10_3;
	bra.uni 	BB10_2;
BB10_3:                                 // %for.end
	st.u64 	[%SP+48], %rl1;
	ld.u64 	%rl18, [%rl1];
	st.u64 	[%SP+24], %rl1;
	st.u64 	[%SP+32], %rl18;
	add.u64 	%rl19, %SP, 16;
	st.u64 	[%SP+0], %rl19;
	st.u64 	[%SP+8], %rl18;
	ld.u64 	%rl20, [%SP+0];
	st.u64 	[%rl20], %rl18;
	ld.u64 	%rl21, [%SP+16];
	st.u64 	[%SP+40], %rl21;
	st.u64 	[%SP+392], %rl21;
	st.u64 	[%SP+104], %rl1;
	ld.u64 	%rl22, [%rl1+8];
	st.u64 	[%SP+80], %rl1;
	st.u64 	[%SP+88], %rl22;
	add.u64 	%rl23, %SP, 72;
	st.u64 	[%SP+56], %rl23;
	st.u64 	[%SP+64], %rl22;
	ld.u64 	%rl24, [%SP+56];
	st.u64 	[%rl24], %rl22;
	ld.u64 	%rl25, [%SP+72];
	st.u64 	[%SP+96], %rl25;
	st.u64 	[%SP+400], %rl25;
	bra.uni 	BB10_4;
BB10_5:                                 // %for.body15
                                        //   in Loop: Header=BB10_4 Depth=1
	st.u64 	[%SP+160], %rl26;
	ld.u64 	%rl35, [%SP+392];
	ld.u64 	%rl36, [%rl35];
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl36;
	call.uni 
	_ZNSt3__117__assoc_sub_state12__make_readyEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 24
// BB#6:                                // %for.inc19
                                        //   in Loop: Header=BB10_4 Depth=1
	st.u64 	[%SP+168], %rl26;
	ld.u64 	%rl38, [%SP+392];
	ld.u64 	%rl39, [%rl38];
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl39;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZNSt3__114__shared_count16__release_sharedEv, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 25
	st.u64 	[%SP+176], %rl26;
	ld.u64 	%rl40, [%SP+392];
	add.s64 	%rl41, %rl40, 8;
	st.u64 	[%SP+392], %rl41;
BB10_4:                                 // %for.cond13
                                        // =>This Inner Loop Header: Depth=1
	add.u64 	%rl26, %SP, 392;
	st.u64 	[%SP+144], %rl26;
	add.u64 	%rl27, %SP, 400;
	st.u64 	[%SP+152], %rl27;
	ld.u64 	%rl28, [%SP+144];
	st.u64 	[%SP+128], %rl28;
	st.u64 	[%SP+136], %rl27;
	ld.u64 	%rl29, [%SP+128];
	st.u64 	[%SP+120], %rl29;
	ld.u64 	%rl30, [%rl29];
	ld.u64 	%rl31, [%SP+136];
	st.u64 	[%SP+112], %rl31;
	ld.u64 	%rl32, [%rl31];
	setp.eq.s64	%p2, %rl30, %rl32;
	@%p2 bra 	BB10_7;
	bra.uni 	BB10_5;
BB10_7:                                 // %for.end21
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 22
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 23
	ret;
}

	.hidden	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
	.weak	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
	.align	2
.func _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev(
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev_param_0
)                                       // @_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
{
	.local .align 8 .b8 	__local_depot11[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl2, __local_depot11;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 28
	ret;
}

	.hidden	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
	.weak	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
	.align	2
.func _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev(
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev_param_0
)                                       // @_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
{
	.local .align 8 .b8 	__local_depot12[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl2, __local_depot12;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 29
	ret;
}

	.hidden	__clang_call_terminate
	.weak	__clang_call_terminate
.func __clang_call_terminate(
	.param .b64 __clang_call_terminate_param_0
)                                       // @__clang_call_terminate
{
	.reg .s64 	%rl<3>;

// BB#0:
	ld.param.u64 	%rl1, [__clang_call_terminate_param_0];
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_begin_catch, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 30
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 31
}

	.hidden	_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE
	// .globl	_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE
	.align	2
.visible .func _ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE(
	.param .b64 _ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_0,
	.param .b64 _ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_1,
	.param .b64 _ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_2
)                                       // @_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE
{
	.local .align 8 .b8 	__local_depot14[256];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s64 	%rl<32>;

// BB#0:                                // %entry
	mov.u64 	%rl31, __local_depot14;
	cvta.local.u64 	%SP, %rl31;
	ld.param.u64 	%rl4, [_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_0];
	ld.param.u64 	%rl5, [_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_1];
	ld.param.u64 	%rl6, [_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_2];
	st.u64 	[%SP+216], %rl4;
	st.u64 	[%SP+224], %rl5;
	st.u64 	[%SP+232], %rl6;
	ld.u64 	%rl7, [%SP+216];
	add.s64 	%rl8, %rl7, 24;
	add.u64 	%rl9, %SP, 240;
	st.u64 	[%SP+192], %rl9;
	add.u64 	%rl10, %SP, 224;
	st.u64 	[%SP+200], %rl10;
	add.u64 	%rl11, %SP, 232;
	st.u64 	[%SP+208], %rl11;
	ld.u64 	%rl12, [%SP+192];
	ld.u64 	%rl13, [%SP+200];
	st.u64 	[%SP+184], %rl13;
	ld.u64 	%rl14, [%rl13];
	st.u64 	[%rl12], %rl14;
	ld.u64 	%rl15, [%SP+208];
	st.u64 	[%SP+176], %rl15;
	ld.u64 	%rl16, [%rl15];
	st.u64 	[%rl12+8], %rl16;
	st.u64 	[%SP+160], %rl8;
	st.u64 	[%SP+168], %rl9;
	ld.u64 	%rl1, [%SP+160];
	ld.u64 	%rl17, [%rl1+8];
	st.u64 	[%SP+152], %rl1;
	add.s64 	%rl18, %rl1, 16;
	st.u64 	[%SP+144], %rl18;
	st.u64 	[%SP+136], %rl18;
	ld.u64 	%rl19, [%rl1+16];
	setp.ge.u64	%p1, %rl17, %rl19;
	@%p1 bra 	BB14_4;
// BB#1:                                // %if.then.i
	st.u64 	[%SP+128], %rl1;
	st.u64 	[%SP+120], %rl18;
	st.u64 	[%SP+112], %rl18;
	ld.u64 	%rl22, [%rl1+8];
	st.u64 	[%SP+0], %rl22;
	ld.u64 	%rl23, [%SP+168];
	st.u64 	[%SP+8], %rl23;
	st.u64 	[%SP+64], %rl18;
	st.u64 	[%SP+72], %rl22;
	st.u64 	[%SP+80], %rl23;
	ld.u64 	%rl24, [%SP+64];
	ld.u64 	%rl25, [%SP+72];
	st.u64 	[%SP+56], %rl23;
	ld.u8 	%rs1, [%SP+88];
	st.u8 	[%SP+24], %rs1;
	st.u64 	[%SP+32], %rl24;
	st.u64 	[%SP+40], %rl25;
	st.u64 	[%SP+48], %rl23;
	ld.u64 	%rl2, [%SP+40];
	setp.eq.s64	%p2, %rl2, 0;
	@%p2 bra 	BB14_3;
// BB#2:                                // %new.notnull.i.i.i
	ld.u64 	%rl26, [%SP+48];
	st.u64 	[%SP+16], %rl26;
	ld.u64 	%rl27, [%rl26+8];
	st.u64 	[%rl2+8], %rl27;
	ld.u64 	%rl28, [%rl26];
	st.u64 	[%rl2], %rl28;
BB14_3:                                 // %_ZNSt3__116allocator_traitsINS_18__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEEEE9constructIS7_JS7_EEEvRS8_PT_DpOT0_.exit.i
	ld.u64 	%rl29, [%rl1+8];
	add.s64 	%rl30, %rl29, 16;
	st.u64 	[%rl1+8], %rl30;
	bra.uni 	BB14_5;
BB14_4:                                 // %if.else.i
	ld.u64 	%rl20, [%SP+168];
	st.u64 	[%SP+104], %rl20;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl20;
	call.uni 
	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 32
BB14_5:                                 // %_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE9push_backEOS6_.exit
	ret;
}

	.hidden	_ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE
	// .globl	_ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE
	.align	2
.visible .func _ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE(
	.param .b64 _ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_0,
	.param .b64 _ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_1
)                                       // @_ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE
{
	.local .align 8 .b8 	__local_depot15[176];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s64 	%rl<23>;

// BB#0:                                // %entry
	mov.u64 	%rl22, __local_depot15;
	cvta.local.u64 	%SP, %rl22;
	ld.param.u64 	%rl4, [_ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_0];
	ld.param.u64 	%rl5, [_ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_1];
	st.u64 	[%SP+160], %rl4;
	st.u64 	[%SP+168], %rl5;
	ld.u64 	%rl6, [%SP+160];
	st.u64 	[%SP+144], %rl6;
	add.u64 	%rl7, %SP, 168;
	st.u64 	[%SP+152], %rl7;
	ld.u64 	%rl1, [%SP+144];
	ld.u64 	%rl8, [%rl1+8];
	st.u64 	[%SP+136], %rl1;
	add.s64 	%rl9, %rl1, 16;
	st.u64 	[%SP+128], %rl9;
	st.u64 	[%SP+120], %rl9;
	ld.u64 	%rl10, [%rl1+16];
	setp.eq.s64	%p1, %rl8, %rl10;
	@%p1 bra 	BB15_4;
// BB#1:                                // %if.then.i
	st.u64 	[%SP+112], %rl1;
	st.u64 	[%SP+104], %rl9;
	st.u64 	[%SP+96], %rl9;
	ld.u64 	%rl13, [%rl1+8];
	st.u64 	[%SP+0], %rl13;
	ld.u64 	%rl14, [%SP+152];
	st.u64 	[%SP+56], %rl9;
	st.u64 	[%SP+64], %rl13;
	st.u64 	[%SP+72], %rl14;
	ld.u64 	%rl15, [%SP+56];
	ld.u64 	%rl16, [%SP+64];
	st.u64 	[%SP+48], %rl14;
	ld.u8 	%rs1, [%SP+80];
	st.u8 	[%SP+16], %rs1;
	st.u64 	[%SP+24], %rl15;
	st.u64 	[%SP+32], %rl16;
	st.u64 	[%SP+40], %rl14;
	ld.u64 	%rl2, [%SP+32];
	setp.eq.s64	%p2, %rl2, 0;
	@%p2 bra 	BB15_3;
// BB#2:                                // %new.notnull.i.i.i
	ld.u64 	%rl17, [%SP+40];
	st.u64 	[%SP+8], %rl17;
	ld.u64 	%rl18, [%rl17];
	st.u64 	[%rl2], %rl18;
BB15_3:                                 // %_ZNSt3__116allocator_traitsINS_18__hidden_allocatorIPNS_17__assoc_sub_stateEEEE9constructIS3_JRKS3_EEEvRS4_PT_DpOT0_.exit.i
	ld.u64 	%rl19, [%rl1+8];
	add.s64 	%rl20, %rl19, 8;
	st.u64 	[%rl1+8], %rl20;
	bra.uni 	BB15_5;
BB15_4:                                 // %if.else.i
	ld.u64 	%rl11, [%SP+152];
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl11;
	call.uni 
	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 33
BB15_5:                                 // %_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE9push_backERKS2_.exit
	ld.u64 	%rl21, [%SP+168];
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl21;
	call.uni 
	_ZNSt3__114__shared_count12__add_sharedEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 34
	ret;
}

	// .globl	_ZNSt3__115__thread_structC2Ev
	.align	2
.visible .func _ZNSt3__115__thread_structC2Ev(
	.param .b64 _ZNSt3__115__thread_structC2Ev_param_0
)                                       // @_ZNSt3__115__thread_structC2Ev
{
	.local .align 8 .b8 	__local_depot16[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<5>;

// BB#0:                                // %entry
	mov.u64 	%rl4, __local_depot16;
	cvta.local.u64 	%SP, %rl4;
	ld.param.u64 	%rl1, [_ZNSt3__115__thread_structC2Ev_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u64 	%rl3, 48;
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 retval0;
	call.uni (retval0), 
	_Znwy, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 35
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__119__thread_struct_impC2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 36
// BB#1:                                // %invoke.cont
	st.u64 	[%rl1], %rl2;
	ret;
}

	.hidden	_ZNSt3__119__thread_struct_impC2Ev
	.weak	_ZNSt3__119__thread_struct_impC2Ev
	.align	2
.func _ZNSt3__119__thread_struct_impC2Ev(
	.param .b64 _ZNSt3__119__thread_struct_impC2Ev_param_0
)                                       // @_ZNSt3__119__thread_struct_impC2Ev
{
	.local .align 8 .b8 	__local_depot17[152];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<19>;

// BB#0:                                // %entry
	mov.u64 	%rl18, __local_depot17;
	cvta.local.u64 	%SP, %rl18;
	ld.param.u64 	%rl1, [_ZNSt3__119__thread_struct_impC2Ev_param_0];
	st.u64 	[%SP+144], %rl1;
	st.u64 	[%SP+136], %rl1;
	st.u64 	[%SP+128], %rl1;
	st.u64 	[%SP+120], %rl1;
	mov.u64 	%rl2, 0;
	st.u64 	[%rl1], %rl2;
	st.u64 	[%rl1+8], %rl2;
	add.s64 	%rl3, %rl1, 16;
	st.u64 	[%SP+104], %rl3;
	st.u64 	[%SP+112], %rl2;
	ld.u64 	%rl4, [%SP+104];
	add.u64 	%rl5, %SP, 112;
	st.u64 	[%SP+96], %rl5;
	ld.u64 	%rl6, [%SP+112];
	st.u64 	[%SP+80], %rl4;
	st.u64 	[%SP+88], %rl6;
	ld.u64 	%rl7, [%SP+80];
	add.u64 	%rl8, %SP, 88;
	st.u64 	[%SP+72], %rl8;
	ld.u64 	%rl9, [%SP+88];
	st.u64 	[%rl7], %rl9;
	add.s64 	%rl10, %rl1, 24;
	st.u64 	[%SP+64], %rl10;
	st.u64 	[%SP+56], %rl10;
	st.u64 	[%SP+48], %rl10;
	st.u64 	[%rl1+24], %rl2;
	st.u64 	[%rl1+32], %rl2;
	add.s64 	%rl11, %rl1, 40;
	st.u64 	[%SP+32], %rl11;
	st.u64 	[%SP+40], %rl2;
	ld.u64 	%rl12, [%SP+32];
	add.u64 	%rl13, %SP, 40;
	st.u64 	[%SP+24], %rl13;
	ld.u64 	%rl14, [%SP+40];
	st.u64 	[%SP+8], %rl12;
	st.u64 	[%SP+16], %rl14;
	ld.u64 	%rl15, [%SP+8];
	add.u64 	%rl16, %SP, 16;
	st.u64 	[%SP+0], %rl16;
	ld.u64 	%rl17, [%SP+16];
	st.u64 	[%rl15], %rl17;
	ret;
}

	// .globl	_ZNSt3__115__thread_structD2Ev
	.align	2
.visible .func _ZNSt3__115__thread_structD2Ev(
	.param .b64 _ZNSt3__115__thread_structD2Ev_param_0
)                                       // @_ZNSt3__115__thread_structD2Ev
{
	.local .align 8 .b8 	__local_depot18[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	mov.u64 	%rl3, __local_depot18;
	cvta.local.u64 	%SP, %rl3;
	ld.param.u64 	%rl2, [_ZNSt3__115__thread_structD2Ev_param_0];
	st.u64 	[%SP+0], %rl2;
	ld.u64 	%rl1, [%rl2];
	setp.eq.s64	%p1, %rl1, 0;
	@%p1 bra 	BB18_2;
// BB#1:                                // %delete.notnull
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__119__thread_struct_impD1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 37
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 38
BB18_2:                                 // %delete.end
	ret;
}

	// .globl	_ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE
	.align	2
.visible .func _ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE(
	.param .b64 _ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_0,
	.param .b64 _ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_1,
	.param .b64 _ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_2
)                                       // @_ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE
{
	.local .align 8 .b8 	__local_depot19[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<8>;

// BB#0:                                // %entry
	mov.u64 	%rl7, __local_depot19;
	cvta.local.u64 	%SP, %rl7;
	ld.param.u64 	%rl1, [_ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_1];
	ld.param.u64 	%rl3, [_ZNSt3__115__thread_struct25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE_param_2];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	st.u64 	[%SP+16], %rl3;
	ld.u64 	%rl4, [%SP+0];
	ld.u64 	%rl5, [%rl4];
	ld.u64 	%rl6, [%SP+8];
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl6;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl3;
	call.uni 
	_ZNSt3__119__thread_struct_imp25notify_all_at_thread_exitEPNS_18condition_variableEPNS_5mutexE, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 39
	ret;
}

	// .globl	_ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE
	.align	2
.visible .func _ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE(
	.param .b64 _ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_0,
	.param .b64 _ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_1
)                                       // @_ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE
{
	.local .align 8 .b8 	__local_depot20[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	mov.u64 	%rl5, __local_depot20;
	cvta.local.u64 	%SP, %rl5;
	ld.param.u64 	%rl1, [_ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__115__thread_struct27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE_param_1];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	ld.u64 	%rl3, [%SP+0];
	ld.u64 	%rl4, [%rl3];
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	call.uni 
	_ZNSt3__119__thread_struct_imp27__make_ready_at_thread_exitEPNS_17__assoc_sub_stateE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 40
	ret;
}

	.hidden	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
	.weak	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
	.align	2
.func _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT__param_0,
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT__param_1
)                                       // @_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_
{
	.local .align 8 .b8 	__local_depot21[384];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s16 	%rs<3>;
	.reg .s64 	%rl<58>;

// BB#0:                                // %entry
	mov.u64 	%rl57, __local_depot21;
	cvta.local.u64 	%SP, %rl57;
	ld.param.u64 	%rl8, [_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT__param_0];
	ld.param.u64 	%rl9, [_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT__param_1];
	st.u64 	[%SP+304], %rl8;
	st.u64 	[%SP+312], %rl9;
	ld.u64 	%rl1, [%SP+304];
	st.u64 	[%SP+296], %rl1;
	add.s64 	%rl10, %rl1, 16;
	st.u64 	[%SP+288], %rl10;
	st.u64 	[%SP+280], %rl10;
	st.u64 	[%SP+320], %rl10;
	st.u64 	[%SP+272], %rl1;
	ld.u64 	%rl11, [%rl1+8];
	ld.u64 	%rl12, [%rl1];
	sub.s64 	%rl13, %rl11, %rl12;
	shr.s64 	%rl14, %rl13, 3;
	add.s64 	%rl15, %rl14, 1;
	st.u64 	[%SP+232], %rl1;
	st.u64 	[%SP+240], %rl15;
	ld.u64 	%rl2, [%SP+232];
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv, 
	(
	param0
	);
	ld.param.b64	%rl16, [retval0+0];
	
	//{
	}// Callseq End 41
	st.u64 	[%SP+248], %rl16;
	ld.u64 	%rl17, [%SP+240];
	setp.le.u64	%p1, %rl17, %rl16;
	@%p1 bra 	BB21_2;
// BB#1:                                // %if.then.i
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 42
BB21_2:                                 // %if.end.i
	st.u64 	[%SP+216], %rl2;
	st.u64 	[%SP+208], %rl2;
	st.u64 	[%SP+200], %rl2;
	add.s64 	%rl18, %rl2, 16;
	st.u64 	[%SP+192], %rl18;
	st.u64 	[%SP+184], %rl18;
	ld.u64 	%rl19, [%rl2+16];
	ld.u64 	%rl20, [%rl2];
	sub.s64 	%rl21, %rl19, %rl20;
	shr.s64 	%rl22, %rl21, 3;
	st.u64 	[%SP+256], %rl22;
	ld.u64 	%rl23, [%SP+248];
	shr.u64 	%rl24, %rl23, 1;
	setp.lt.u64	%p2, %rl22, %rl24;
	@%p2 bra 	BB21_4;
// BB#3:                                // %if.then4.i
	ld.u64 	%rl37, [%SP+248];
	st.u64 	[%SP+224], %rl37;
	bra.uni 	BB21_8;
BB21_4:                                 // %if.end5.i
	ld.u64 	%rl25, [%SP+256];
	shl.b64 	%rl26, %rl25, 1;
	st.u64 	[%SP+264], %rl26;
	add.u64 	%rl27, %SP, 264;
	st.u64 	[%SP+160], %rl27;
	add.u64 	%rl28, %SP, 240;
	st.u64 	[%SP+168], %rl28;
	ld.u64 	%rl29, [%SP+160];
	ld.u8 	%rs1, [%SP+176];
	st.u64 	[%SP+136], %rl29;
	st.u64 	[%SP+144], %rl28;
	st.u8 	[%SP+152], %rs1;
	ld.u64 	%rl30, [%SP+136];
	ld.u64 	%rl31, [%SP+144];
	add.u64 	%rl32, %SP, 152;
	st.u64 	[%SP+112], %rl32;
	st.u64 	[%SP+120], %rl30;
	st.u64 	[%SP+128], %rl31;
	ld.u64 	%rl33, [%SP+120];
	ld.u64 	%rl34, [%rl33];
	ld.u64 	%rl35, [%rl31];
	setp.ge.u64	%p3, %rl34, %rl35;
	@%p3 bra 	BB21_6;
// BB#5:                                // %cond.true.i.i.i
	ld.u64 	%rl56, [%SP+144];
	bra.uni 	BB21_7;
BB21_6:                                 // %cond.false.i.i.i
	ld.u64 	%rl56, [%SP+136];
BB21_7:                                 // %_ZNSt3__13maxIyEERKT_S3_S3_.exit.i
	ld.u64 	%rl36, [%rl56];
	st.u64 	[%SP+224], %rl36;
BB21_8:                                 // %_ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE11__recommendEy.exit
	ld.u64 	%rl38, [%SP+224];
	st.u64 	[%SP+104], %rl1;
	ld.u64 	%rl39, [%rl1+8];
	ld.u64 	%rl40, [%rl1];
	sub.s64 	%rl41, %rl39, %rl40;
	shr.s64 	%rl42, %rl41, 3;
	ld.u64 	%rl43, [%SP+320];
	add.u64 	%rl44, %SP, 328;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl38;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl42;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl43;
	call.uni 
	_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 43
	ld.u64 	%rl45, [%SP+320];
	ld.u64 	%rl46, [%SP+344];
	st.u64 	[%SP+96], %rl46;
	ld.u64 	%rl47, [%SP+312];
	st.u64 	[%SP+88], %rl47;
	st.u64 	[%SP+48], %rl45;
	st.u64 	[%SP+56], %rl46;
	st.u64 	[%SP+64], %rl47;
	ld.u64 	%rl48, [%SP+48];
	ld.u64 	%rl49, [%SP+56];
	st.u64 	[%SP+40], %rl47;
	ld.u8 	%rs2, [%SP+72];
	st.u8 	[%SP+8], %rs2;
	st.u64 	[%SP+16], %rl48;
	st.u64 	[%SP+24], %rl49;
	st.u64 	[%SP+32], %rl47;
	ld.u64 	%rl6, [%SP+24];
	setp.eq.s64	%p4, %rl6, 0;
	@%p4 bra 	BB21_10;
// BB#9:                                // %new.notnull.i.i
	ld.u64 	%rl50, [%SP+32];
	st.u64 	[%SP+0], %rl50;
	ld.u64 	%rl51, [%rl50];
	st.u64 	[%rl6], %rl51;
BB21_10:                                // %invoke.cont
	ld.u64 	%rl52, [%SP+344];
	add.s64 	%rl53, %rl52, 8;
	st.u64 	[%SP+344], %rl53;
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl44;
	call.uni 
	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 44
// BB#11:                               // %invoke.cont8
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl44;
	call.uni 
	_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 45
	ret;
}

	.hidden	_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5_
	.weak	_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5_
	.align	2
.func _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5_(
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_0,
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_1,
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_2,
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_3
)                                       // @_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5_
{
	.local .align 8 .b8 	__local_depot22[176];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<33>;

// BB#0:                                // %entry
	mov.u64 	%rl32, __local_depot22;
	cvta.local.u64 	%SP, %rl32;
	ld.param.u64 	%rl5, [_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_0];
	ld.param.u64 	%rl6, [_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_1];
	ld.param.u64 	%rl7, [_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_2];
	ld.param.u64 	%rl8, [_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEEC2EyyS5__param_3];
	st.u64 	[%SP+144], %rl5;
	st.u64 	[%SP+152], %rl6;
	st.u64 	[%SP+160], %rl7;
	st.u64 	[%SP+168], %rl8;
	ld.u64 	%rl1, [%SP+144];
	add.s64 	%rl9, %rl1, 24;
	st.u64 	[%SP+120], %rl9;
	mov.u64 	%rl31, 0;
	st.u64 	[%SP+128], %rl31;
	st.u64 	[%SP+136], %rl8;
	ld.u64 	%rl10, [%SP+120];
	add.u64 	%rl11, %SP, 128;
	st.u64 	[%SP+112], %rl11;
	ld.u64 	%rl12, [%SP+128];
	ld.u64 	%rl13, [%SP+136];
	st.u64 	[%SP+64], %rl13;
	st.u64 	[%SP+88], %rl10;
	st.u64 	[%SP+96], %rl12;
	st.u64 	[%SP+104], %rl13;
	ld.u64 	%rl14, [%SP+88];
	add.u64 	%rl15, %SP, 96;
	st.u64 	[%SP+80], %rl15;
	ld.u64 	%rl16, [%SP+96];
	st.u64 	[%rl14], %rl16;
	ld.u64 	%rl17, [%SP+104];
	st.u64 	[%SP+72], %rl17;
	st.u64 	[%rl14+8], %rl17;
	ld.u64 	%rl18, [%SP+152];
	setp.eq.s64	%p1, %rl18, 0;
	@%p1 bra 	BB22_2;
// BB#1:                                // %cond.true
	st.u64 	[%SP+16], %rl1;
	st.u64 	[%SP+8], %rl9;
	st.u64 	[%SP+0], %rl9;
	ld.u64 	%rl20, [%rl1+32];
	ld.u64 	%rl21, [%SP+152];
	st.u64 	[%SP+24], %rl20;
	st.u64 	[%SP+32], %rl21;
	ld.u64 	%rl22, [%SP+24];
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl21;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl31, [retval0+0];
	
	//{
	}// Callseq End 46
BB22_2:                                 // %cond.end
	st.u64 	[%rl1], %rl31;
	ld.u64 	%rl23, [%SP+160];
	shl.b64 	%rl24, %rl23, 3;
	add.s64 	%rl25, %rl31, %rl24;
	st.u64 	[%rl1+16], %rl25;
	st.u64 	[%rl1+8], %rl25;
	ld.u64 	%rl26, [%rl1];
	ld.u64 	%rl27, [%SP+152];
	shl.b64 	%rl28, %rl27, 3;
	add.s64 	%rl29, %rl26, %rl28;
	st.u64 	[%SP+56], %rl1;
	st.u64 	[%SP+48], %rl9;
	st.u64 	[%SP+40], %rl9;
	st.u64 	[%rl1+24], %rl29;
	ret;
}

	.hidden	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE
	.weak	_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE
	.align	2
.func _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE_param_0,
	.param .b64 _ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE_param_1
)                                       // @_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE
{
	.local .align 8 .b8 	__local_depot23[280];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<57>;

// BB#0:                                // %entry
	mov.u64 	%rl56, __local_depot23;
	cvta.local.u64 	%SP, %rl56;
	ld.param.u64 	%rl1, [_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE_param_1];
	st.u64 	[%SP+264], %rl1;
	st.u64 	[%SP+272], %rl2;
	ld.u64 	%rl3, [%SP+264];
	st.u64 	[%SP+256], %rl3;
	add.s64 	%rl4, %rl3, 16;
	st.u64 	[%SP+248], %rl4;
	st.u64 	[%SP+240], %rl4;
	ld.u64 	%rl5, [%rl3];
	add.s64 	%rl6, %rl3, 8;
	ld.u64 	%rl7, [%rl3+8];
	ld.u64 	%rl8, [%SP+272];
	add.s64 	%rl9, %rl8, 8;
	st.u64 	[%SP+0], %rl4;
	st.u64 	[%SP+8], %rl5;
	st.u64 	[%SP+16], %rl7;
	st.u64 	[%SP+24], %rl9;
	ld.u64 	%rl10, [%SP+16];
	ld.u64 	%rl11, [%SP+8];
	sub.s64 	%rl12, %rl10, %rl11;
	shr.s64 	%rl13, %rl12, 3;
	st.u64 	[%SP+32], %rl13;
	ld.u64 	%rl14, [%SP+24];
	ld.u64 	%rl15, [%rl14];
	and.b64  	%rl16, %rl12, -8;
	sub.s64 	%rl17, %rl15, %rl16;
	st.u64 	[%rl14], %rl17;
	ld.u64 	%rl18, [%SP+24];
	ld.u64 	%rl19, [%rl18];
	ld.u64 	%rl20, [%SP+8];
	ld.u64 	%rl21, [%SP+32];
	shl.b64 	%rl22, %rl21, 3;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl20;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl22;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl23, [retval0+0];
	
	//{
	}// Callseq End 47
	ld.u64 	%rl24, [%SP+272];
	add.s64 	%rl25, %rl24, 8;
	st.u64 	[%SP+64], %rl3;
	st.u64 	[%SP+72], %rl25;
	ld.u64 	%rl26, [%SP+64];
	st.u64 	[%SP+56], %rl26;
	ld.u64 	%rl27, [%rl26];
	st.u64 	[%SP+80], %rl27;
	ld.u64 	%rl28, [%SP+72];
	st.u64 	[%SP+40], %rl28;
	ld.u64 	%rl29, [%rl28];
	ld.u64 	%rl30, [%SP+64];
	st.u64 	[%rl30], %rl29;
	add.u64 	%rl31, %SP, 80;
	st.u64 	[%SP+48], %rl31;
	ld.u64 	%rl32, [%SP+80];
	ld.u64 	%rl33, [%SP+72];
	st.u64 	[%rl33], %rl32;
	ld.u64 	%rl34, [%SP+272];
	add.s64 	%rl35, %rl34, 16;
	st.u64 	[%SP+112], %rl6;
	st.u64 	[%SP+120], %rl35;
	ld.u64 	%rl36, [%SP+112];
	st.u64 	[%SP+104], %rl36;
	ld.u64 	%rl37, [%rl36];
	st.u64 	[%SP+128], %rl37;
	ld.u64 	%rl38, [%SP+120];
	st.u64 	[%SP+88], %rl38;
	ld.u64 	%rl39, [%rl38];
	ld.u64 	%rl40, [%SP+112];
	st.u64 	[%rl40], %rl39;
	add.u64 	%rl41, %SP, 128;
	st.u64 	[%SP+96], %rl41;
	ld.u64 	%rl42, [%SP+128];
	ld.u64 	%rl43, [%SP+120];
	st.u64 	[%rl43], %rl42;
	st.u64 	[%SP+152], %rl3;
	st.u64 	[%SP+144], %rl4;
	st.u64 	[%SP+136], %rl4;
	ld.u64 	%rl44, [%SP+272];
	st.u64 	[%SP+176], %rl44;
	add.s64 	%rl45, %rl44, 24;
	st.u64 	[%SP+168], %rl45;
	st.u64 	[%SP+160], %rl45;
	st.u64 	[%SP+208], %rl4;
	st.u64 	[%SP+216], %rl45;
	ld.u64 	%rl46, [%SP+208];
	st.u64 	[%SP+200], %rl46;
	ld.u64 	%rl47, [%rl46];
	st.u64 	[%SP+224], %rl47;
	ld.u64 	%rl48, [%SP+216];
	st.u64 	[%SP+184], %rl48;
	ld.u64 	%rl49, [%rl48];
	ld.u64 	%rl50, [%SP+208];
	st.u64 	[%rl50], %rl49;
	add.u64 	%rl51, %SP, 224;
	st.u64 	[%SP+192], %rl51;
	ld.u64 	%rl52, [%SP+224];
	ld.u64 	%rl53, [%SP+216];
	st.u64 	[%rl53], %rl52;
	ld.u64 	%rl54, [%SP+272];
	ld.u64 	%rl55, [%rl54+8];
	st.u64 	[%rl54], %rl55;
	st.u64 	[%SP+232], %rl3;
	ret;
}

	.hidden	_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev
	.weak	_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev
	.align	2
.func _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev(
	.param .b64 _ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev_param_0
)                                       // @_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev
{
	.local .align 8 .b8 	__local_depot24[232];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<3>;
	.reg .s64 	%rl<23>;

// BB#0:                                // %entry
	mov.u64 	%rl22, __local_depot24;
	cvta.local.u64 	%SP, %rl22;
	ld.param.u64 	%rl1, [_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEED2Ev_param_0];
	st.u64 	[%SP+224], %rl1;
	st.u64 	[%SP+216], %rl1;
	ld.u64 	%rl3, [%rl1+8];
	st.u64 	[%SP+192], %rl1;
	st.u64 	[%SP+200], %rl3;
	ld.u64 	%rl4, [%SP+192];
	ld.u8 	%rs1, [%SP+208];
	st.u64 	[%SP+168], %rl4;
	st.u64 	[%SP+176], %rl3;
	st.u8 	[%SP+184], %rs1;
	ld.u64 	%rl2, [%SP+168];
	bra.uni 	BB24_1;
BB24_2:                                 // %while.body.i.i.i
                                        //   in Loop: Header=BB24_1 Depth=1
	st.u64 	[%SP+160], %rl2;
	add.s64 	%rl17, %rl2, 24;
	st.u64 	[%SP+152], %rl17;
	st.u64 	[%SP+144], %rl17;
	ld.u64 	%rl18, [%rl2+32];
	ld.u64 	%rl19, [%rl2+16];
	add.s64 	%rl20, %rl19, -8;
	st.u64 	[%rl2+16], %rl20;
	st.u64 	[%SP+136], %rl20;
	st.u64 	[%SP+104], %rl18;
	st.u64 	[%SP+112], %rl20;
	ld.u64 	%rl21, [%SP+104];
	ld.u8 	%rs2, [%SP+120];
	st.u8 	[%SP+80], %rs2;
	st.u64 	[%SP+88], %rl21;
	st.u64 	[%SP+96], %rl20;
BB24_1:                                 // %while.cond.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl5, [%SP+176];
	ld.u64 	%rl6, [%rl2+16];
	setp.eq.s64	%p1, %rl5, %rl6;
	@%p1 bra 	BB24_3;
	bra.uni 	BB24_2;
BB24_3:                                 // %_ZNSt3__114__split_bufferIPNS_17__assoc_sub_stateERNS_18__hidden_allocatorIS2_EEE5clearEv.exit
	ld.u64 	%rl7, [%rl1];
	setp.eq.s64	%p2, %rl7, 0;
	@%p2 bra 	BB24_5;
// BB#4:                                // %invoke.cont
	st.u64 	[%SP+72], %rl1;
	add.s64 	%rl8, %rl1, 24;
	st.u64 	[%SP+64], %rl8;
	st.u64 	[%SP+56], %rl8;
	ld.u64 	%rl9, [%rl1+32];
	ld.u64 	%rl10, [%rl1];
	st.u64 	[%SP+24], %rl1;
	st.u64 	[%SP+16], %rl1;
	st.u64 	[%SP+8], %rl8;
	st.u64 	[%SP+0], %rl8;
	ld.u64 	%rl11, [%rl1+24];
	ld.u64 	%rl12, [%rl1];
	sub.s64 	%rl13, %rl11, %rl12;
	shr.s64 	%rl14, %rl13, 3;
	st.u64 	[%SP+32], %rl9;
	st.u64 	[%SP+40], %rl10;
	st.u64 	[%SP+48], %rl14;
	ld.u64 	%rl15, [%SP+32];
	ld.u64 	%rl16, [%SP+40];
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl14;
	call.uni 
	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 48
BB24_5:                                 // %if.end
	ret;
}

	.hidden	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y
	.weak	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y
	.align	2
.func _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y(
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_1,
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_2
)                                       // @_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y
{
	.local .align 8 .b8 	__local_depot25[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	mov.u64 	%rl5, __local_depot25;
	cvta.local.u64 	%SP, %rl5;
	ld.param.u64 	%rl1, [_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_1];
	ld.param.u64 	%rl3, [_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y_param_2];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	st.u64 	[%SP+16], %rl3;
	ld.u64 	%rl4, [%SP+8];
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 49
	ret;
}

	.hidden	_ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv
	.weak	_ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv
	.align	2
.func  (.param .b64 func_retval0) _ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv(
	.param .b64 _ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv_param_0
)                                       // @_ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv
{
	.local .align 8 .b8 	__local_depot26[160];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<3>;
	.reg .s64 	%rl<20>;

// BB#0:                                // %entry
	mov.u64 	%rl19, __local_depot26;
	cvta.local.u64 	%SP, %rl19;
	ld.param.u64 	%rl4, [_ZNKSt3__16vectorIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE8max_sizeEv_param_0];
	st.u64 	[%SP+136], %rl4;
	st.u64 	[%SP+128], %rl4;
	add.s64 	%rl5, %rl4, 16;
	st.u64 	[%SP+120], %rl5;
	st.u64 	[%SP+112], %rl5;
	st.u64 	[%SP+88], %rl5;
	ld.u8 	%rs1, [%SP+96];
	st.u8 	[%SP+72], %rs1;
	st.u64 	[%SP+80], %rl5;
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv, 
	(
	param0
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 50
	st.u64 	[%SP+144], %rl6;
	mov.u64 	%rl7, 9223372036854775807;
	st.u64 	[%SP+152], %rl7;
	add.u64 	%rl8, %SP, 144;
	st.u64 	[%SP+48], %rl8;
	add.u64 	%rl9, %SP, 152;
	st.u64 	[%SP+56], %rl9;
	ld.u64 	%rl10, [%SP+48];
	ld.u8 	%rs2, [%SP+64];
	st.u64 	[%SP+24], %rl10;
	st.u64 	[%SP+32], %rl9;
	st.u8 	[%SP+40], %rs2;
	ld.u64 	%rl11, [%SP+32];
	ld.u64 	%rl12, [%SP+24];
	add.u64 	%rl13, %SP, 40;
	st.u64 	[%SP+0], %rl13;
	st.u64 	[%SP+8], %rl11;
	st.u64 	[%SP+16], %rl12;
	ld.u64 	%rl14, [%SP+8];
	ld.u64 	%rl15, [%rl14];
	ld.u64 	%rl16, [%rl12];
	setp.ge.u64	%p1, %rl15, %rl16;
	@%p1 bra 	BB26_2;
// BB#1:                                // %cond.true.i.i
	ld.u64 	%rl18, [%SP+32];
	bra.uni 	BB26_3;
BB26_2:                                 // %cond.false.i.i
	ld.u64 	%rl18, [%SP+24];
BB26_3:                                 // %invoke.cont
	ld.u64 	%rl17, [%rl18];
	st.param.b64	[func_retval0+0], %rl17;
	ret;
}

	.weak	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
	.align	2
.func _ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(
	.param .b64 _ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv_param_0
)                                       // @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
{
	.local .align 8 .b8 	__local_depot27[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<14>;

// BB#0:                                // %entry
	mov.u64 	%rl13, __local_depot27;
	cvta.local.u64 	%SP, %rl13;
	ld.param.u64 	%rl5, [_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv_param_0];
	mov.u64 	%rl6, .str2;
	cvta.global.u64 	%rl7, %rl6;
	mov.u64 	%rl8, _ZTVSt12length_error;
	cvta.global.u64 	%rl9, %rl8;
	add.s64 	%rl1, %rl9, 16;
	mov.u64 	%rl10, _ZTISt12length_error;
	cvta.global.u64 	%rl2, %rl10;
	st.u64 	[%SP+16], %rl5;
	mov.u64 	%rl11, 16;
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl11;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl3, [retval0+0];
	
	//{
	}// Callseq End 51
	st.u64 	[%SP+0], %rl3;
	st.u64 	[%SP+8], %rl7;
	ld.u64 	%rl4, [%SP+0];
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl7;
	call.uni 
	_ZNSt11logic_errorC2EPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 52
// BB#1:                                // %invoke.cont
	st.u64 	[%rl4], %rl1;
	mov.u64 	%rl12, _ZNSt12length_errorD1Ev;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl12;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 53
}

	.hidden	_ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv
	.weak	_ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv
	.align	2
.func  (.param .b64 func_retval0) _ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv(
	.param .b64 _ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv_param_0
)                                       // @_ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv
{
	.local .align 8 .b8 	__local_depot28[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	mov.u64 	%rl3, __local_depot28;
	cvta.local.u64 	%SP, %rl3;
	ld.param.u64 	%rl1, [_ZNKSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8max_sizeEv_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u64 	%rl2, 2305843009213693951;
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	.hidden	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy
	.weak	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy(
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy_param_1
)                                       // @_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy
{
	.local .align 8 .b8 	__local_depot29[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	mov.u64 	%rl5, __local_depot29;
	cvta.local.u64 	%SP, %rl5;
	ld.param.u64 	%rl1, [_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE8allocateEy_param_1];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	shl.b64 	%rl3, %rl2, 3;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 retval0;
	call.uni (retval0), 
	_Znwy, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 54
	st.param.b64	[func_retval0+0], %rl4;
	ret;
}

	.hidden	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_
	.weak	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_
	.align	2
.func _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT__param_0,
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT__param_1
)                                       // @_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_
{
	.local .align 8 .b8 	__local_depot30[384];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s16 	%rs<3>;
	.reg .s64 	%rl<59>;

// BB#0:                                // %entry
	mov.u64 	%rl58, __local_depot30;
	cvta.local.u64 	%SP, %rl58;
	ld.param.u64 	%rl8, [_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT__param_0];
	ld.param.u64 	%rl9, [_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT__param_1];
	st.u64 	[%SP+304], %rl8;
	st.u64 	[%SP+312], %rl9;
	ld.u64 	%rl1, [%SP+304];
	st.u64 	[%SP+296], %rl1;
	add.s64 	%rl10, %rl1, 16;
	st.u64 	[%SP+288], %rl10;
	st.u64 	[%SP+280], %rl10;
	st.u64 	[%SP+320], %rl10;
	st.u64 	[%SP+272], %rl1;
	ld.u64 	%rl11, [%rl1+8];
	ld.u64 	%rl12, [%rl1];
	sub.s64 	%rl13, %rl11, %rl12;
	shr.s64 	%rl14, %rl13, 4;
	add.s64 	%rl15, %rl14, 1;
	st.u64 	[%SP+232], %rl1;
	st.u64 	[%SP+240], %rl15;
	ld.u64 	%rl2, [%SP+232];
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv, 
	(
	param0
	);
	ld.param.b64	%rl16, [retval0+0];
	
	//{
	}// Callseq End 55
	st.u64 	[%SP+248], %rl16;
	ld.u64 	%rl17, [%SP+240];
	setp.le.u64	%p1, %rl17, %rl16;
	@%p1 bra 	BB30_2;
// BB#1:                                // %if.then.i
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 56
BB30_2:                                 // %if.end.i
	st.u64 	[%SP+216], %rl2;
	st.u64 	[%SP+208], %rl2;
	st.u64 	[%SP+200], %rl2;
	add.s64 	%rl18, %rl2, 16;
	st.u64 	[%SP+192], %rl18;
	st.u64 	[%SP+184], %rl18;
	ld.u64 	%rl19, [%rl2+16];
	ld.u64 	%rl20, [%rl2];
	sub.s64 	%rl21, %rl19, %rl20;
	shr.s64 	%rl22, %rl21, 4;
	st.u64 	[%SP+256], %rl22;
	ld.u64 	%rl23, [%SP+248];
	shr.u64 	%rl24, %rl23, 1;
	setp.lt.u64	%p2, %rl22, %rl24;
	@%p2 bra 	BB30_4;
// BB#3:                                // %if.then4.i
	ld.u64 	%rl37, [%SP+248];
	st.u64 	[%SP+224], %rl37;
	bra.uni 	BB30_8;
BB30_4:                                 // %if.end5.i
	ld.u64 	%rl25, [%SP+256];
	shl.b64 	%rl26, %rl25, 1;
	st.u64 	[%SP+264], %rl26;
	add.u64 	%rl27, %SP, 264;
	st.u64 	[%SP+160], %rl27;
	add.u64 	%rl28, %SP, 240;
	st.u64 	[%SP+168], %rl28;
	ld.u64 	%rl29, [%SP+160];
	ld.u8 	%rs1, [%SP+176];
	st.u64 	[%SP+136], %rl29;
	st.u64 	[%SP+144], %rl28;
	st.u8 	[%SP+152], %rs1;
	ld.u64 	%rl30, [%SP+136];
	ld.u64 	%rl31, [%SP+144];
	add.u64 	%rl32, %SP, 152;
	st.u64 	[%SP+112], %rl32;
	st.u64 	[%SP+120], %rl30;
	st.u64 	[%SP+128], %rl31;
	ld.u64 	%rl33, [%SP+120];
	ld.u64 	%rl34, [%rl33];
	ld.u64 	%rl35, [%rl31];
	setp.ge.u64	%p3, %rl34, %rl35;
	@%p3 bra 	BB30_6;
// BB#5:                                // %cond.true.i.i.i
	ld.u64 	%rl57, [%SP+144];
	bra.uni 	BB30_7;
BB30_6:                                 // %cond.false.i.i.i
	ld.u64 	%rl57, [%SP+136];
BB30_7:                                 // %_ZNSt3__13maxIyEERKT_S3_S3_.exit.i
	ld.u64 	%rl36, [%rl57];
	st.u64 	[%SP+224], %rl36;
BB30_8:                                 // %_ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE11__recommendEy.exit
	ld.u64 	%rl38, [%SP+224];
	st.u64 	[%SP+104], %rl1;
	ld.u64 	%rl39, [%rl1+8];
	ld.u64 	%rl40, [%rl1];
	sub.s64 	%rl41, %rl39, %rl40;
	shr.s64 	%rl42, %rl41, 4;
	ld.u64 	%rl43, [%SP+320];
	add.u64 	%rl44, %SP, 328;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl38;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl42;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl43;
	call.uni 
	_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 57
	ld.u64 	%rl45, [%SP+320];
	ld.u64 	%rl46, [%SP+344];
	st.u64 	[%SP+96], %rl46;
	ld.u64 	%rl47, [%SP+312];
	st.u64 	[%SP+88], %rl47;
	st.u64 	[%SP+48], %rl45;
	st.u64 	[%SP+56], %rl46;
	st.u64 	[%SP+64], %rl47;
	ld.u64 	%rl48, [%SP+48];
	ld.u64 	%rl49, [%SP+56];
	st.u64 	[%SP+40], %rl47;
	ld.u8 	%rs2, [%SP+72];
	st.u8 	[%SP+8], %rs2;
	st.u64 	[%SP+16], %rl48;
	st.u64 	[%SP+24], %rl49;
	st.u64 	[%SP+32], %rl47;
	ld.u64 	%rl6, [%SP+24];
	setp.eq.s64	%p4, %rl6, 0;
	@%p4 bra 	BB30_10;
// BB#9:                                // %new.notnull.i.i
	ld.u64 	%rl50, [%SP+32];
	st.u64 	[%SP+0], %rl50;
	ld.u64 	%rl51, [%rl50+8];
	st.u64 	[%rl6+8], %rl51;
	ld.u64 	%rl52, [%rl50];
	st.u64 	[%rl6], %rl52;
BB30_10:                                // %invoke.cont
	ld.u64 	%rl53, [%SP+344];
	add.s64 	%rl54, %rl53, 16;
	st.u64 	[%SP+344], %rl54;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl44;
	call.uni 
	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 58
// BB#11:                               // %invoke.cont8
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl44;
	call.uni 
	_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 59
	ret;
}

	.hidden	_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9_
	.weak	_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9_
	.align	2
.func _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9_(
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_0,
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_1,
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_2,
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_3
)                                       // @_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9_
{
	.local .align 8 .b8 	__local_depot31[176];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<33>;

// BB#0:                                // %entry
	mov.u64 	%rl32, __local_depot31;
	cvta.local.u64 	%SP, %rl32;
	ld.param.u64 	%rl5, [_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_0];
	ld.param.u64 	%rl6, [_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_1];
	ld.param.u64 	%rl7, [_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_2];
	ld.param.u64 	%rl8, [_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEEC2EyyS9__param_3];
	st.u64 	[%SP+144], %rl5;
	st.u64 	[%SP+152], %rl6;
	st.u64 	[%SP+160], %rl7;
	st.u64 	[%SP+168], %rl8;
	ld.u64 	%rl1, [%SP+144];
	add.s64 	%rl9, %rl1, 24;
	st.u64 	[%SP+120], %rl9;
	mov.u64 	%rl31, 0;
	st.u64 	[%SP+128], %rl31;
	st.u64 	[%SP+136], %rl8;
	ld.u64 	%rl10, [%SP+120];
	add.u64 	%rl11, %SP, 128;
	st.u64 	[%SP+112], %rl11;
	ld.u64 	%rl12, [%SP+128];
	ld.u64 	%rl13, [%SP+136];
	st.u64 	[%SP+64], %rl13;
	st.u64 	[%SP+88], %rl10;
	st.u64 	[%SP+96], %rl12;
	st.u64 	[%SP+104], %rl13;
	ld.u64 	%rl14, [%SP+88];
	add.u64 	%rl15, %SP, 96;
	st.u64 	[%SP+80], %rl15;
	ld.u64 	%rl16, [%SP+96];
	st.u64 	[%rl14], %rl16;
	ld.u64 	%rl17, [%SP+104];
	st.u64 	[%SP+72], %rl17;
	st.u64 	[%rl14+8], %rl17;
	ld.u64 	%rl18, [%SP+152];
	setp.eq.s64	%p1, %rl18, 0;
	@%p1 bra 	BB31_2;
// BB#1:                                // %cond.true
	st.u64 	[%SP+16], %rl1;
	st.u64 	[%SP+8], %rl9;
	st.u64 	[%SP+0], %rl9;
	ld.u64 	%rl20, [%rl1+32];
	ld.u64 	%rl21, [%SP+152];
	st.u64 	[%SP+24], %rl20;
	st.u64 	[%SP+32], %rl21;
	ld.u64 	%rl22, [%SP+24];
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl21;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl31, [retval0+0];
	
	//{
	}// Callseq End 60
BB31_2:                                 // %cond.end
	st.u64 	[%rl1], %rl31;
	ld.u64 	%rl23, [%SP+160];
	shl.b64 	%rl24, %rl23, 4;
	add.s64 	%rl25, %rl31, %rl24;
	st.u64 	[%rl1+16], %rl25;
	st.u64 	[%rl1+8], %rl25;
	ld.u64 	%rl26, [%rl1];
	ld.u64 	%rl27, [%SP+152];
	shl.b64 	%rl28, %rl27, 4;
	add.s64 	%rl29, %rl26, %rl28;
	st.u64 	[%SP+56], %rl1;
	st.u64 	[%SP+48], %rl9;
	st.u64 	[%SP+40], %rl9;
	st.u64 	[%rl1+24], %rl29;
	ret;
}

	.hidden	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE
	.weak	_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE
	.align	2
.func _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE(
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE_param_0,
	.param .b64 _ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE_param_1
)                                       // @_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE
{
	.local .align 8 .b8 	__local_depot32[280];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<57>;

// BB#0:                                // %entry
	mov.u64 	%rl56, __local_depot32;
	cvta.local.u64 	%SP, %rl56;
	ld.param.u64 	%rl1, [_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE_param_1];
	st.u64 	[%SP+264], %rl1;
	st.u64 	[%SP+272], %rl2;
	ld.u64 	%rl3, [%SP+264];
	st.u64 	[%SP+256], %rl3;
	add.s64 	%rl4, %rl3, 16;
	st.u64 	[%SP+248], %rl4;
	st.u64 	[%SP+240], %rl4;
	ld.u64 	%rl5, [%rl3];
	add.s64 	%rl6, %rl3, 8;
	ld.u64 	%rl7, [%rl3+8];
	ld.u64 	%rl8, [%SP+272];
	add.s64 	%rl9, %rl8, 8;
	st.u64 	[%SP+0], %rl4;
	st.u64 	[%SP+8], %rl5;
	st.u64 	[%SP+16], %rl7;
	st.u64 	[%SP+24], %rl9;
	ld.u64 	%rl10, [%SP+16];
	ld.u64 	%rl11, [%SP+8];
	sub.s64 	%rl12, %rl10, %rl11;
	shr.s64 	%rl13, %rl12, 4;
	st.u64 	[%SP+32], %rl13;
	ld.u64 	%rl14, [%SP+24];
	ld.u64 	%rl15, [%rl14];
	and.b64  	%rl16, %rl12, -16;
	sub.s64 	%rl17, %rl15, %rl16;
	st.u64 	[%rl14], %rl17;
	ld.u64 	%rl18, [%SP+24];
	ld.u64 	%rl19, [%rl18];
	ld.u64 	%rl20, [%SP+8];
	ld.u64 	%rl21, [%SP+32];
	shl.b64 	%rl22, %rl21, 4;
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl20;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl22;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl23, [retval0+0];
	
	//{
	}// Callseq End 61
	ld.u64 	%rl24, [%SP+272];
	add.s64 	%rl25, %rl24, 8;
	st.u64 	[%SP+64], %rl3;
	st.u64 	[%SP+72], %rl25;
	ld.u64 	%rl26, [%SP+64];
	st.u64 	[%SP+56], %rl26;
	ld.u64 	%rl27, [%rl26];
	st.u64 	[%SP+80], %rl27;
	ld.u64 	%rl28, [%SP+72];
	st.u64 	[%SP+40], %rl28;
	ld.u64 	%rl29, [%rl28];
	ld.u64 	%rl30, [%SP+64];
	st.u64 	[%rl30], %rl29;
	add.u64 	%rl31, %SP, 80;
	st.u64 	[%SP+48], %rl31;
	ld.u64 	%rl32, [%SP+80];
	ld.u64 	%rl33, [%SP+72];
	st.u64 	[%rl33], %rl32;
	ld.u64 	%rl34, [%SP+272];
	add.s64 	%rl35, %rl34, 16;
	st.u64 	[%SP+112], %rl6;
	st.u64 	[%SP+120], %rl35;
	ld.u64 	%rl36, [%SP+112];
	st.u64 	[%SP+104], %rl36;
	ld.u64 	%rl37, [%rl36];
	st.u64 	[%SP+128], %rl37;
	ld.u64 	%rl38, [%SP+120];
	st.u64 	[%SP+88], %rl38;
	ld.u64 	%rl39, [%rl38];
	ld.u64 	%rl40, [%SP+112];
	st.u64 	[%rl40], %rl39;
	add.u64 	%rl41, %SP, 128;
	st.u64 	[%SP+96], %rl41;
	ld.u64 	%rl42, [%SP+128];
	ld.u64 	%rl43, [%SP+120];
	st.u64 	[%rl43], %rl42;
	st.u64 	[%SP+152], %rl3;
	st.u64 	[%SP+144], %rl4;
	st.u64 	[%SP+136], %rl4;
	ld.u64 	%rl44, [%SP+272];
	st.u64 	[%SP+176], %rl44;
	add.s64 	%rl45, %rl44, 24;
	st.u64 	[%SP+168], %rl45;
	st.u64 	[%SP+160], %rl45;
	st.u64 	[%SP+208], %rl4;
	st.u64 	[%SP+216], %rl45;
	ld.u64 	%rl46, [%SP+208];
	st.u64 	[%SP+200], %rl46;
	ld.u64 	%rl47, [%rl46];
	st.u64 	[%SP+224], %rl47;
	ld.u64 	%rl48, [%SP+216];
	st.u64 	[%SP+184], %rl48;
	ld.u64 	%rl49, [%rl48];
	ld.u64 	%rl50, [%SP+208];
	st.u64 	[%rl50], %rl49;
	add.u64 	%rl51, %SP, 224;
	st.u64 	[%SP+192], %rl51;
	ld.u64 	%rl52, [%SP+224];
	ld.u64 	%rl53, [%SP+216];
	st.u64 	[%rl53], %rl52;
	ld.u64 	%rl54, [%SP+272];
	ld.u64 	%rl55, [%rl54+8];
	st.u64 	[%rl54], %rl55;
	st.u64 	[%SP+232], %rl3;
	ret;
}

	.hidden	_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev
	.weak	_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev
	.align	2
.func _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev(
	.param .b64 _ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev_param_0
)                                       // @_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev
{
	.local .align 8 .b8 	__local_depot33[232];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<3>;
	.reg .s64 	%rl<23>;

// BB#0:                                // %entry
	mov.u64 	%rl22, __local_depot33;
	cvta.local.u64 	%SP, %rl22;
	ld.param.u64 	%rl1, [_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEED2Ev_param_0];
	st.u64 	[%SP+224], %rl1;
	st.u64 	[%SP+216], %rl1;
	ld.u64 	%rl3, [%rl1+8];
	st.u64 	[%SP+192], %rl1;
	st.u64 	[%SP+200], %rl3;
	ld.u64 	%rl4, [%SP+192];
	ld.u8 	%rs1, [%SP+208];
	st.u64 	[%SP+168], %rl4;
	st.u64 	[%SP+176], %rl3;
	st.u8 	[%SP+184], %rs1;
	ld.u64 	%rl2, [%SP+168];
	bra.uni 	BB33_1;
BB33_2:                                 // %while.body.i.i.i
                                        //   in Loop: Header=BB33_1 Depth=1
	st.u64 	[%SP+160], %rl2;
	add.s64 	%rl17, %rl2, 24;
	st.u64 	[%SP+152], %rl17;
	st.u64 	[%SP+144], %rl17;
	ld.u64 	%rl18, [%rl2+32];
	ld.u64 	%rl19, [%rl2+16];
	add.s64 	%rl20, %rl19, -16;
	st.u64 	[%rl2+16], %rl20;
	st.u64 	[%SP+136], %rl20;
	st.u64 	[%SP+104], %rl18;
	st.u64 	[%SP+112], %rl20;
	ld.u64 	%rl21, [%SP+104];
	ld.u8 	%rs2, [%SP+120];
	st.u8 	[%SP+80], %rs2;
	st.u64 	[%SP+88], %rl21;
	st.u64 	[%SP+96], %rl20;
BB33_1:                                 // %while.cond.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl5, [%SP+176];
	ld.u64 	%rl6, [%rl2+16];
	setp.eq.s64	%p1, %rl5, %rl6;
	@%p1 bra 	BB33_3;
	bra.uni 	BB33_2;
BB33_3:                                 // %_ZNSt3__114__split_bufferINS_4pairIPNS_18condition_variableEPNS_5mutexEEERNS_18__hidden_allocatorIS6_EEE5clearEv.exit
	ld.u64 	%rl7, [%rl1];
	setp.eq.s64	%p2, %rl7, 0;
	@%p2 bra 	BB33_5;
// BB#4:                                // %invoke.cont
	st.u64 	[%SP+72], %rl1;
	add.s64 	%rl8, %rl1, 24;
	st.u64 	[%SP+64], %rl8;
	st.u64 	[%SP+56], %rl8;
	ld.u64 	%rl9, [%rl1+32];
	ld.u64 	%rl10, [%rl1];
	st.u64 	[%SP+24], %rl1;
	st.u64 	[%SP+16], %rl1;
	st.u64 	[%SP+8], %rl8;
	st.u64 	[%SP+0], %rl8;
	ld.u64 	%rl11, [%rl1+24];
	ld.u64 	%rl12, [%rl1];
	sub.s64 	%rl13, %rl11, %rl12;
	shr.s64 	%rl14, %rl13, 4;
	st.u64 	[%SP+32], %rl9;
	st.u64 	[%SP+40], %rl10;
	st.u64 	[%SP+48], %rl14;
	ld.u64 	%rl15, [%SP+32];
	ld.u64 	%rl16, [%SP+40];
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl14;
	call.uni 
	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 62
BB33_5:                                 // %if.end
	ret;
}

	.hidden	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y
	.weak	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y
	.align	2
.func _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y(
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_1,
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_2
)                                       // @_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y
{
	.local .align 8 .b8 	__local_depot34[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	mov.u64 	%rl5, __local_depot34;
	cvta.local.u64 	%SP, %rl5;
	ld.param.u64 	%rl1, [_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_1];
	ld.param.u64 	%rl3, [_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y_param_2];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	st.u64 	[%SP+16], %rl3;
	ld.u64 	%rl4, [%SP+8];
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 63
	ret;
}

	.hidden	_ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv
	.weak	_ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv
	.align	2
.func  (.param .b64 func_retval0) _ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv(
	.param .b64 _ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv_param_0
)                                       // @_ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv
{
	.local .align 8 .b8 	__local_depot35[160];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<3>;
	.reg .s64 	%rl<20>;

// BB#0:                                // %entry
	mov.u64 	%rl19, __local_depot35;
	cvta.local.u64 	%SP, %rl19;
	ld.param.u64 	%rl4, [_ZNKSt3__16vectorINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE8max_sizeEv_param_0];
	st.u64 	[%SP+136], %rl4;
	st.u64 	[%SP+128], %rl4;
	add.s64 	%rl5, %rl4, 16;
	st.u64 	[%SP+120], %rl5;
	st.u64 	[%SP+112], %rl5;
	st.u64 	[%SP+88], %rl5;
	ld.u8 	%rs1, [%SP+96];
	st.u8 	[%SP+72], %rs1;
	st.u64 	[%SP+80], %rl5;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv, 
	(
	param0
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 64
	st.u64 	[%SP+144], %rl6;
	mov.u64 	%rl7, 9223372036854775807;
	st.u64 	[%SP+152], %rl7;
	add.u64 	%rl8, %SP, 144;
	st.u64 	[%SP+48], %rl8;
	add.u64 	%rl9, %SP, 152;
	st.u64 	[%SP+56], %rl9;
	ld.u64 	%rl10, [%SP+48];
	ld.u8 	%rs2, [%SP+64];
	st.u64 	[%SP+24], %rl10;
	st.u64 	[%SP+32], %rl9;
	st.u8 	[%SP+40], %rs2;
	ld.u64 	%rl11, [%SP+32];
	ld.u64 	%rl12, [%SP+24];
	add.u64 	%rl13, %SP, 40;
	st.u64 	[%SP+0], %rl13;
	st.u64 	[%SP+8], %rl11;
	st.u64 	[%SP+16], %rl12;
	ld.u64 	%rl14, [%SP+8];
	ld.u64 	%rl15, [%rl14];
	ld.u64 	%rl16, [%rl12];
	setp.ge.u64	%p1, %rl15, %rl16;
	@%p1 bra 	BB35_2;
// BB#1:                                // %cond.true.i.i
	ld.u64 	%rl18, [%SP+32];
	bra.uni 	BB35_3;
BB35_2:                                 // %cond.false.i.i
	ld.u64 	%rl18, [%SP+24];
BB35_3:                                 // %invoke.cont
	ld.u64 	%rl17, [%rl18];
	st.param.b64	[func_retval0+0], %rl17;
	ret;
}

	.hidden	_ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv
	.weak	_ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv
	.align	2
.func  (.param .b64 func_retval0) _ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv(
	.param .b64 _ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv_param_0
)                                       // @_ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv
{
	.local .align 8 .b8 	__local_depot36[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	mov.u64 	%rl3, __local_depot36;
	cvta.local.u64 	%SP, %rl3;
	ld.param.u64 	%rl1, [_ZNKSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8max_sizeEv_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u64 	%rl2, 1152921504606846975;
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	.hidden	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy
	.weak	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy(
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy_param_0,
	.param .b64 _ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy_param_1
)                                       // @_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy
{
	.local .align 8 .b8 	__local_depot37[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	mov.u64 	%rl5, __local_depot37;
	cvta.local.u64 	%SP, %rl5;
	ld.param.u64 	%rl1, [_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE8allocateEy_param_1];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	shl.b64 	%rl3, %rl2, 4;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 retval0;
	call.uni (retval0), 
	_Znwy, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 65
	st.param.b64	[func_retval0+0], %rl4;
	ret;
}

	.weak	_ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv
	.align	2
.func _ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv(
	.param .b64 _ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv_param_0
)                                       // @_ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv
{
	.local .align 8 .b8 	__local_depot38[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl2, __local_depot38;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__121__thread_specific_ptrINS_15__thread_structEE16__at_thread_exitEPv_param_0];
	st.u64 	[%SP+0], %rl1;
	setp.eq.s64	%p1, %rl1, 0;
	@%p1 bra 	BB38_2;
// BB#1:                                // %delete.notnull
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__115__thread_structD1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 66
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 67
BB38_2:                                 // %delete.end
	ret;
}

	.hidden	_ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
	.weak	_ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
	.align	2
.func _ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev(
	.param .b64 _ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev_param_0
)                                       // @_ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev
{
	.local .align 8 .b8 	__local_depot39[200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s64 	%rl<20>;

// BB#0:                                // %entry
	mov.u64 	%rl19, __local_depot39;
	cvta.local.u64 	%SP, %rl19;
	ld.param.u64 	%rl1, [_ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEED2Ev_param_0];
	st.u64 	[%SP+192], %rl1;
	ld.u64 	%rl3, [%rl1];
	setp.eq.s64	%p1, %rl3, 0;
	@%p1 bra 	BB39_5;
// BB#1:                                // %if.then
	st.u64 	[%SP+184], %rl1;
	ld.u64 	%rl4, [%rl1];
	st.u64 	[%SP+168], %rl1;
	st.u64 	[%SP+176], %rl4;
	ld.u64 	%rl2, [%SP+168];
	bra.uni 	BB39_2;
BB39_3:                                 // %while.body.i.i
                                        //   in Loop: Header=BB39_2 Depth=1
	st.u64 	[%SP+160], %rl2;
	add.s64 	%rl15, %rl2, 16;
	st.u64 	[%SP+152], %rl15;
	st.u64 	[%SP+144], %rl15;
	ld.u64 	%rl16, [%rl2+8];
	add.s64 	%rl17, %rl16, -8;
	st.u64 	[%rl2+8], %rl17;
	st.u64 	[%SP+136], %rl17;
	st.u64 	[%SP+104], %rl15;
	st.u64 	[%SP+112], %rl17;
	ld.u64 	%rl18, [%SP+104];
	ld.u8 	%rs1, [%SP+120];
	st.u8 	[%SP+80], %rs1;
	st.u64 	[%SP+88], %rl18;
	st.u64 	[%SP+96], %rl17;
BB39_2:                                 // %while.cond.i.i
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl5, [%SP+176];
	ld.u64 	%rl6, [%rl2+8];
	setp.eq.s64	%p2, %rl5, %rl6;
	@%p2 bra 	BB39_4;
	bra.uni 	BB39_3;
BB39_4:                                 // %_ZNSt3__113__vector_baseIPNS_17__assoc_sub_stateENS_18__hidden_allocatorIS2_EEE5clearEv.exit
	st.u64 	[%SP+48], %rl1;
	add.s64 	%rl7, %rl1, 16;
	st.u64 	[%SP+40], %rl7;
	st.u64 	[%SP+32], %rl7;
	ld.u64 	%rl8, [%rl1];
	st.u64 	[%SP+24], %rl1;
	st.u64 	[%SP+16], %rl1;
	st.u64 	[%SP+8], %rl7;
	st.u64 	[%SP+0], %rl7;
	ld.u64 	%rl9, [%rl1+16];
	ld.u64 	%rl10, [%rl1];
	sub.s64 	%rl11, %rl9, %rl10;
	shr.s64 	%rl12, %rl11, 3;
	st.u64 	[%SP+56], %rl7;
	st.u64 	[%SP+64], %rl8;
	st.u64 	[%SP+72], %rl12;
	ld.u64 	%rl13, [%SP+56];
	ld.u64 	%rl14, [%SP+64];
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl14;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl12;
	call.uni 
	_ZNSt3__118__hidden_allocatorIPNS_17__assoc_sub_stateEE10deallocateEPS2_y, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 68
BB39_5:                                 // %if.end
	ret;
}

	.hidden	_ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
	.weak	_ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
	.align	2
.func _ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev(
	.param .b64 _ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev_param_0
)                                       // @_ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev
{
	.local .align 8 .b8 	__local_depot40[200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s64 	%rl<20>;

// BB#0:                                // %entry
	mov.u64 	%rl19, __local_depot40;
	cvta.local.u64 	%SP, %rl19;
	ld.param.u64 	%rl1, [_ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEED2Ev_param_0];
	st.u64 	[%SP+192], %rl1;
	ld.u64 	%rl3, [%rl1];
	setp.eq.s64	%p1, %rl3, 0;
	@%p1 bra 	BB40_5;
// BB#1:                                // %if.then
	st.u64 	[%SP+184], %rl1;
	ld.u64 	%rl4, [%rl1];
	st.u64 	[%SP+168], %rl1;
	st.u64 	[%SP+176], %rl4;
	ld.u64 	%rl2, [%SP+168];
	bra.uni 	BB40_2;
BB40_3:                                 // %while.body.i.i
                                        //   in Loop: Header=BB40_2 Depth=1
	st.u64 	[%SP+160], %rl2;
	add.s64 	%rl15, %rl2, 16;
	st.u64 	[%SP+152], %rl15;
	st.u64 	[%SP+144], %rl15;
	ld.u64 	%rl16, [%rl2+8];
	add.s64 	%rl17, %rl16, -16;
	st.u64 	[%rl2+8], %rl17;
	st.u64 	[%SP+136], %rl17;
	st.u64 	[%SP+104], %rl15;
	st.u64 	[%SP+112], %rl17;
	ld.u64 	%rl18, [%SP+104];
	ld.u8 	%rs1, [%SP+120];
	st.u8 	[%SP+80], %rs1;
	st.u64 	[%SP+88], %rl18;
	st.u64 	[%SP+96], %rl17;
BB40_2:                                 // %while.cond.i.i
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl5, [%SP+176];
	ld.u64 	%rl6, [%rl2+8];
	setp.eq.s64	%p2, %rl5, %rl6;
	@%p2 bra 	BB40_4;
	bra.uni 	BB40_3;
BB40_4:                                 // %_ZNSt3__113__vector_baseINS_4pairIPNS_18condition_variableEPNS_5mutexEEENS_18__hidden_allocatorIS6_EEE5clearEv.exit
	st.u64 	[%SP+48], %rl1;
	add.s64 	%rl7, %rl1, 16;
	st.u64 	[%SP+40], %rl7;
	st.u64 	[%SP+32], %rl7;
	ld.u64 	%rl8, [%rl1];
	st.u64 	[%SP+24], %rl1;
	st.u64 	[%SP+16], %rl1;
	st.u64 	[%SP+8], %rl7;
	st.u64 	[%SP+0], %rl7;
	ld.u64 	%rl9, [%rl1+16];
	ld.u64 	%rl10, [%rl1];
	sub.s64 	%rl11, %rl9, %rl10;
	shr.s64 	%rl12, %rl11, 4;
	st.u64 	[%SP+56], %rl7;
	st.u64 	[%SP+64], %rl8;
	st.u64 	[%SP+72], %rl12;
	ld.u64 	%rl13, [%SP+56];
	ld.u64 	%rl14, [%SP+64];
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl14;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl12;
	call.uni 
	_ZNSt3__118__hidden_allocatorINS_4pairIPNS_18condition_variableEPNS_5mutexEEEE10deallocateEPS6_y, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 69
BB40_5:                                 // %if.end
	ret;
}

