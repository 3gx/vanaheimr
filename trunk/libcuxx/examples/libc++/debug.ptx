//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	// .globl	_Z18pthread_mutex_lockP15pthread_mutex_t
.extern .func  (.param .b32 func_retval0) __cxa_guard_acquire
(
	.param .b64 __cxa_guard_acquire_param_0
)
;
.extern .func  (.param .b32 func_retval0) __gxx_personality_v0
(

)
;
.extern .func  (.param .b32 func_retval0) __cxa_atexit
(
	.param .b64 __cxa_atexit_param_0,
	.param .b64 __cxa_atexit_param_1,
	.param .b64 __cxa_atexit_param_2
)
;
.extern .func __cxa_guard_release
(
	.param .b64 __cxa_guard_release_param_0
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.extern .func  (.param .b64 func_retval0) __cxa_begin_catch
(
	.param .b64 __cxa_begin_catch_param_0
)
;
.extern .func _ZSt9terminatev
(

)
;
.visible .func _ZNSt3__18__c_nodeD0Ev
(
	.param .b64 _ZNSt3__18__c_nodeD0Ev_param_0
)
;
.extern .func _ZdlPv
(
	.param .b64 _ZdlPv_param_0
)
;
.visible .func _ZNSt3__18__c_nodeD2Ev
(
	.param .b64 _ZNSt3__18__c_nodeD2Ev_param_0
)
;
.visible .func _ZNSt3__111__libcpp_dbC2Ev
(
	.param .b64 _ZNSt3__111__libcpp_dbC2Ev_param_0
)
;
.visible .func _ZNSt3__111__libcpp_dbD2Ev
(
	.param .b64 _ZNSt3__111__libcpp_dbD2Ev_param_0
)
;
.func _ZNSt3__112_GLOBAL__N_13mutEv
(

)
;
.visible .func  (.param .b64 func_retval0) _ZNKSt3__111__libcpp_db15__find_iteratorEPKv
(
	.param .b64 _ZNKSt3__111__libcpp_db15__find_iteratorEPKv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db15__find_iteratorEPKv_param_1
)
;
.func  (.param .b32 func_retval0) _Z6printfIJPKcEEiS1_DpT_
(
	.param .b64 _Z6printfIJPKcEEiS1_DpT__param_0,
	.param .b64 _Z6printfIJPKcEEiS1_DpT__param_1
)
;
.extern .func abort
(

)
;
.visible .func  (.param .b64 func_retval0) _ZNSt3__111__libcpp_db17__insert_iteratorEPv
(
	.param .b64 _ZNSt3__111__libcpp_db17__insert_iteratorEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db17__insert_iteratorEPv_param_1
)
;
.visible .func _ZNSt3__18__c_node5__addEPNS_8__i_nodeE
(
	.param .b64 _ZNSt3__18__c_node5__addEPNS_8__i_nodeE_param_0,
	.param .b64 _ZNSt3__18__c_node5__addEPNS_8__i_nodeE_param_1
)
;
.extern .func  (.param .b64 func_retval0) _ZNSt3__112__next_primeEy
(
	.param .b64 _ZNSt3__112__next_primeEy_param_0
)
;
.extern .func  (.param .b64 func_retval0) calloc
(
	.param .b64 calloc_param_0,
	.param .b64 calloc_param_1
)
;
.extern .func  (.param .b64 func_retval0) __cxa_allocate_exception
(
	.param .b64 __cxa_allocate_exception_param_0
)
;
.extern .func _ZNSt9bad_allocC1Ev
(
	.param .b64 _ZNSt9bad_allocC1Ev_param_0
)
;
.extern .func _ZNSt9bad_allocD1Ev
(
	.param .b64 _ZNSt9bad_allocD1Ev_param_0
)
;
.extern .func __cxa_throw
(
	.param .b64 __cxa_throw_param_0,
	.param .b64 __cxa_throw_param_1,
	.param .b64 __cxa_throw_param_2
)
;
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.visible .func _ZNSt3__18__c_node8__removeEPNS_8__i_nodeE
(
	.param .b64 _ZNSt3__18__c_node8__removeEPNS_8__i_nodeE_param_0,
	.param .b64 _ZNSt3__18__c_node8__removeEPNS_8__i_nodeE_param_1
)
;
.extern .func _ZNSt3__15mutex4lockEv
(
	.param .b64 _ZNSt3__15mutex4lockEv_param_0
)
;
.extern .func _ZNSt3__15mutex6unlockEv
(
	.param .b64 _ZNSt3__15mutex6unlockEv_param_0
)
;
.extern .func  (.param .b64 func_retval0) _Z6memcpyPvPKvy
(
	.param .b64 _Z6memcpyPvPKvy_param_0,
	.param .b64 _Z6memcpyPvPKvy_param_1,
	.param .b64 _Z6memcpyPvPKvy_param_2
)
;
.extern .func  (.param .b64 func_retval0) _Z7memmovePvPKvy
(
	.param .b64 _Z7memmovePvPKvy_param_0,
	.param .b64 _Z7memmovePvPKvy_param_1,
	.param .b64 _Z7memmovePvPKvy_param_2
)
;
.extern .func __cxa_pure_virtual
(

)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_1,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_2
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy_param_1
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy_param_1
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy_param_1
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy_param_1
)
;
.func  (.param .align 8 .b8 func_retval0[16]) _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_1,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_2
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi_param_0,
	.param .b32 _ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi_param_1
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy_param_0
)
;
.func  (.param .align 8 .b8 func_retval0[16]) _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_1,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_2,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_3,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_4,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_5
)
;
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi
(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi_param_0,
	.param .b32 _ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi_param_1
)
;
.func _Z10fillBufferIPKcEvPciT_
(
	.param .b64 _Z10fillBufferIPKcEvPciT__param_0,
	.param .b32 _Z10fillBufferIPKcEvPciT__param_1,
	.param .b64 _Z10fillBufferIPKcEvPciT__param_2
)
;
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.func  (.param .b32 func_retval0) _Z5alignii
(
	.param .b32 _Z5alignii_param_0,
	.param .b32 _Z5alignii_param_1
)
;
.extern .func _ZNSt3__15mutexD1Ev
(
	.param .b64 _ZNSt3__15mutexD1Ev_param_0
)
;
.global .align 8 .b8 _ZZNSt3__18__get_dbEvE2db[48];
.global .align 8 .u64 _ZGVZNSt3__18__get_dbEvE2db;
.extern .global .align 1 .u8 __dso_handle;
.extern .global .align 8 .b64 _ZTVN10__cxxabiv117__class_type_infoE;
.visible .global .align 1 .b8 _ZTSNSt3__18__c_nodeE[18] = {78, 83, 116, 51, 95, 95, 49, 56, 95, 95, 99, 95, 110, 111, 100, 101, 69, 0};
.visible .global .align 8 .u64 _ZTINSt3__18__c_nodeE[2] = {_ZTVN10__cxxabiv117__class_type_infoE, _ZTSNSt3__18__c_nodeE};
.visible .global .align 8 .u64 _ZTVNSt3__18__c_nodeE[8] = {0, _ZTINSt3__18__c_nodeE, _ZNSt3__18__c_nodeD2Ev, _ZNSt3__18__c_nodeD0Ev, __cxa_pure_virtual, __cxa_pure_virtual, __cxa_pure_virtual, __cxa_pure_virtual};
.global .align 1 .b8 .str[4] = {37, 115, 10, 0};
.global .align 1 .b8 .str1[38] = {105, 116, 101, 114, 97, 116, 111, 114, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 100, 101, 98, 117, 103, 32, 100, 97, 116, 97, 98, 97, 115, 101, 46, 0};
.extern .global .align 8 .b64 _ZTISt9bad_alloc;
.global .align 1 .b8 .str2[43] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 95, 95, 102, 105, 110, 100, 95, 99, 32, 65, 0};
.global .align 1 .b8 .str3[43] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 95, 95, 102, 105, 110, 100, 95, 99, 32, 66, 0};
.global .align 1 .b8 .str4[44] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 95, 95, 101, 114, 97, 115, 101, 95, 99, 32, 65, 0};
.global .align 1 .b8 .str5[44] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 95, 95, 101, 114, 97, 115, 101, 95, 99, 32, 66, 0};
.global .align 1 .b8 .str6[39] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 115, 119, 97, 112, 32, 65, 0};
.global .align 1 .b8 .str7[39] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 115, 119, 97, 112, 32, 66, 0};
.global .align 1 .b8 .str8[39] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 115, 119, 97, 112, 32, 67, 0};
.global .align 1 .b8 .str9[39] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 115, 119, 97, 112, 32, 68, 0};
.global .align 1 .b8 .str10[51] = {100, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 108, 111, 103, 105, 99, 32, 101, 114, 114, 111, 114, 32, 95, 95, 99, 95, 110, 111, 100, 101, 58, 58, 95, 95, 114, 101, 109, 111, 118, 101, 0};
.global .align 8 .b8 _ZZNSt3__112_GLOBAL__N_13mutEvE1m[40] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.global .align 8 .u64 _ZGVZNSt3__112_GLOBAL__N_13mutEvE1m;
                                        // @_Z18pthread_mutex_lockP15pthread_mutex_t
.visible .func  (.param .b32 func_retval0) _Z18pthread_mutex_lockP15pthread_mutex_t(
	.param .b64 _Z18pthread_mutex_lockP15pthread_mutex_t_param_0
)
{
	.reg .s32 	%r<2>;

// BB#0:                                // %entry
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z20pthread_mutex_unlockP15pthread_mutex_t
.visible .func  (.param .b32 func_retval0) _Z20pthread_mutex_unlockP15pthread_mutex_t(
	.param .b64 _Z20pthread_mutex_unlockP15pthread_mutex_t_param_0
)                                       // @_Z20pthread_mutex_unlockP15pthread_mutex_t
{
	.reg .s32 	%r<2>;

// BB#0:                                // %entry
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_ZNSt3__18__get_dbEv
.visible .func  (.param .b64 func_retval0) _ZNSt3__18__get_dbEv(

)                                       // @_ZNSt3__18__get_dbEv
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<8>;

// BB#0:                                // %entry
	mov.u64 	%rl4, _ZGVZNSt3__18__get_dbEvE2db;
	cvta.global.u64 	%rl1, %rl4;
	mov.u64 	%rl5, _ZZNSt3__18__get_dbEvE2db;
	cvta.global.u64 	%rl2, %rl5;
	ld.u8 	%rs1, [%rl1];
	setp.ne.s16	%p1, %rs1, 0;
	@%p1 bra 	BB2_3;
// BB#1:                                // %init.check
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_guard_acquire, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB2_3;
// BB#2:                                // %init
	mov.u64 	%rl6, __dso_handle;
	cvta.global.u64 	%rl3, %rl6;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__111__libcpp_dbC2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 1
	mov.u64 	%rl7, _ZNSt3__111__libcpp_dbD2Ev;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_atexit, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 2
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	__cxa_guard_release, 
	(
	param0
	);
	
	//{
	}// Callseq End 3
BB2_3:                                  // %init.end
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	// .globl	_ZNSt3__114__get_const_dbEv
.visible .func  (.param .b64 func_retval0) _ZNSt3__114__get_const_dbEv(

)                                       // @_ZNSt3__114__get_const_dbEv
{
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	mov.u64 	%rl1, _ZZNSt3__18__get_dbEvE2db;
	cvta.global.u64 	%rl2, %rl1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__18__get_dbEv, 
	(
	);
	ld.param.b64	%rl3, [retval0+0];
	
	//{
	}// Callseq End 4
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	// .globl	_ZNSt3__18__i_nodeD2Ev
	.align	2
.visible .func _ZNSt3__18__i_nodeD2Ev(
	.param .b64 _ZNSt3__18__i_nodeD2Ev_param_0
)                                       // @_ZNSt3__18__i_nodeD2Ev
{
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	ld.param.u64 	%rl2, [_ZNSt3__18__i_nodeD2Ev_param_0];
	ld.u64 	%rl1, [%rl2+8];
	setp.eq.s64	%p1, %rl1, 0;
	@%p1 bra 	BB4_2;
// BB#1:                                // %if.then
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__18__i_nodeD2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 5
	ld.u64 	%rl3, [%rl2+8];
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 6
	ret;
BB4_2:                                  // %if.end
	ret;
}

	.hidden	__clang_call_terminate
	.weak	__clang_call_terminate
.func __clang_call_terminate(
	.param .b64 __clang_call_terminate_param_0
)                                       // @__clang_call_terminate
{
	.reg .s64 	%rl<3>;

// BB#0:
	ld.param.u64 	%rl1, [__clang_call_terminate_param_0];
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_begin_catch, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 7
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 8
}

	// .globl	_ZNSt3__18__c_nodeD0Ev
	.align	2
.visible .func _ZNSt3__18__c_nodeD0Ev(
	.param .b64 _ZNSt3__18__c_nodeD0Ev_param_0
)                                       // @_ZNSt3__18__c_nodeD0Ev
{
	.reg .s64 	%rl<2>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt3__18__c_nodeD0Ev_param_0];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__18__c_nodeD2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 9
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 10
	ret;
}

	// .globl	_ZNSt3__18__c_nodeD2Ev
	.align	2
.visible .func _ZNSt3__18__c_nodeD2Ev(
	.param .b64 _ZNSt3__18__c_nodeD2Ev_param_0
)                                       // @_ZNSt3__18__c_nodeD2Ev
{
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<10>;

// BB#0:                                // %invoke.cont
	ld.param.u64 	%rl2, [_ZNSt3__18__c_nodeD2Ev_param_0];
	mov.u64 	%rl3, _ZTVNSt3__18__c_nodeE;
	cvta.global.u64 	%rl4, %rl3;
	add.s64 	%rl5, %rl4, 16;
	st.u64 	[%rl2], %rl5;
	ld.u64 	%rl6, [%rl2+24];
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 11
	ld.u64 	%rl1, [%rl2+16];
	setp.eq.s64	%p1, %rl1, 0;
	@%p1 bra 	BB7_2;
// BB#1:                                // %if.then
	ld.u64 	%rl7, [%rl1];
	ld.u64 	%rl8, [%rl7];
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	prototype_12 : .callprototype ()_ (.param .b64 _);
	call 
	%rl8, 
	(
	param0
	)
	, prototype_12;
	
	//{
	}// Callseq End 12
	ld.u64 	%rl9, [%rl2+16];
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 13
BB7_2:                                  // %if.end
	ret;
}

	// .globl	_ZNSt3__111__libcpp_dbC2Ev
	.align	2
.visible .func _ZNSt3__111__libcpp_dbC2Ev(
	.param .b64 _ZNSt3__111__libcpp_dbC2Ev_param_0
)                                       // @_ZNSt3__111__libcpp_dbC2Ev
{
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt3__111__libcpp_dbC2Ev_param_0];
	mov.u64 	%rl2, 0;
	st.u64 	[%rl1+40], %rl2;
	st.u64 	[%rl1+32], %rl2;
	st.u64 	[%rl1+24], %rl2;
	st.u64 	[%rl1+16], %rl2;
	st.u64 	[%rl1+8], %rl2;
	st.u64 	[%rl1], %rl2;
	ret;
}

	// .globl	_ZNSt3__111__libcpp_dbD2Ev
	.align	2
.visible .func _ZNSt3__111__libcpp_dbD2Ev(
	.param .b64 _ZNSt3__111__libcpp_dbD2Ev_param_0
)                                       // @_ZNSt3__111__libcpp_dbD2Ev
{
	.reg .pred 	%p<9>;
	.reg .s64 	%rl<22>;

// BB#0:                                // %entry
	ld.param.u64 	%rl9, [_ZNSt3__111__libcpp_dbD2Ev_param_0];
	ld.u64 	%rl20, [%rl9];
	setp.eq.s64	%p1, %rl20, 0;
	@%p1 bra 	BB9_7;
// BB#1:                                // %for.cond.preheader
	ld.u64 	%rl10, [%rl9+8];
	setp.eq.s64	%p2, %rl20, %rl10;
	@%p2 bra 	BB9_6;
// BB#2:
BB9_3:                                  // %for.body
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl3, [%rl20];
	setp.eq.s64	%p3, %rl3, 0;
	@%p3 bra 	BB9_5;
// BB#4:                                // %if.then4
                                        //   in Loop: Header=BB9_3 Depth=1
	ld.u64 	%rl11, [%rl3];
	ld.u64 	%rl12, [%rl11];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	prototype_14 : .callprototype ()_ (.param .b64 _);
	call 
	%rl12, 
	(
	param0
	)
	, prototype_14;
	
	//{
	}// Callseq End 14
	ld.u64 	%rl13, [%rl20];
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl13;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 15
BB9_5:                                  // %for.inc
                                        //   in Loop: Header=BB9_3 Depth=1
	add.s64 	%rl20, %rl20, 8;
	ld.u64 	%rl14, [%rl9+8];
	setp.ne.s64	%p4, %rl20, %rl14;
	@%p4 bra 	BB9_3;
BB9_6:                                  // %for.end
	ld.u64 	%rl15, [%rl9];
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl15;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 16
BB9_7:                                  // %if.end7
	ld.u64 	%rl21, [%rl9+24];
	setp.eq.s64	%p5, %rl21, 0;
	@%p5 bra 	BB9_14;
// BB#8:                                // %for.cond12.preheader
	ld.u64 	%rl16, [%rl9+32];
	setp.eq.s64	%p6, %rl21, %rl16;
	@%p6 bra 	BB9_13;
// BB#9:
BB9_10:                                 // %for.body14
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl7, [%rl21];
	setp.eq.s64	%p7, %rl7, 0;
	@%p7 bra 	BB9_12;
// BB#11:                               // %if.then16
                                        //   in Loop: Header=BB9_10 Depth=1
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	call.uni 
	_ZNSt3__18__i_nodeD2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 17
	ld.u64 	%rl17, [%rl21];
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl17;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 18
BB9_12:                                 // %for.inc19
                                        //   in Loop: Header=BB9_10 Depth=1
	add.s64 	%rl21, %rl21, 8;
	ld.u64 	%rl18, [%rl9+32];
	setp.ne.s64	%p8, %rl21, %rl18;
	@%p8 bra 	BB9_10;
BB9_13:                                 // %for.end21
	ld.u64 	%rl19, [%rl9+24];
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl19;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 19
BB9_14:                                 // %if.end24
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db15__find_c_from_iEPv
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNKSt3__111__libcpp_db15__find_c_from_iEPv(
	.param .b64 _ZNKSt3__111__libcpp_db15__find_c_from_iEPv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db15__find_c_from_iEPv_param_1
)                                       // @_ZNKSt3__111__libcpp_db15__find_c_from_iEPv
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<15>;

// BB#0:                                // %entry
	ld.param.u64 	%rl8, [_ZNKSt3__111__libcpp_db15__find_c_from_iEPv_param_0];
	ld.param.u64 	%rl9, [_ZNKSt3__111__libcpp_db15__find_c_from_iEPv_param_1];
	mov.u64 	%rl10, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl10;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 20
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 21
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl9;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 22
	setp.ne.s64	%p1, %rl4, 0;
	@%p1 bra 	BB10_2;
// BB#1:                                // %invoke.cont3
	mov.u64 	%rl11, .str;
	cvta.global.u64 	%rl2, %rl11;
	mov.u64 	%rl12, .str1;
	cvta.global.u64 	%rl3, %rl12;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 23
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 24
BB10_2:                                 // %cond.end
	ld.u64 	%rl5, [%rl4+16];
	setp.eq.s64	%p2, %rl5, 0;
	@%p2 bra 	BB10_3;
// BB#4:                                // %cond.true7
	ld.u64 	%rl14, [%rl5+8];
	bra.uni 	BB10_5;
BB10_3:
	mov.u64 	%rl14, 0;
BB10_5:                                 // %cond.end11
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 25
	st.param.b64	[func_retval0+0], %rl14;
	ret;
}

.func _ZNSt3__112_GLOBAL__N_13mutEv(

)                                       // @_ZNSt3__112_GLOBAL__N_13mutEv
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<8>;

// BB#0:                                // %entry
	mov.u64 	%rl4, _ZGVZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl4;
	ld.u8 	%rs1, [%rl1];
	setp.ne.s16	%p1, %rs1, 0;
	@%p1 bra 	BB11_3;
// BB#1:                                // %init.check
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_guard_acquire, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 26
	setp.eq.s32	%p2, %r1, 0;
	@%p2 bra 	BB11_3;
// BB#2:                                // %init
	mov.u64 	%rl5, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl2, %rl5;
	mov.u64 	%rl6, __dso_handle;
	cvta.global.u64 	%rl3, %rl6;
	mov.u64 	%rl7, _ZNSt3__15mutexD1Ev;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_atexit, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 27
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	__cxa_guard_release, 
	(
	param0
	);
	
	//{
	}// Callseq End 28
BB11_3:                                 // %init.end
	ret;
}

	.hidden	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv
	// .globl	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNKSt3__111__libcpp_db15__find_iteratorEPKv(
	.param .b64 _ZNKSt3__111__libcpp_db15__find_iteratorEPKv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db15__find_iteratorEPKv_param_1
)                                       // @_ZNKSt3__111__libcpp_db15__find_iteratorEPKv
{
	.local .align 8 .b8 	__local_depot12[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s64 	%rl<27>;

// BB#0:                                // %entry
	mov.u64 	%rl26, __local_depot12;
	cvta.local.u64 	%SP, %rl26;
	ld.param.u64 	%rl6, [_ZNKSt3__111__libcpp_db15__find_iteratorEPKv_param_0];
	ld.u64 	%rl9, [%rl6+24];
	ld.u64 	%rl10, [%rl6+32];
	setp.eq.s64	%p1, %rl9, %rl10;
	mov.u64 	%rl25, 0;
	@%p1 bra 	BB12_7;
// BB#1:                                // %if.then
	ld.param.u64 	%rl7, [_ZNKSt3__111__libcpp_db15__find_iteratorEPKv_param_1];
	st.u64 	[%SP+0], %rl7;
	add.u64 	%rl11, %SP, 8;
	add.u64 	%rl12, %SP, 0;
	mov.u64 	%rl13, 8;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl12;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl13;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl1, [retval0+0];
	
	//{
	}// Callseq End 29
// BB#2:                                // %_ZNKSt3__14hashIPKvEclES2_.exit
	ld.u64 	%rl15, [%rl6+32];
	ld.u64 	%rl16, [%rl6+24];
	sub.s64 	%rl17, %rl15, %rl16;
	shr.s64 	%rl18, %rl17, 3;
	rem.u64 	%rl19, %rl1, %rl18;
	shl.b64 	%rl20, %rl19, 3;
	add.s64 	%rl21, %rl16, %rl20;
	ld.u64 	%rl24, [%rl21];
	setp.eq.s64	%p2, %rl24, 0;
	@%p2 bra 	BB12_8;
// BB#3:
BB12_5:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl22, [%rl24];
	setp.ne.s64	%p3, %rl22, %rl7;
	@%p3 bra 	BB12_4;
	bra.uni 	BB12_9;
BB12_4:                                 // %for.cond
                                        //   in Loop: Header=BB12_5 Depth=1
	ld.u64 	%rl24, [%rl24+8];
	setp.eq.s64	%p4, %rl24, 0;
	@%p4 bra 	BB12_10;
	bra.uni 	BB12_5;
BB12_10:
	bra.uni 	BB12_6;
BB12_7:
	bra.uni 	BB12_6;
BB12_8:
	bra.uni 	BB12_6;
BB12_9:
	mov.u64 	%rl25, %rl24;
BB12_6:                                 // %if.end9
	st.param.b64	[func_retval0+0], %rl25;
	ret;
}

	.weak	_Z6printfIJPKcEEiS1_DpT_
.func  (.param .b32 func_retval0) _Z6printfIJPKcEEiS1_DpT_(
	.param .b64 _Z6printfIJPKcEEiS1_DpT__param_0,
	.param .b64 _Z6printfIJPKcEEiS1_DpT__param_1
)                                       // @_Z6printfIJPKcEEiS1_DpT_
{
	.local .align 8 .b8 	__local_depot13[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<5>;

// BB#0:                                // %entry
	mov.u64 	%rl4, __local_depot13;
	cvta.local.u64 	%SP, %rl4;
	ld.param.u64 	%rl1, [_Z6printfIJPKcEEiS1_DpT__param_0];
	ld.param.u64 	%rl2, [_Z6printfIJPKcEEiS1_DpT__param_1];
	add.u64 	%rl3, %SP, 0;
	mov.u32 	%r1, 0;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl2;
	call.uni 
	_Z10fillBufferIPKcEvPciT_, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 30
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 31
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_ZNSt3__111__libcpp_db11__insert_icEPvPKv
	.align	2
.visible .func _ZNSt3__111__libcpp_db11__insert_icEPvPKv(
	.param .b64 _ZNSt3__111__libcpp_db11__insert_icEPvPKv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db11__insert_icEPvPKv_param_1,
	.param .b64 _ZNSt3__111__libcpp_db11__insert_icEPvPKv_param_2
)                                       // @_ZNSt3__111__libcpp_db11__insert_icEPvPKv
{
	.local .align 8 .b8 	__local_depot14[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s64 	%rl<26>;

// BB#0:                                // %entry
	mov.u64 	%rl25, __local_depot14;
	cvta.local.u64 	%SP, %rl25;
	ld.param.u64 	%rl7, [_ZNSt3__111__libcpp_db11__insert_icEPvPKv_param_0];
	mov.u64 	%rl10, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl10;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 32
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 33
	ld.u64 	%rl11, [%rl7];
	ld.u64 	%rl12, [%rl7+8];
	setp.eq.s64	%p1, %rl11, %rl12;
	@%p1 bra 	BB14_9;
// BB#1:                                // %if.end
	ld.param.u64 	%rl8, [_ZNSt3__111__libcpp_db11__insert_icEPvPKv_param_1];
	ld.param.u64 	%rl9, [_ZNSt3__111__libcpp_db11__insert_icEPvPKv_param_2];
	st.u64 	[%SP+0], %rl9;
	add.u64 	%rl13, %SP, 8;
	add.u64 	%rl14, %SP, 0;
	mov.u64 	%rl15, 8;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl14;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl15;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 34
// BB#2:                                // %_ZNKSt3__14hashIPKvEclES2_.exit
	ld.u64 	%rl16, [%rl7+8];
	ld.u64 	%rl17, [%rl7];
	sub.s64 	%rl18, %rl16, %rl17;
	shr.s64 	%rl19, %rl18, 3;
	rem.u64 	%rl20, %rl2, %rl19;
	shl.b64 	%rl21, %rl20, 3;
	add.s64 	%rl22, %rl17, %rl21;
	ld.u64 	%rl24, [%rl22];
	setp.eq.s64	%p2, %rl24, 0;
	@%p2 bra 	BB14_9;
// BB#3:
BB14_4:                                 // %while.cond
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl23, [%rl24+8];
	setp.eq.s64	%p3, %rl23, %rl9;
	@%p3 bra 	BB14_6;
// BB#5:                                // %while.body
                                        //   in Loop: Header=BB14_4 Depth=1
	ld.u64 	%rl24, [%rl24+16];
	setp.eq.s64	%p4, %rl24, 0;
	@%p4 bra 	BB14_9;
	bra.uni 	BB14_4;
BB14_6:                                 // %while.end
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl8;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__111__libcpp_db17__insert_iteratorEPv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 35
// BB#7:                                // %invoke.cont
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl6;
	call.uni 
	_ZNSt3__18__c_node5__addEPNS_8__i_nodeE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 36
// BB#8:                                // %invoke.cont16
	st.u64 	[%rl6+16], %rl24;
BB14_9:                                 // %cleanup
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 37
	ret;
}

	.hidden	_ZNSt3__111__libcpp_db17__insert_iteratorEPv
	// .globl	_ZNSt3__111__libcpp_db17__insert_iteratorEPv
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNSt3__111__libcpp_db17__insert_iteratorEPv(
	.param .b64 _ZNSt3__111__libcpp_db17__insert_iteratorEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db17__insert_iteratorEPv_param_1
)                                       // @_ZNSt3__111__libcpp_db17__insert_iteratorEPv
{
	.local .align 8 .b8 	__local_depot15[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .s64 	%rl<64>;

// BB#0:                                // %entry
	mov.u64 	%rl63, __local_depot15;
	cvta.local.u64 	%SP, %rl63;
	ld.param.u64 	%rl15, [_ZNSt3__111__libcpp_db17__insert_iteratorEPv_param_0];
	ld.param.u64 	%rl16, [_ZNSt3__111__libcpp_db17__insert_iteratorEPv_param_1];
	mov.u64 	%rl17, _ZTISt9bad_alloc;
	cvta.global.u64 	%rl1, %rl17;
	ld.u64 	%rl18, [%rl15+40];
	add.s64 	%rl19, %rl18, 1;
	ld.u64 	%rl20, [%rl15+32];
	ld.u64 	%rl21, [%rl15+24];
	sub.s64 	%rl2, %rl20, %rl21;
	shr.s64 	%rl22, %rl2, 3;
	setp.le.u64	%p1, %rl19, %rl22;
	@%p1 bra 	BB15_10;
// BB#1:                                // %if.then
	shr.s64 	%rl23, %rl2, 2;
	add.s64 	%rl24, %rl23, 1;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl24;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__112__next_primeEy, 
	(
	param0
	);
	ld.param.b64	%rl3, [retval0+0];
	
	//{
	}// Callseq End 38
	mov.u64 	%rl25, 8;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl25;
	.param .b64 retval0;
	call.uni (retval0), 
	calloc, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 39
	setp.ne.s64	%p2, %rl4, 0;
	@%p2 bra 	BB15_3;
	bra.uni 	BB15_2;
BB15_3:                                 // %if.end
	ld.u64 	%rl61, [%rl15+24];
	ld.u64 	%rl26, [%rl15+32];
	setp.eq.s64	%p3, %rl61, %rl26;
	@%p3 bra 	BB15_9;
// BB#4:                                // %for.body.lr.ph
BB15_5:                                 // %for.body
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB15_6 Depth 2
	ld.u64 	%rl62, [%rl61];
	setp.eq.s64	%p4, %rl62, 0;
	@%p4 bra 	BB15_8;
BB15_6:                                 // %while.body
                                        //   Parent Loop BB15_5 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	ld.u64 	%rl27, [%rl62];
	st.u64 	[%SP+0], %rl27;
	add.u64 	%rl28, %SP, 8;
	add.u64 	%rl29, %SP, 0;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl29;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl25;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl9, [retval0+0];
	
	//{
	}// Callseq End 40
// BB#7:                                // %_ZNKSt3__14hashIPvEclES1_.exit
                                        //   in Loop: Header=BB15_6 Depth=2
	rem.u64 	%rl31, %rl9, %rl3;
	ld.u64 	%rl10, [%rl62+8];
	shl.b64 	%rl32, %rl31, 3;
	add.s64 	%rl33, %rl4, %rl32;
	ld.u64 	%rl34, [%rl33];
	st.u64 	[%rl62+8], %rl34;
	st.u64 	[%rl33], %rl62;
	setp.ne.s64	%p5, %rl10, 0;
	mov.u64 	%rl62, %rl10;
	@%p5 bra 	BB15_6;
BB15_8:                                 // %for.inc
                                        //   in Loop: Header=BB15_5 Depth=1
	add.s64 	%rl61, %rl61, 8;
	ld.u64 	%rl35, [%rl15+32];
	setp.ne.s64	%p6, %rl61, %rl35;
	@%p6 bra 	BB15_5;
BB15_9:                                 // %for.end
	ld.u64 	%rl36, [%rl15+24];
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl36;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 41
	st.u64 	[%rl15+24], %rl4;
	shl.b64 	%rl37, %rl3, 3;
	add.s64 	%rl38, %rl4, %rl37;
	st.u64 	[%rl15+32], %rl38;
BB15_10:                                // %if.end24
	st.u64 	[%SP+0], %rl16;
	add.u64 	%rl39, %SP, 8;
	add.u64 	%rl40, %SP, 0;
	mov.u64 	%rl41, 8;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl40;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl41;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl12, [retval0+0];
	
	//{
	}// Callseq End 42
// BB#11:                               // %_ZNKSt3__14hashIPvEclES1_.exit70
	ld.u64 	%rl42, [%rl15+32];
	ld.u64 	%rl43, [%rl15+24];
	sub.s64 	%rl44, %rl42, %rl43;
	shr.s64 	%rl45, %rl44, 3;
	rem.u64 	%rl46, %rl12, %rl45;
	shl.b64 	%rl47, %rl46, 3;
	add.s64 	%rl48, %rl43, %rl47;
	ld.u64 	%rl13, [%rl48];
	mov.u64 	%rl49, 24;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl49;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rl14, [retval0+0];
	
	//{
	}// Callseq End 43
	ld.u64 	%rl50, [%rl15+24];
	add.s64 	%rl51, %rl50, %rl47;
	st.u64 	[%rl51], %rl14;
	setp.ne.s64	%p7, %rl14, 0;
	@%p7 bra 	BB15_13;
	bra.uni 	BB15_12;
BB15_13:                                // %new.notnull
	st.u64 	[%rl14], %rl16;
	st.u64 	[%rl14+8], %rl13;
	mov.u64 	%rl52, 0;
	st.u64 	[%rl14+16], %rl52;
	ld.u64 	%rl53, [%rl15+40];
	add.s64 	%rl54, %rl53, 1;
	st.u64 	[%rl15+40], %rl54;
	st.param.b64	[func_retval0+0], %rl14;
	ret;
BB15_2:                                 // %if.then11
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl25;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl59, [retval0+0];
	
	//{
	}// Callseq End 47
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl59;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 48
	mov.u64 	%rl60, _ZNSt9bad_allocD1Ev;
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl60;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 49
BB15_12:                                // %if.then45
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl41;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl56, [retval0+0];
	
	//{
	}// Callseq End 44
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl56;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 45
	mov.u64 	%rl57, _ZNSt9bad_allocD1Ev;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl57;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 46
}

	// .globl	_ZNSt3__18__c_node5__addEPNS_8__i_nodeE
	.align	2
.visible .func _ZNSt3__18__c_node5__addEPNS_8__i_nodeE(
	.param .b64 _ZNSt3__18__c_node5__addEPNS_8__i_nodeE_param_0,
	.param .b64 _ZNSt3__18__c_node5__addEPNS_8__i_nodeE_param_1
)                                       // @_ZNSt3__18__c_node5__addEPNS_8__i_nodeE
{
	.reg .pred 	%p<5>;
	.reg .s64 	%rl<29>;

// BB#0:                                // %entry
	ld.param.u64 	%rl5, [_ZNSt3__18__c_node5__addEPNS_8__i_nodeE_param_0];
	ld.param.u64 	%rl6, [_ZNSt3__18__c_node5__addEPNS_8__i_nodeE_param_1];
	ld.u64 	%rl8, [%rl5+32];
	ld.u64 	%rl2, [%rl5+40];
	setp.ne.s64	%p1, %rl8, %rl2;
	@%p1 bra 	BB16_6;
// BB#1:                                // %if.then
	ld.u64 	%rl9, [%rl5+24];
	sub.s64 	%rl10, %rl2, %rl9;
	shr.s64 	%rl11, %rl10, 2;
	setp.eq.s64	%p2, %rl11, 0;
	selp.b64	%rl3, 1, %rl11, %p2;
	shl.b64 	%rl12, %rl3, 3;
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl12;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 50
	setp.ne.s64	%p3, %rl4, 0;
	@%p3 bra 	BB16_3;
	bra.uni 	BB16_2;
BB16_3:                                 // %if.end8
	setp.lt.u64	%p4, %rl3, 2;
	@%p4 bra 	BB16_5;
// BB#4:                                // %if.then10
	ld.u64 	%rl13, [%rl5+24];
	shl.b64 	%rl14, %rl3, 2;
	and.b64  	%rl15, %rl14, -8;
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl13;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl15;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl16, [retval0+0];
	
	//{
	}// Callseq End 51
BB16_5:                                 // %if.end14
	ld.u64 	%rl17, [%rl5+24];
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl17;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 52
	st.u64 	[%rl5+24], %rl4;
	shl.b64 	%rl18, %rl3, 2;
	and.b64  	%rl19, %rl18, -8;
	add.s64 	%rl20, %rl4, %rl19;
	st.u64 	[%rl5+32], %rl20;
	ld.u64 	%rl21, [%rl5+24];
	add.s64 	%rl23, %rl21, %rl12;
	st.u64 	[%rl5+40], %rl23;
BB16_6:                                 // %if.end23
	ld.u64 	%rl24, [%rl5+32];
	add.s64 	%rl25, %rl24, 8;
	st.u64 	[%rl5+32], %rl25;
	st.u64 	[%rl24], %rl6;
	ret;
BB16_2:                                 // %if.then7
	mov.u64 	%rl7, _ZTISt9bad_alloc;
	cvta.global.u64 	%rl1, %rl7;
	mov.u64 	%rl26, 8;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl26;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl27, [retval0+0];
	
	//{
	}// Callseq End 53
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl27;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 54
	mov.u64 	%rl28, _ZNSt9bad_allocD1Ev;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl28;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 55
}

	// .globl	_ZNSt3__111__libcpp_db10__insert_cEPv
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNSt3__111__libcpp_db10__insert_cEPv(
	.param .b64 _ZNSt3__111__libcpp_db10__insert_cEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db10__insert_cEPv_param_1
)                                       // @_ZNSt3__111__libcpp_db10__insert_cEPv
{
	.local .align 8 .b8 	__local_depot17[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .s64 	%rl<68>;

// BB#0:                                // %entry
	mov.u64 	%rl67, __local_depot17;
	cvta.local.u64 	%SP, %rl67;
	ld.param.u64 	%rl16, [_ZNSt3__111__libcpp_db10__insert_cEPv_param_0];
	ld.param.u64 	%rl17, [_ZNSt3__111__libcpp_db10__insert_cEPv_param_1];
	mov.u64 	%rl18, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl18;
	mov.u64 	%rl19, _ZTISt9bad_alloc;
	cvta.global.u64 	%rl2, %rl19;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 56
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 57
	ld.u64 	%rl20, [%rl16+16];
	add.s64 	%rl21, %rl20, 1;
	ld.u64 	%rl22, [%rl16+8];
	ld.u64 	%rl23, [%rl16];
	sub.s64 	%rl3, %rl22, %rl23;
	shr.s64 	%rl24, %rl3, 3;
	setp.le.u64	%p1, %rl21, %rl24;
	@%p1 bra 	BB17_11;
// BB#1:                                // %if.then
	shr.s64 	%rl25, %rl3, 2;
	add.s64 	%rl26, %rl25, 1;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl26;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__112__next_primeEy, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 58
// BB#2:                                // %invoke.cont10
	mov.u64 	%rl27, 8;
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl27;
	.param .b64 retval0;
	call.uni (retval0), 
	calloc, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl5, [retval0+0];
	
	//{
	}// Callseq End 59
	setp.ne.s64	%p2, %rl5, 0;
	@%p2 bra 	BB17_4;
	bra.uni 	BB17_3;
BB17_4:                                 // %if.end
	ld.u64 	%rl65, [%rl16];
	ld.u64 	%rl28, [%rl16+8];
	setp.eq.s64	%p3, %rl65, %rl28;
	@%p3 bra 	BB17_10;
// BB#5:                                // %for.body.lr.ph
BB17_6:                                 // %for.body
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB17_7 Depth 2
	ld.u64 	%rl66, [%rl65];
	setp.eq.s64	%p4, %rl66, 0;
	@%p4 bra 	BB17_9;
BB17_7:                                 // %while.body
                                        //   Parent Loop BB17_6 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	ld.u64 	%rl29, [%rl66+8];
	st.u64 	[%SP+0], %rl29;
	add.u64 	%rl30, %SP, 8;
	add.u64 	%rl31, %SP, 0;
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl31;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl27;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl10, [retval0+0];
	
	//{
	}// Callseq End 60
// BB#8:                                // %_ZNKSt3__14hashIPvEclES1_.exit
                                        //   in Loop: Header=BB17_7 Depth=2
	rem.u64 	%rl33, %rl10, %rl4;
	ld.u64 	%rl11, [%rl66+16];
	shl.b64 	%rl34, %rl33, 3;
	add.s64 	%rl35, %rl5, %rl34;
	ld.u64 	%rl36, [%rl35];
	st.u64 	[%rl66+16], %rl36;
	st.u64 	[%rl35], %rl66;
	setp.ne.s64	%p5, %rl11, 0;
	mov.u64 	%rl66, %rl11;
	@%p5 bra 	BB17_7;
BB17_9:                                 // %for.inc
                                        //   in Loop: Header=BB17_6 Depth=1
	add.s64 	%rl65, %rl65, 8;
	ld.u64 	%rl37, [%rl16+8];
	setp.ne.s64	%p6, %rl65, %rl37;
	@%p6 bra 	BB17_6;
BB17_10:                                // %invoke.cont23
	ld.u64 	%rl38, [%rl16];
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl38;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 61
	st.u64 	[%rl16], %rl5;
	shl.b64 	%rl39, %rl4, 3;
	add.s64 	%rl40, %rl5, %rl39;
	st.u64 	[%rl16+8], %rl40;
BB17_11:                                // %if.end27
	st.u64 	[%SP+0], %rl17;
	add.u64 	%rl41, %SP, 8;
	add.u64 	%rl42, %SP, 0;
	mov.u64 	%rl43, 8;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl42;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl43;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl13, [retval0+0];
	
	//{
	}// Callseq End 62
// BB#12:                               // %invoke.cont44
	ld.u64 	%rl44, [%rl16+8];
	ld.u64 	%rl45, [%rl16];
	sub.s64 	%rl46, %rl44, %rl45;
	shr.s64 	%rl47, %rl46, 3;
	rem.u64 	%rl48, %rl13, %rl47;
	shl.b64 	%rl49, %rl48, 3;
	add.s64 	%rl50, %rl45, %rl49;
	ld.u64 	%rl14, [%rl50];
	mov.u64 	%rl51, 48;
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl51;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rl15, [retval0+0];
	
	//{
	}// Callseq End 63
	ld.u64 	%rl52, [%rl16];
	add.s64 	%rl53, %rl52, %rl49;
	st.u64 	[%rl53], %rl15;
	ld.u64 	%rl54, [%rl16];
	add.s64 	%rl55, %rl54, %rl49;
	ld.u64 	%rl56, [%rl55];
	setp.ne.s64	%p7, %rl56, 0;
	@%p7 bra 	BB17_14;
	bra.uni 	BB17_13;
BB17_14:                                // %if.end53
	st.u64 	[%rl15+8], %rl17;
	st.u64 	[%rl15+16], %rl14;
	ld.u64 	%rl57, [%rl16+16];
	add.s64 	%rl58, %rl57, 1;
	st.u64 	[%rl16+16], %rl58;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 64
	st.param.b64	[func_retval0+0], %rl15;
	ret;
BB17_3:                                 // %if.then13
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl27;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl63, [retval0+0];
	
	//{
	}// Callseq End 68
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl63;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 69
	mov.u64 	%rl64, _ZNSt9bad_allocD1Ev;
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl64;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 70
BB17_13:                                // %if.then51
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl43;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl60, [retval0+0];
	
	//{
	}// Callseq End 65
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl60;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 66
	mov.u64 	%rl61, _ZNSt9bad_allocD1Ev;
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl60;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl61;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 67
}

	// .globl	_ZNSt3__111__libcpp_db9__erase_iEPv
	.align	2
.visible .func _ZNSt3__111__libcpp_db9__erase_iEPv(
	.param .b64 _ZNSt3__111__libcpp_db9__erase_iEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db9__erase_iEPv_param_1
)                                       // @_ZNSt3__111__libcpp_db9__erase_iEPv
{
	.local .align 8 .b8 	__local_depot18[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .s64 	%rl<34>;

// BB#0:                                // %entry
	mov.u64 	%rl33, __local_depot18;
	cvta.local.u64 	%SP, %rl33;
	ld.param.u64 	%rl10, [_ZNSt3__111__libcpp_db9__erase_iEPv_param_0];
	mov.u64 	%rl12, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl12;
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 71
	// Callseq Start 72
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 72
	ld.u64 	%rl13, [%rl10+24];
	ld.u64 	%rl14, [%rl10+32];
	setp.eq.s64	%p1, %rl13, %rl14;
	@%p1 bra 	BB18_11;
// BB#1:                                // %if.then
	ld.param.u64 	%rl11, [_ZNSt3__111__libcpp_db9__erase_iEPv_param_1];
	st.u64 	[%SP+0], %rl11;
	add.u64 	%rl15, %SP, 8;
	add.u64 	%rl16, %SP, 0;
	mov.u64 	%rl17, 8;
	// Callseq Start 73
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl17;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 73
// BB#2:                                // %_ZNKSt3__14hashIPvEclES1_.exit
	ld.u64 	%rl19, [%rl10+32];
	ld.u64 	%rl20, [%rl10+24];
	sub.s64 	%rl21, %rl19, %rl20;
	shr.s64 	%rl22, %rl21, 3;
	rem.u64 	%rl3, %rl2, %rl22;
	shl.b64 	%rl23, %rl3, 3;
	add.s64 	%rl24, %rl20, %rl23;
	ld.u64 	%rl32, [%rl24];
	setp.eq.s64	%p2, %rl32, 0;
	@%p2 bra 	BB18_11;
// BB#3:
	mov.u64 	%rl5, 0;
BB18_4:                                 // %while.cond
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl25, [%rl32];
	setp.eq.s64	%p3, %rl25, %rl11;
	@%p3 bra 	BB18_6;
// BB#5:                                // %while.body
                                        //   in Loop: Header=BB18_4 Depth=1
	ld.u64 	%rl7, [%rl32+8];
	setp.eq.s64	%p4, %rl7, 0;
	mov.u64 	%rl5, %rl32;
	mov.u64 	%rl32, %rl7;
	@%p4 bra 	BB18_11;
	bra.uni 	BB18_4;
BB18_6:                                 // %while.end
	ld.u64 	%rl8, [%rl32+8];
	setp.ne.s64	%p5, %rl5, 0;
	@%p5 bra 	BB18_8;
	bra.uni 	BB18_7;
BB18_8:                                 // %if.else
	st.u64 	[%rl5+8], %rl8;
	bra.uni 	BB18_9;
BB18_7:                                 // %if.then14
	ld.u64 	%rl26, [%rl10+24];
	add.s64 	%rl28, %rl26, %rl23;
	st.u64 	[%rl28], %rl8;
BB18_9:                                 // %invoke.cont
	ld.u64 	%rl9, [%rl32+16];
	// Callseq Start 74
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl32;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 74
	ld.u64 	%rl29, [%rl10+40];
	add.s64 	%rl30, %rl29, -1;
	st.u64 	[%rl10+40], %rl30;
	setp.eq.s64	%p6, %rl9, 0;
	@%p6 bra 	BB18_11;
// BB#10:                               // %if.then23
	// Callseq Start 75
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl32;
	call.uni 
	_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 75
BB18_11:                                // %cleanup
	// Callseq Start 76
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 76
	ret;
}

	.hidden	_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE
	// .globl	_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE
	.align	2
.visible .func _ZNSt3__18__c_node8__removeEPNS_8__i_nodeE(
	.param .b64 _ZNSt3__18__c_node8__removeEPNS_8__i_nodeE_param_0,
	.param .b64 _ZNSt3__18__c_node8__removeEPNS_8__i_nodeE_param_1
)                                       // @_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<21>;

// BB#0:                                // %entry
	ld.param.u64 	%rl9, [_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE_param_0];
	ld.u64 	%rl20, [%rl9+24];
	ld.u64 	%rl4, [%rl9+32];
	setp.eq.s64	%p1, %rl20, %rl4;
	@%p1 bra 	BB19_9;
// BB#1:
	ld.param.u64 	%rl10, [_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE_param_1];
BB19_3:                                 // %for.body.i
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl13, [%rl20];
	setp.ne.s64	%p2, %rl13, %rl10;
	@%p2 bra 	BB19_2;
	bra.uni 	BB19_10;
BB19_2:                                 // %for.cond.i
                                        //   in Loop: Header=BB19_3 Depth=1
	add.s64 	%rl20, %rl20, 8;
	setp.eq.s64	%p3, %rl4, %rl20;
	@%p3 bra 	BB19_4;
	bra.uni 	BB19_3;
BB19_9:
	bra.uni 	BB19_4;
BB19_10:
BB19_4:                                 // %_ZNSt3__14findIPPNS_8__i_nodeES2_EET_S4_S4_RKT0_.exit
	ld.u64 	%rl14, [%rl9+32];
	setp.ne.s64	%p4, %rl20, %rl14;
	@%p4 bra 	BB19_6;
// BB#5:                                // %cond.false
	mov.u64 	%rl11, .str;
	cvta.global.u64 	%rl1, %rl11;
	mov.u64 	%rl12, .str10;
	cvta.global.u64 	%rl2, %rl12;
	// Callseq Start 77
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 77
	// Callseq Start 78
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 78
BB19_6:                                 // %cond.end
	ld.u64 	%rl15, [%rl9+32];
	add.s64 	%rl8, %rl15, -8;
	st.u64 	[%rl9+32], %rl8;
	setp.eq.s64	%p5, %rl8, %rl20;
	@%p5 bra 	BB19_8;
// BB#7:                                // %if.then
	add.s64 	%rl16, %rl20, 8;
	sub.s64 	%rl17, %rl8, %rl20;
	// Callseq Start 79
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl17;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z7memmovePvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl18, [retval0+0];
	
	//{
	}// Callseq End 79
BB19_8:                                 // %if.end
	ret;
}

	// .globl	_ZNSt3__111__libcpp_db16__invalidate_allEPv
	.align	2
.visible .func _ZNSt3__111__libcpp_db16__invalidate_allEPv(
	.param .b64 _ZNSt3__111__libcpp_db16__invalidate_allEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db16__invalidate_allEPv_param_1
)                                       // @_ZNSt3__111__libcpp_db16__invalidate_allEPv
{
	.local .align 8 .b8 	__local_depot20[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .s64 	%rl<33>;

// BB#0:                                // %entry
	mov.u64 	%rl32, __local_depot20;
	cvta.local.u64 	%SP, %rl32;
	ld.param.u64 	%rl9, [_ZNSt3__111__libcpp_db16__invalidate_allEPv_param_0];
	mov.u64 	%rl11, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl11;
	// Callseq Start 80
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 80
	// Callseq Start 81
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 81
	ld.u64 	%rl12, [%rl9+8];
	ld.u64 	%rl13, [%rl9];
	setp.eq.s64	%p1, %rl12, %rl13;
	@%p1 bra 	BB20_9;
// BB#1:                                // %if.then
	ld.param.u64 	%rl10, [_ZNSt3__111__libcpp_db16__invalidate_allEPv_param_1];
	st.u64 	[%SP+0], %rl10;
	add.u64 	%rl14, %SP, 8;
	add.u64 	%rl15, %SP, 0;
	mov.u64 	%rl16, 8;
	// Callseq Start 82
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl15;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl16;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 82
// BB#2:                                // %_ZNKSt3__14hashIPvEclES1_.exit
	ld.u64 	%rl17, [%rl9+8];
	ld.u64 	%rl18, [%rl9];
	sub.s64 	%rl19, %rl17, %rl18;
	shr.s64 	%rl20, %rl19, 3;
	rem.u64 	%rl21, %rl2, %rl20;
	shl.b64 	%rl22, %rl21, 3;
	add.s64 	%rl23, %rl18, %rl22;
	ld.u64 	%rl30, [%rl23];
	setp.eq.s64	%p2, %rl30, 0;
	@%p2 bra 	BB20_9;
// BB#3:
BB20_4:                                 // %while.cond
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl24, [%rl30+8];
	setp.ne.s64	%p3, %rl24, %rl10;
	@%p3 bra 	BB20_7;
	bra.uni 	BB20_5;
BB20_7:                                 // %while.body
                                        //   in Loop: Header=BB20_4 Depth=1
	ld.u64 	%rl30, [%rl30+16];
	setp.eq.s64	%p4, %rl30, 0;
	@%p4 bra 	BB20_9;
	bra.uni 	BB20_4;
BB20_5:                                 // %while.cond13.preheader
	ld.u64 	%rl31, [%rl30+32];
	ld.u64 	%rl25, [%rl30+24];
	setp.eq.s64	%p5, %rl31, %rl25;
	@%p5 bra 	BB20_9;
// BB#6:
BB20_8:                                 // %while.body15
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rl26, %rl31, -8;
	st.u64 	[%rl30+32], %rl26;
	ld.u64 	%rl27, [%rl31+-8];
	mov.u64 	%rl28, 0;
	st.u64 	[%rl27+16], %rl28;
	ld.u64 	%rl31, [%rl30+32];
	ld.u64 	%rl29, [%rl30+24];
	setp.ne.s64	%p6, %rl31, %rl29;
	@%p6 bra 	BB20_8;
BB20_9:                                 // %cleanup
	// Callseq Start 83
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 83
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db17__find_c_and_lockEPv
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNKSt3__111__libcpp_db17__find_c_and_lockEPv(
	.param .b64 _ZNKSt3__111__libcpp_db17__find_c_and_lockEPv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db17__find_c_and_lockEPv_param_1
)                                       // @_ZNKSt3__111__libcpp_db17__find_c_and_lockEPv
{
	.local .align 8 .b8 	__local_depot21[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s64 	%rl<29>;

// BB#0:                                // %entry
	mov.u64 	%rl28, __local_depot21;
	cvta.local.u64 	%SP, %rl28;
	ld.param.u64 	%rl7, [_ZNKSt3__111__libcpp_db17__find_c_and_lockEPv_param_0];
	mov.u64 	%rl9, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl9;
	// Callseq Start 84
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 84
	// Callseq Start 85
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 85
	ld.u64 	%rl10, [%rl7+8];
	ld.u64 	%rl11, [%rl7];
	setp.ne.s64	%p1, %rl10, %rl11;
	@%p1 bra 	BB21_2;
	bra.uni 	BB21_1;
BB21_2:                                 // %if.end
	ld.param.u64 	%rl8, [_ZNKSt3__111__libcpp_db17__find_c_and_lockEPv_param_1];
	st.u64 	[%SP+0], %rl8;
	add.u64 	%rl12, %SP, 8;
	add.u64 	%rl13, %SP, 0;
	mov.u64 	%rl14, 8;
	// Callseq Start 86
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl13;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl14;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 86
// BB#3:                                // %_ZNKSt3__14hashIPvEclES1_.exit
	ld.u64 	%rl15, [%rl7+8];
	ld.u64 	%rl16, [%rl7];
	sub.s64 	%rl17, %rl15, %rl16;
	shr.s64 	%rl18, %rl17, 3;
	rem.u64 	%rl19, %rl2, %rl18;
	shl.b64 	%rl20, %rl19, 3;
	add.s64 	%rl21, %rl16, %rl20;
	ld.u64 	%rl27, [%rl21];
	setp.ne.s64	%p2, %rl27, 0;
	@%p2 bra 	BB21_4;
	bra.uni 	BB21_5;
BB21_4:
BB21_6:                                 // %while.cond
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl22, [%rl27+8];
	setp.eq.s64	%p3, %rl22, %rl8;
	@%p3 bra 	BB21_10;
// BB#7:                                // %while.body
                                        //   in Loop: Header=BB21_6 Depth=1
	ld.u64 	%rl27, [%rl27+16];
	setp.ne.s64	%p4, %rl27, 0;
	@%p4 bra 	BB21_6;
// BB#8:                                // %if.then14
	// Callseq Start 87
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 87
	// Callseq Start 88
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 88
	mov.u64 	%rl27, 0;
	bra.uni 	BB21_9;
BB21_1:                                 // %if.then
	// Callseq Start 91
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 91
	// Callseq Start 92
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 92
	mov.u64 	%rl27, 0;
	bra.uni 	BB21_9;
BB21_5:                                 // %if.then9
	// Callseq Start 89
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 89
	// Callseq Start 90
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 90
	mov.u64 	%rl27, 0;
	bra.uni 	BB21_9;
BB21_10:
BB21_9:                                 // %return
	st.param.b64	[func_retval0+0], %rl27;
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db8__find_cEPv
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNKSt3__111__libcpp_db8__find_cEPv(
	.param .b64 _ZNKSt3__111__libcpp_db8__find_cEPv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db8__find_cEPv_param_1
)                                       // @_ZNKSt3__111__libcpp_db8__find_cEPv
{
	.local .align 8 .b8 	__local_depot22[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<35>;

// BB#0:                                // %entry
	mov.u64 	%rl34, __local_depot22;
	cvta.local.u64 	%SP, %rl34;
	ld.param.u64 	%rl11, [_ZNKSt3__111__libcpp_db8__find_cEPv_param_0];
	ld.param.u64 	%rl12, [_ZNKSt3__111__libcpp_db8__find_cEPv_param_1];
	mov.u64 	%rl13, .str;
	cvta.global.u64 	%rl1, %rl13;
	mov.u64 	%rl14, .str2;
	cvta.global.u64 	%rl2, %rl14;
	mov.u64 	%rl15, .str3;
	cvta.global.u64 	%rl3, %rl15;
	st.u64 	[%SP+0], %rl12;
	add.u64 	%rl16, %SP, 8;
	add.u64 	%rl17, %SP, 0;
	mov.u64 	%rl18, 8;
	// Callseq Start 93
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl17;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl18;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 93
// BB#1:                                // %_ZNKSt3__14hashIPvEclES1_.exit
	ld.u64 	%rl19, [%rl11+8];
	ld.u64 	%rl20, [%rl11];
	sub.s64 	%rl21, %rl19, %rl20;
	shr.s64 	%rl22, %rl21, 3;
	rem.u64 	%rl23, %rl4, %rl22;
	shl.b64 	%rl24, %rl23, 3;
	add.s64 	%rl25, %rl20, %rl24;
	ld.u64 	%rl31, [%rl25];
	setp.ne.s64	%p1, %rl31, 0;
	@%p1 bra 	BB22_3;
// BB#2:                                // %cond.false
	// Callseq Start 94
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 94
	// Callseq Start 95
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 95
	mov.u64 	%rl31, 0;
BB22_3:                                 // %while.cond.preheader
	ld.u64 	%rl27, [%rl31+8];
	setp.eq.s64	%p2, %rl27, %rl12;
	@%p2 bra 	BB22_9;
// BB#4:
BB22_5:                                 // %while.body
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl31, [%rl31+16];
	setp.ne.s64	%p3, %rl31, 0;
	@%p3 bra 	BB22_7;
// BB#6:                                // %cond.false8
                                        //   in Loop: Header=BB22_5 Depth=1
	// Callseq Start 96
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 96
	// Callseq Start 97
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 97
	mov.u64 	%rl31, 0;
BB22_7:                                 // %while.cond.backedge
                                        //   in Loop: Header=BB22_5 Depth=1
	ld.u64 	%rl29, [%rl31+8];
	setp.ne.s64	%p4, %rl29, %rl12;
	@%p4 bra 	BB22_5;
	bra.uni 	BB22_8;
BB22_9:
BB22_8:                                 // %while.end
	st.param.b64	[func_retval0+0], %rl31;
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db6unlockEv
	.align	2
.visible .func _ZNKSt3__111__libcpp_db6unlockEv(
	.param .b64 _ZNKSt3__111__libcpp_db6unlockEv_param_0
)                                       // @_ZNKSt3__111__libcpp_db6unlockEv
{
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	mov.u64 	%rl1, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl2, %rl1;
	// Callseq Start 98
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 98
	// Callseq Start 99
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 99
	ret;
}

	// .globl	_ZNSt3__111__libcpp_db9__erase_cEPv
	.align	2
.visible .func _ZNSt3__111__libcpp_db9__erase_cEPv(
	.param .b64 _ZNSt3__111__libcpp_db9__erase_cEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db9__erase_cEPv_param_1
)                                       // @_ZNSt3__111__libcpp_db9__erase_cEPv
{
	.local .align 8 .b8 	__local_depot24[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .s64 	%rl<44>;

// BB#0:                                // %entry
	mov.u64 	%rl43, __local_depot24;
	cvta.local.u64 	%SP, %rl43;
	ld.param.u64 	%rl15, [_ZNSt3__111__libcpp_db9__erase_cEPv_param_0];
	mov.u64 	%rl17, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl17;
	// Callseq Start 100
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 100
	// Callseq Start 101
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 101
	ld.u64 	%rl18, [%rl15+8];
	ld.u64 	%rl19, [%rl15];
	setp.eq.s64	%p1, %rl18, %rl19;
	@%p1 bra 	BB24_13;
// BB#1:                                // %if.then
	ld.param.u64 	%rl16, [_ZNSt3__111__libcpp_db9__erase_cEPv_param_1];
	st.u64 	[%SP+0], %rl16;
	add.u64 	%rl20, %SP, 8;
	add.u64 	%rl21, %SP, 0;
	mov.u64 	%rl22, 8;
	// Callseq Start 102
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl21;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl22;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 102
// BB#2:                                // %_ZNKSt3__14hashIPvEclES1_.exit
	ld.u64 	%rl24, [%rl15+8];
	ld.u64 	%rl25, [%rl15];
	sub.s64 	%rl26, %rl24, %rl25;
	shr.s64 	%rl27, %rl26, 3;
	rem.u64 	%rl3, %rl2, %rl27;
	shl.b64 	%rl28, %rl3, 3;
	add.s64 	%rl29, %rl25, %rl28;
	ld.u64 	%rl40, [%rl29];
	setp.eq.s64	%p2, %rl40, 0;
	@%p2 bra 	BB24_13;
// BB#3:
	mov.u64 	%rl5, 0;
BB24_4:                                 // %while.cond
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl30, [%rl40+8];
	setp.eq.s64	%p3, %rl30, %rl16;
	@%p3 bra 	BB24_6;
// BB#5:                                // %while.body
                                        //   in Loop: Header=BB24_4 Depth=1
	ld.u64 	%rl7, [%rl40+16];
	setp.eq.s64	%p4, %rl7, 0;
	mov.u64 	%rl5, %rl40;
	mov.u64 	%rl40, %rl7;
	@%p4 bra 	BB24_13;
	bra.uni 	BB24_4;
BB24_6:                                 // %while.end
	ld.u64 	%rl8, [%rl40+16];
	setp.ne.s64	%p5, %rl5, 0;
	@%p5 bra 	BB24_8;
	bra.uni 	BB24_7;
BB24_8:                                 // %if.else
	st.u64 	[%rl5+16], %rl8;
	bra.uni 	BB24_9;
BB24_7:                                 // %if.then25
	ld.u64 	%rl31, [%rl15];
	add.s64 	%rl33, %rl31, %rl28;
	st.u64 	[%rl33], %rl8;
BB24_9:                                 // %while.cond32.preheader
	ld.u64 	%rl41, [%rl40+32];
	ld.u64 	%rl42, [%rl40+24];
	setp.eq.s64	%p6, %rl41, %rl42;
	@%p6 bra 	BB24_12;
// BB#10:
BB24_11:                                // %while.body34
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rl34, %rl41, -8;
	st.u64 	[%rl40+32], %rl34;
	ld.u64 	%rl35, [%rl41+-8];
	mov.u64 	%rl36, 0;
	st.u64 	[%rl35+16], %rl36;
	ld.u64 	%rl41, [%rl40+32];
	ld.u64 	%rl42, [%rl40+24];
	setp.ne.s64	%p7, %rl41, %rl42;
	@%p7 bra 	BB24_11;
BB24_12:                                // %invoke.cont41
	// Callseq Start 103
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl42;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 103
	// Callseq Start 104
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl40;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 104
	ld.u64 	%rl37, [%rl15+16];
	add.s64 	%rl38, %rl37, -1;
	st.u64 	[%rl15+16], %rl38;
BB24_13:                                // %cleanup
	// Callseq Start 105
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 105
	ret;
}

	// .globl	_ZNSt3__111__libcpp_db15__iterator_copyEPvPKv
	.align	2
.visible .func _ZNSt3__111__libcpp_db15__iterator_copyEPvPKv(
	.param .b64 _ZNSt3__111__libcpp_db15__iterator_copyEPvPKv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db15__iterator_copyEPvPKv_param_1,
	.param .b64 _ZNSt3__111__libcpp_db15__iterator_copyEPvPKv_param_2
)                                       // @_ZNSt3__111__libcpp_db15__iterator_copyEPvPKv
{
	.reg .pred 	%p<10>;
	.reg .s64 	%rl<20>;

// BB#0:                                // %entry
	ld.param.u64 	%rl10, [_ZNSt3__111__libcpp_db15__iterator_copyEPvPKv_param_0];
	ld.param.u64 	%rl11, [_ZNSt3__111__libcpp_db15__iterator_copyEPvPKv_param_1];
	ld.param.u64 	%rl13, [_ZNSt3__111__libcpp_db15__iterator_copyEPvPKv_param_2];
	mov.u64 	%rl14, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl14;
	// Callseq Start 106
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 106
	// Callseq Start 107
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 107
	// Callseq Start 108
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl11;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl18, [retval0+0];
	
	//{
	}// Callseq End 108
	// Callseq Start 109
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl13;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl3, [retval0+0];
	
	//{
	}// Callseq End 109
	mov.u64 	%rl19, 0;
	setp.eq.s64	%p1, %rl3, 0;
	@%p1 bra 	BB25_12;
// BB#1:                                // %cond.end
	setp.ne.s64	%p2, %rl3, 0;
	ld.u64 	%rl17, [%rl3+16];
	setp.eq.s64	%p3, %rl18, 0;
	and.pred  	%p4, %p3, %p2;
	@!%p4 bra 	BB25_3;
	bra.uni 	BB25_2;
BB25_2:                                 // %if.then
	// Callseq Start 110
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl11;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__111__libcpp_db17__insert_iteratorEPv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl18, [retval0+0];
	
	//{
	}// Callseq End 110
	bra.uni 	BB25_3;
BB25_12:
	mov.u64 	%rl17, %rl19;
BB25_3:                                 // %if.end
	setp.eq.s64	%p5, %rl18, 0;
	@%p5 bra 	BB25_5;
// BB#4:                                // %cond.true10
	ld.u64 	%rl19, [%rl18+16];
BB25_5:                                 // %cond.end13
	setp.eq.s64	%p6, %rl19, %rl17;
	@%p6 bra 	BB25_11;
// BB#6:                                // %if.then16
	setp.eq.s64	%p7, %rl19, 0;
	@%p7 bra 	BB25_8;
// BB#7:                                // %if.then18
	// Callseq Start 111
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl18;
	call.uni 
	_ZNSt3__18__c_node8__removeEPNS_8__i_nodeE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 111
BB25_8:                                 // %if.end20
	@%p5 bra 	BB25_11;
// BB#9:                                // %if.then22
	mov.u64 	%rl16, 0;
	st.u64 	[%rl18+16], %rl16;
	setp.eq.s64	%p9, %rl17, 0;
	@%p9 bra 	BB25_11;
// BB#10:                               // %if.then25
	st.u64 	[%rl18+16], %rl17;
	// Callseq Start 112
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl18;
	call.uni 
	_ZNSt3__18__c_node5__addEPNS_8__i_nodeE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 112
BB25_11:                                // %if.end31
	// Callseq Start 113
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 113
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db17__dereferenceableEPKv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNKSt3__111__libcpp_db17__dereferenceableEPKv(
	.param .b64 _ZNKSt3__111__libcpp_db17__dereferenceableEPKv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db17__dereferenceableEPKv_param_1
)                                       // @_ZNKSt3__111__libcpp_db17__dereferenceableEPKv
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<9>;

// BB#0:                                // %entry
	ld.param.u64 	%rl5, [_ZNKSt3__111__libcpp_db17__dereferenceableEPKv_param_0];
	ld.param.u64 	%rl4, [_ZNKSt3__111__libcpp_db17__dereferenceableEPKv_param_1];
	mov.u64 	%rl6, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl6;
	// Callseq Start 114
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 114
	// Callseq Start 115
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 115
	// Callseq Start 116
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 116
	setp.eq.s64	%p4, %rl2, 0;
	mov.pred 	%p7, 0;
	@%p4 bra 	BB26_4;
// BB#1:                                // %land.lhs.true
	ld.u64 	%rl3, [%rl2+16];
	setp.eq.s64	%p6, %rl3, 0;
	@%p6 bra 	BB26_3;
// BB#2:                                // %land.rhs
	ld.u64 	%rl7, [%rl3];
	ld.u64 	%rl8, [%rl7+16];
	// Callseq Start 117
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b32 retval0;
	prototype_117 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rl8, 
	(
	param0, 
	param1
	)
	, prototype_117;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 117
	and.b32  	%r2, %r1, 1;
	setp.eq.b32	%p7, %r2, 1;
	bra.uni 	BB26_3;
BB26_4:
BB26_3:                                 // %land.end
	// Callseq Start 118
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 118
	selp.u32	%r3, 1, 0, %p7;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db15__decrementableEPKv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNKSt3__111__libcpp_db15__decrementableEPKv(
	.param .b64 _ZNKSt3__111__libcpp_db15__decrementableEPKv_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db15__decrementableEPKv_param_1
)                                       // @_ZNKSt3__111__libcpp_db15__decrementableEPKv
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<9>;

// BB#0:                                // %entry
	ld.param.u64 	%rl5, [_ZNKSt3__111__libcpp_db15__decrementableEPKv_param_0];
	ld.param.u64 	%rl4, [_ZNKSt3__111__libcpp_db15__decrementableEPKv_param_1];
	mov.u64 	%rl6, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl6;
	// Callseq Start 119
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 119
	// Callseq Start 120
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 120
	// Callseq Start 121
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 121
	setp.eq.s64	%p4, %rl2, 0;
	mov.pred 	%p7, 0;
	@%p4 bra 	BB27_4;
// BB#1:                                // %land.lhs.true
	ld.u64 	%rl3, [%rl2+16];
	setp.eq.s64	%p6, %rl3, 0;
	@%p6 bra 	BB27_3;
// BB#2:                                // %land.rhs
	ld.u64 	%rl7, [%rl3];
	ld.u64 	%rl8, [%rl7+24];
	// Callseq Start 122
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b32 retval0;
	prototype_122 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rl8, 
	(
	param0, 
	param1
	)
	, prototype_122;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 122
	and.b32  	%r2, %r1, 1;
	setp.eq.b32	%p7, %r2, 1;
	bra.uni 	BB27_3;
BB27_4:
BB27_3:                                 // %land.end
	// Callseq Start 123
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 123
	selp.u32	%r3, 1, 0, %p7;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db9__addableEPKvy
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNKSt3__111__libcpp_db9__addableEPKvy(
	.param .b64 _ZNKSt3__111__libcpp_db9__addableEPKvy_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db9__addableEPKvy_param_1,
	.param .b64 _ZNKSt3__111__libcpp_db9__addableEPKvy_param_2
)                                       // @_ZNKSt3__111__libcpp_db9__addableEPKvy
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<10>;

// BB#0:                                // %entry
	ld.param.u64 	%rl6, [_ZNKSt3__111__libcpp_db9__addableEPKvy_param_0];
	ld.param.u64 	%rl4, [_ZNKSt3__111__libcpp_db9__addableEPKvy_param_1];
	mov.u64 	%rl7, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl7;
	// Callseq Start 124
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 124
	// Callseq Start 125
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 125
	// Callseq Start 126
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 126
	setp.eq.s64	%p4, %rl2, 0;
	mov.pred 	%p7, 0;
	@%p4 bra 	BB28_4;
// BB#1:                                // %land.lhs.true
	ld.u64 	%rl3, [%rl2+16];
	setp.eq.s64	%p6, %rl3, 0;
	@%p6 bra 	BB28_3;
// BB#2:                                // %land.rhs
	ld.param.u64 	%rl5, [_ZNKSt3__111__libcpp_db9__addableEPKvy_param_2];
	ld.u64 	%rl8, [%rl3];
	ld.u64 	%rl9, [%rl8+32];
	// Callseq Start 127
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b32 retval0;
	prototype_127 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rl9, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_127;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 127
	and.b32  	%r2, %r1, 1;
	setp.eq.b32	%p7, %r2, 1;
	bra.uni 	BB28_3;
BB28_4:
BB28_3:                                 // %land.end
	// Callseq Start 128
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 128
	selp.u32	%r3, 1, 0, %p7;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db15__subscriptableEPKvy
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNKSt3__111__libcpp_db15__subscriptableEPKvy(
	.param .b64 _ZNKSt3__111__libcpp_db15__subscriptableEPKvy_param_0,
	.param .b64 _ZNKSt3__111__libcpp_db15__subscriptableEPKvy_param_1,
	.param .b64 _ZNKSt3__111__libcpp_db15__subscriptableEPKvy_param_2
)                                       // @_ZNKSt3__111__libcpp_db15__subscriptableEPKvy
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<10>;

// BB#0:                                // %entry
	ld.param.u64 	%rl6, [_ZNKSt3__111__libcpp_db15__subscriptableEPKvy_param_0];
	ld.param.u64 	%rl4, [_ZNKSt3__111__libcpp_db15__subscriptableEPKvy_param_1];
	mov.u64 	%rl7, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl7;
	// Callseq Start 129
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 129
	// Callseq Start 130
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 130
	// Callseq Start 131
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 131
	setp.eq.s64	%p4, %rl2, 0;
	mov.pred 	%p7, 0;
	@%p4 bra 	BB29_4;
// BB#1:                                // %land.lhs.true
	ld.u64 	%rl3, [%rl2+16];
	setp.eq.s64	%p6, %rl3, 0;
	@%p6 bra 	BB29_3;
// BB#2:                                // %land.rhs
	ld.param.u64 	%rl5, [_ZNKSt3__111__libcpp_db15__subscriptableEPKvy_param_2];
	ld.u64 	%rl8, [%rl3];
	ld.u64 	%rl9, [%rl8+40];
	// Callseq Start 132
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b32 retval0;
	prototype_132 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rl9, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_132;
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 132
	and.b32  	%r2, %r1, 1;
	setp.eq.b32	%p7, %r2, 1;
	bra.uni 	BB29_3;
BB29_4:
BB29_3:                                 // %land.end
	// Callseq Start 133
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 133
	selp.u32	%r3, 1, 0, %p7;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2_
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2_(
	.param .b64 _ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2__param_0,
	.param .b64 _ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2__param_1,
	.param .b64 _ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2__param_2
)                                       // @_ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2_
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<16>;

// BB#0:                                // %entry
	ld.param.u64 	%rl9, [_ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2__param_0];
	ld.param.u64 	%rl10, [_ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2__param_1];
	ld.param.u64 	%rl11, [_ZNKSt3__111__libcpp_db22__less_than_comparableEPKvS2__param_2];
	mov.u64 	%rl12, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl12;
	// Callseq Start 134
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 134
	// Callseq Start 135
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 135
	// Callseq Start 136
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl10;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 136
	// Callseq Start 137
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl11;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNKSt3__111__libcpp_db15__find_iteratorEPKv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl3, [retval0+0];
	
	//{
	}// Callseq End 137
	setp.eq.s64	%p1, %rl2, 0;
	mov.u64 	%rl15, 0;
	mov.u64 	%rl14, %rl15;
	@%p1 bra 	BB30_2;
// BB#1:                                // %cond.true
	ld.u64 	%rl14, [%rl2+16];
BB30_2:                                 // %cond.end
	setp.eq.s64	%p2, %rl3, 0;
	@%p2 bra 	BB30_4;
// BB#3:                                // %cond.true6
	ld.u64 	%rl15, [%rl3+16];
BB30_4:                                 // %cond.end9
	setp.eq.s64	%p3, %rl14, %rl15;
	setp.ne.s64	%p4, %rl14, 0;
	and.pred  	%p5, %p3, %p4;
	// Callseq Start 138
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 138
	selp.u32	%r1, 1, 0, %p5;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_ZNSt3__111__libcpp_db4swapEPvS1_
	.align	2
.visible .func _ZNSt3__111__libcpp_db4swapEPvS1_(
	.param .b64 _ZNSt3__111__libcpp_db4swapEPvS1__param_0,
	.param .b64 _ZNSt3__111__libcpp_db4swapEPvS1__param_1,
	.param .b64 _ZNSt3__111__libcpp_db4swapEPvS1__param_2
)                                       // @_ZNSt3__111__libcpp_db4swapEPvS1_
{
	.local .align 8 .b8 	__local_depot31[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .s32 	%r<5>;
	.reg .s64 	%rl<87>;

// BB#0:                                // %entry
	mov.u64 	%rl86, __local_depot31;
	cvta.local.u64 	%SP, %rl86;
	ld.param.u64 	%rl27, [_ZNSt3__111__libcpp_db4swapEPvS1__param_0];
	ld.param.u64 	%rl28, [_ZNSt3__111__libcpp_db4swapEPvS1__param_1];
	ld.param.u64 	%rl29, [_ZNSt3__111__libcpp_db4swapEPvS1__param_2];
	mov.u64 	%rl30, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl30;
	mov.u64 	%rl31, .str;
	cvta.global.u64 	%rl2, %rl31;
	mov.u64 	%rl32, .str6;
	cvta.global.u64 	%rl3, %rl32;
	mov.u64 	%rl33, .str7;
	cvta.global.u64 	%rl4, %rl33;
	mov.u64 	%rl34, .str8;
	cvta.global.u64 	%rl5, %rl34;
	mov.u64 	%rl35, .str9;
	cvta.global.u64 	%rl6, %rl35;
	// Callseq Start 139
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 139
	// Callseq Start 140
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 140
	st.u64 	[%SP+0], %rl28;
	add.u64 	%rl36, %SP, 8;
	add.u64 	%rl37, %SP, 0;
	mov.u64 	%rl38, 8;
	// Callseq Start 141
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl36;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl37;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl38;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl7, [retval0+0];
	
	//{
	}// Callseq End 141
// BB#1:                                // %_ZNKSt3__14hashIPvEclES1_.exit
	ld.u64 	%rl39, [%rl27+8];
	ld.u64 	%rl40, [%rl27];
	sub.s64 	%rl41, %rl39, %rl40;
	shr.s64 	%rl42, %rl41, 3;
	rem.u64 	%rl43, %rl7, %rl42;
	shl.b64 	%rl44, %rl43, 3;
	add.s64 	%rl45, %rl40, %rl44;
	ld.u64 	%rl77, [%rl45];
	setp.ne.s64	%p1, %rl77, 0;
	@%p1 bra 	BB31_3;
// BB#2:                                // %invoke.cont
	// Callseq Start 142
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 142
	// Callseq Start 143
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 143
	mov.u64 	%rl77, 0;
BB31_3:                                 // %while.cond.preheader
	ld.u64 	%rl47, [%rl77+8];
	setp.eq.s64	%p2, %rl47, %rl28;
	@%p2 bra 	BB31_23;
// BB#4:
BB31_5:                                 // %while.body
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl77, [%rl77+16];
	setp.ne.s64	%p3, %rl77, 0;
	@%p3 bra 	BB31_7;
// BB#6:                                // %invoke.cont11
                                        //   in Loop: Header=BB31_5 Depth=1
	// Callseq Start 144
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 144
	// Callseq Start 145
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 145
	mov.u64 	%rl77, 0;
BB31_7:                                 // %while.cond.backedge
                                        //   in Loop: Header=BB31_5 Depth=1
	ld.u64 	%rl49, [%rl77+8];
	setp.ne.s64	%p4, %rl49, %rl28;
	@%p4 bra 	BB31_5;
	bra.uni 	BB31_8;
BB31_23:
BB31_8:                                 // %while.end
	st.u64 	[%SP+0], %rl29;
	// Callseq Start 146
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl36;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl37;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl38;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl14, [retval0+0];
	
	//{
	}// Callseq End 146
// BB#9:                                // %_ZNKSt3__14hashIPvEclES1_.exit97
	ld.u64 	%rl53, [%rl27+8];
	ld.u64 	%rl54, [%rl27];
	sub.s64 	%rl55, %rl53, %rl54;
	shr.s64 	%rl56, %rl55, 3;
	rem.u64 	%rl57, %rl14, %rl56;
	shl.b64 	%rl58, %rl57, 3;
	add.s64 	%rl59, %rl54, %rl58;
	ld.u64 	%rl81, [%rl59];
	setp.ne.s64	%p5, %rl81, 0;
	@%p5 bra 	BB31_11;
// BB#10:                               // %invoke.cont30
	// Callseq Start 147
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl5;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 147
	// Callseq Start 148
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 148
	mov.u64 	%rl81, 0;
BB31_11:                                // %while.cond34.preheader
	ld.u64 	%rl61, [%rl81+8];
	setp.eq.s64	%p6, %rl61, %rl29;
	@%p6 bra 	BB31_24;
// BB#12:
BB31_13:                                // %while.body37
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl81, [%rl81+16];
	setp.ne.s64	%p7, %rl81, 0;
	@%p7 bra 	BB31_15;
// BB#14:                               // %invoke.cont42
                                        //   in Loop: Header=BB31_13 Depth=1
	// Callseq Start 149
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6printfIJPKcEEiS1_DpT_, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 149
	// Callseq Start 150
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	abort, 
	(
	);
	
	//{
	}// Callseq End 150
	mov.u64 	%rl81, 0;
BB31_15:                                // %while.cond34.backedge
                                        //   in Loop: Header=BB31_13 Depth=1
	ld.u64 	%rl63, [%rl81+8];
	setp.ne.s64	%p8, %rl63, %rl29;
	@%p8 bra 	BB31_13;
	bra.uni 	BB31_16;
BB31_24:
BB31_16:                                // %while.end46
	ld.u64 	%rl64, [%rl77+24];
	ld.u64 	%rl65, [%rl81+24];
	st.u64 	[%rl77+24], %rl65;
	st.u64 	[%rl81+24], %rl64;
	ld.u64 	%rl66, [%rl77+32];
	ld.u64 	%rl67, [%rl81+32];
	st.u64 	[%rl77+32], %rl67;
	st.u64 	[%rl81+32], %rl66;
	ld.u64 	%rl68, [%rl77+40];
	ld.u64 	%rl69, [%rl81+40];
	st.u64 	[%rl77+40], %rl69;
	st.u64 	[%rl81+40], %rl68;
	ld.u64 	%rl84, [%rl77+24];
	ld.u64 	%rl70, [%rl77+32];
	setp.eq.s64	%p9, %rl84, %rl70;
	@%p9 bra 	BB31_19;
// BB#17:
BB31_18:                                // %for.body
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl71, [%rl84];
	st.u64 	[%rl71+16], %rl77;
	add.s64 	%rl84, %rl84, 8;
	ld.u64 	%rl72, [%rl77+32];
	setp.ne.s64	%p10, %rl84, %rl72;
	@%p10 bra 	BB31_18;
BB31_19:                                // %for.end
	ld.u64 	%rl85, [%rl81+24];
	ld.u64 	%rl73, [%rl81+32];
	setp.eq.s64	%p11, %rl85, %rl73;
	@%p11 bra 	BB31_22;
// BB#20:
BB31_21:                                // %for.body61
                                        // =>This Inner Loop Header: Depth=1
	ld.u64 	%rl74, [%rl85];
	st.u64 	[%rl74+16], %rl81;
	add.s64 	%rl85, %rl85, 8;
	ld.u64 	%rl75, [%rl81+32];
	setp.ne.s64	%p12, %rl85, %rl75;
	@%p12 bra 	BB31_21;
BB31_22:                                // %for.end65
	// Callseq Start 151
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 151
	ret;
}

	// .globl	_ZNSt3__111__libcpp_db10__insert_iEPv
	.align	2
.visible .func _ZNSt3__111__libcpp_db10__insert_iEPv(
	.param .b64 _ZNSt3__111__libcpp_db10__insert_iEPv_param_0,
	.param .b64 _ZNSt3__111__libcpp_db10__insert_iEPv_param_1
)                                       // @_ZNSt3__111__libcpp_db10__insert_iEPv
{
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	ld.param.u64 	%rl2, [_ZNSt3__111__libcpp_db10__insert_iEPv_param_0];
	ld.param.u64 	%rl3, [_ZNSt3__111__libcpp_db10__insert_iEPv_param_1];
	mov.u64 	%rl4, _ZZNSt3__112_GLOBAL__N_13mutEvE1m;
	cvta.global.u64 	%rl1, %rl4;
	// Callseq Start 152
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZNSt3__112_GLOBAL__N_13mutEv, 
	(
	);
	
	//{
	}// Callseq End 152
	// Callseq Start 153
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 153
	// Callseq Start 154
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl3;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__111__libcpp_db17__insert_iteratorEPv, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl5, [retval0+0];
	
	//{
	}// Callseq End 154
// BB#1:                                // %invoke.cont
	// Callseq Start 155
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 155
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_1,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_2
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy
{
	.local .align 8 .b8 	__local_depot33[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<113>;

// BB#0:                                // %entry
	mov.u64 	%rl112, __local_depot33;
	cvta.local.u64 	%SP, %rl112;
	ld.param.u64 	%rl30, [_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_1];
	ld.param.u64 	%rl31, [_ZNSt3__121__murmur2_or_cityhashIyLy64EEclEPKvy_param_2];
	setp.gt.u64	%p1, %rl31, 32;
	@%p1 bra 	BB33_4;
// BB#1:                                // %if.then
	setp.gt.u64	%p4, %rl31, 16;
	@%p4 bra 	BB33_3;
// BB#2:                                // %if.then3
	// Callseq Start 180
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl31;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl111, [retval0+0];
	
	//{
	}// Callseq End 180
	bra.uni 	BB33_9;
BB33_4:                                 // %if.else5
	setp.gt.u64	%p2, %rl31, 64;
	@%p2 bra 	BB33_6;
// BB#5:                                // %if.then7
	// Callseq Start 178
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl31;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl111, [retval0+0];
	
	//{
	}// Callseq End 178
	bra.uni 	BB33_9;
BB33_3:                                 // %if.else
	// Callseq Start 179
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl31;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl111, [retval0+0];
	
	//{
	}// Callseq End 179
	bra.uni 	BB33_9;
BB33_6:                                 // %if.end9
	add.s64 	%rl33, %rl31, %rl30;
	add.s64 	%rl34, %rl33, -40;
	add.u64 	%rl35, %SP, 0;
	mov.u64 	%rl36, 8;
	// Callseq Start 156
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl34;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl37, [retval0+0];
	
	//{
	}// Callseq End 156
	ld.u64 	%rl38, [%SP+0];
	add.s64 	%rl39, %rl33, -16;
	// Callseq Start 157
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl39;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl41, [retval0+0];
	
	//{
	}// Callseq End 157
	ld.u64 	%rl42, [%SP+0];
	add.s64 	%rl43, %rl33, -56;
	// Callseq Start 158
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl43;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl45, [retval0+0];
	
	//{
	}// Callseq End 158
	ld.u64 	%rl46, [%SP+0];
	add.s64 	%rl110, %rl46, %rl42;
	add.s64 	%rl47, %rl33, -48;
	// Callseq Start 159
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl47;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl49, [retval0+0];
	
	//{
	}// Callseq End 159
	ld.u64 	%rl50, [%SP+0];
	add.s64 	%rl51, %rl50, %rl31;
	add.s64 	%rl52, %rl33, -24;
	// Callseq Start 160
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl52;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl54, [retval0+0];
	
	//{
	}// Callseq End 160
	ld.u64 	%rl55, [%SP+0];
	// Callseq Start 161
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl51;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl55;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl105, [retval0+0];
	
	//{
	}// Callseq End 161
	add.s64 	%rl56, %rl33, -64;
	// Callseq Start 162
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl31;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl105;
	.param .align 8 .b8 retval0[16];
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl107, [retval0+0];
	ld.param.b64	%rl106, [retval0+8];
	
	//{
	}// Callseq End 162
	add.s64 	%rl57, %rl33, -32;
	add.s64 	%rl58, %rl110, -5435081209227447693;
	// Callseq Start 163
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl57;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl58;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl38;
	.param .align 8 .b8 retval0[16];
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl109, [retval0+0];
	ld.param.b64	%rl108, [retval0+8];
	
	//{
	}// Callseq End 163
	// Callseq Start 164
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl30;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl60, [retval0+0];
	
	//{
	}// Callseq End 164
	ld.u64 	%rl61, [%SP+0];
	mad.lo.s64 	%rl104, %rl38, -5435081209227447693, %rl61;
	add.s64 	%rl62, %rl31, -1;
	and.b64  	%rl11, %rl62, -64;
	mov.u64 	%rl103, 0;
BB33_7:                                 // %do.body
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rl63, %rl30, %rl103;
	add.s64 	%rl64, %rl63, 8;
	// Callseq Start 165
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl64;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl67, [retval0+0];
	
	//{
	}// Callseq End 165
	ld.u64 	%rl68, [%SP+0];
	add.s64 	%rl69, %rl107, %rl104;
	add.s64 	%rl70, %rl69, %rl110;
	add.s64 	%rl71, %rl70, %rl68;
	mov.u32 	%r1, 37;
	// Callseq Start 166
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl71;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl72, [retval0+0];
	
	//{
	}// Callseq End 166
	mul.lo.s64 	%rl73, %rl72, -5435081209227447693;
	add.s64 	%rl74, %rl110, %rl106;
	add.s64 	%rl75, %rl63, 48;
	// Callseq Start 167
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl75;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl77, [retval0+0];
	
	//{
	}// Callseq End 167
	ld.u64 	%rl78, [%SP+0];
	add.s64 	%rl79, %rl74, %rl78;
	mov.u32 	%r2, 42;
	// Callseq Start 168
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl79;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl80, [retval0+0];
	
	//{
	}// Callseq End 168
	xor.b64  	%rl20, %rl73, %rl108;
	add.s64 	%rl81, %rl63, 40;
	// Callseq Start 169
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl81;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl83, [retval0+0];
	
	//{
	}// Callseq End 169
	ld.u64 	%rl84, [%SP+0];
	mad.lo.s64 	%rl85, %rl80, -5435081209227447693, %rl107;
	add.s64 	%rl110, %rl85, %rl84;
	add.s64 	%rl86, %rl109, %rl105;
	mov.u32 	%r3, 33;
	// Callseq Start 170
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl86;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl87, [retval0+0];
	
	//{
	}// Callseq End 170
	mul.lo.s64 	%rl104, %rl87, -5435081209227447693;
	mul.lo.s64 	%rl88, %rl106, -5435081209227447693;
	add.s64 	%rl89, %rl20, %rl109;
	// Callseq Start 171
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl88;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl89;
	.param .align 8 .b8 retval0[16];
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl107, [retval0+0];
	ld.param.b64	%rl106, [retval0+8];
	
	//{
	}// Callseq End 171
	mad.lo.s64 	%rl90, %rl87, -5435081209227447693, %rl108;
	add.s64 	%rl91, %rl63, 16;
	// Callseq Start 172
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl91;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl36;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl93, [retval0+0];
	
	//{
	}// Callseq End 172
	ld.u64 	%rl94, [%SP+0];
	add.s64 	%rl95, %rl94, %rl110;
	add.s64 	%rl96, %rl63, 32;
	// Callseq Start 173
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl96;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl90;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl95;
	.param .align 8 .b8 retval0[16];
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl109, [retval0+0];
	ld.param.b64	%rl108, [retval0+8];
	
	//{
	}// Callseq End 173
	add.s64 	%rl103, %rl103, 64;
	setp.ne.s64	%p3, %rl11, %rl103;
	mov.u64 	%rl105, %rl20;
	@%p3 bra 	BB33_7;
// BB#8:                                // %do.end
	// Callseq Start 174
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl107;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl109;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl97, [retval0+0];
	
	//{
	}// Callseq End 174
	// Callseq Start 175
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl110;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy, 
	(
	param0
	);
	ld.param.b64	%rl98, [retval0+0];
	
	//{
	}// Callseq End 175
	add.s64 	%rl99, %rl97, %rl20;
	mad.lo.s64 	%rl100, %rl98, -5435081209227447693, %rl99;
	// Callseq Start 176
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl106;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl108;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl101, [retval0+0];
	
	//{
	}// Callseq End 176
	add.s64 	%rl102, %rl101, %rl104;
	// Callseq Start 177
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl100;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl102;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl111, [retval0+0];
	
	//{
	}// Callseq End 177
BB33_9:                                 // %return
	st.param.b64	[func_retval0+0], %rl111;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy_param_1
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy
{
	.local .align 8 .b8 	__local_depot34[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<47>;

// BB#0:                                // %entry
	mov.u64 	%rl46, __local_depot34;
	cvta.local.u64 	%SP, %rl46;
	ld.param.u64 	%rl5, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy_param_0];
	ld.param.u64 	%rl6, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE18__hash_len_0_to_16EPKcy_param_1];
	setp.lt.u64	%p1, %rl6, 9;
	@%p1 bra 	BB34_2;
// BB#1:                                // %if.then
	add.u64 	%rl33, %SP, 0;
	mov.u64 	%rl34, 8;
	// Callseq Start 185
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl5;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl34;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl35, [retval0+0];
	
	//{
	}// Callseq End 185
	add.s64 	%rl36, %rl6, %rl5;
	ld.u64 	%rl37, [%SP+0];
	add.s64 	%rl38, %rl36, -8;
	// Callseq Start 186
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl38;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl34;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl40, [retval0+0];
	
	//{
	}// Callseq End 186
	ld.u64 	%rl41, [%SP+0];
	add.s64 	%rl42, %rl41, %rl6;
	cvt.u32.u64	%r3, %rl6;
	// Callseq Start 187
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl42;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl43, [retval0+0];
	
	//{
	}// Callseq End 187
	// Callseq Start 188
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl43;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl44, [retval0+0];
	
	//{
	}// Callseq End 188
	xor.b64  	%rl45, %rl44, %rl41;
	bra.uni 	BB34_7;
BB34_2:                                 // %if.end
	setp.lt.u64	%p2, %rl6, 4;
	@%p2 bra 	BB34_4;
// BB#3:                                // %if.then6
	add.u64 	%rl23, %SP, 0;
	mov.u64 	%rl24, 4;
	// Callseq Start 182
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl5;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl24;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl25, [retval0+0];
	
	//{
	}// Callseq End 182
	add.s64 	%rl26, %rl6, %rl5;
	ld.u32 	%r1, [%SP+0];
	add.s64 	%rl27, %rl26, -4;
	// Callseq Start 183
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl27;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl24;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl29, [retval0+0];
	
	//{
	}// Callseq End 183
	ld.u32 	%rl30, [%SP+0];
	shl.b32 	%r2, %r1, 3;
	cvt.u64.u32	%rl31, %r2;
	add.s64 	%rl32, %rl31, %rl6;
	// Callseq Start 184
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl32;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl30;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl45, [retval0+0];
	
	//{
	}// Callseq End 184
	bra.uni 	BB34_7;
BB34_4:                                 // %if.end17
	setp.eq.s64	%p3, %rl6, 0;
	@%p3 bra 	BB34_5;
// BB#6:                                // %if.then19
	add.s64 	%rl8, %rl6, %rl5;
	shr.u64 	%rl9, %rl6, 1;
	add.s64 	%rl10, %rl5, %rl9;
	ld.u8 	%rl11, [%rl5];
	ld.u8 	%rl12, [%rl10];
	shl.b64 	%rl13, %rl12, 8;
	or.b64  	%rl14, %rl13, %rl11;
	ld.u8 	%rl15, [%rl8+-1];
	shl.b64 	%rl16, %rl15, 2;
	add.s64 	%rl17, %rl16, %rl6;
	mul.lo.s64 	%rl18, %rl14, -7286425919675154353;
	and.b64  	%rl19, %rl17, 4294967295;
	mul.lo.s64 	%rl20, %rl19, -3942382747735136937;
	xor.b64  	%rl21, %rl20, %rl18;
	// Callseq Start 181
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl21;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy, 
	(
	param0
	);
	ld.param.b64	%rl22, [retval0+0];
	
	//{
	}// Callseq End 181
	mul.lo.s64 	%rl45, %rl22, -7286425919675154353;
	bra.uni 	BB34_7;
BB34_5:
	mov.u64 	%rl45, -7286425919675154353;
BB34_7:                                 // %return
	st.param.b64	[func_retval0+0], %rl45;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy_param_1
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy
{
	.local .align 8 .b8 	__local_depot35[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<34>;

// BB#0:                                // %entry
	mov.u64 	%rl33, __local_depot35;
	cvta.local.u64 	%SP, %rl33;
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_17_to_32EPKcy_param_1];
	add.s64 	%rl3, %rl2, %rl1;
	add.u64 	%rl4, %SP, 0;
	mov.u64 	%rl5, 8;
	// Callseq Start 189
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 189
	ld.u64 	%rl7, [%SP+0];
	mul.lo.s64 	%rl8, %rl7, -5435081209227447693;
	add.s64 	%rl9, %rl1, 8;
	// Callseq Start 190
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl9;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl11, [retval0+0];
	
	//{
	}// Callseq End 190
	ld.u64 	%rl12, [%SP+0];
	add.s64 	%rl13, %rl3, -8;
	// Callseq Start 191
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl13;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl15, [retval0+0];
	
	//{
	}// Callseq End 191
	ld.u64 	%rl16, [%SP+0];
	mul.lo.s64 	%rl17, %rl16, -7286425919675154353;
	add.s64 	%rl18, %rl3, -16;
	// Callseq Start 192
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl18;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl20, [retval0+0];
	
	//{
	}// Callseq End 192
	ld.u64 	%rl21, [%SP+0];
	sub.s64 	%rl22, %rl8, %rl12;
	mov.u32 	%r1, 43;
	// Callseq Start 193
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl22;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl23, [retval0+0];
	
	//{
	}// Callseq End 193
	mov.u32 	%r2, 30;
	// Callseq Start 194
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl17;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl24, [retval0+0];
	
	//{
	}// Callseq End 194
	mad.lo.s64 	%rl25, %rl21, -4348849565147123417, %rl23;
	add.s64 	%rl26, %rl25, %rl24;
	xor.b64  	%rl27, %rl12, -3942382747735136937;
	mov.u32 	%r3, 20;
	// Callseq Start 195
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl27;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl28, [retval0+0];
	
	//{
	}// Callseq End 195
	mad.lo.s64 	%rl29, %rl7, -5435081209227447693, %rl2;
	sub.s64 	%rl30, %rl29, %rl17;
	add.s64 	%rl31, %rl30, %rl28;
	// Callseq Start 196
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl31;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl32, [retval0+0];
	
	//{
	}// Callseq End 196
	st.param.b64	[func_retval0+0], %rl32;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy_param_1
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy
{
	.local .align 8 .b8 	__local_depot36[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<5>;
	.reg .s64 	%rl<77>;

// BB#0:                                // %entry
	mov.u64 	%rl76, __local_depot36;
	cvta.local.u64 	%SP, %rl76;
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE19__hash_len_33_to_64EPKcy_param_1];
	add.s64 	%rl3, %rl2, %rl1;
	add.s64 	%rl4, %rl1, 24;
	add.u64 	%rl5, %SP, 0;
	mov.u64 	%rl6, 8;
	// Callseq Start 197
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl4;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl7, [retval0+0];
	
	//{
	}// Callseq End 197
	ld.u64 	%rl8, [%SP+0];
	// Callseq Start 198
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl10, [retval0+0];
	
	//{
	}// Callseq End 198
	ld.u64 	%rl11, [%SP+0];
	add.s64 	%rl12, %rl3, -16;
	// Callseq Start 199
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl12;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl14, [retval0+0];
	
	//{
	}// Callseq End 199
	ld.u64 	%rl15, [%SP+0];
	add.s64 	%rl16, %rl15, %rl2;
	mad.lo.s64 	%rl17, %rl16, -4348849565147123417, %rl11;
	add.s64 	%rl18, %rl17, %rl8;
	mov.u32 	%r1, 52;
	// Callseq Start 200
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl18;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl19, [retval0+0];
	
	//{
	}// Callseq End 200
	mov.u32 	%r2, 37;
	// Callseq Start 201
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl17;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl20, [retval0+0];
	
	//{
	}// Callseq End 201
	add.s64 	%rl21, %rl1, 8;
	// Callseq Start 202
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl21;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl23, [retval0+0];
	
	//{
	}// Callseq End 202
	ld.u64 	%rl24, [%SP+0];
	add.s64 	%rl25, %rl24, %rl17;
	mov.u32 	%r3, 7;
	// Callseq Start 203
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl25;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl26, [retval0+0];
	
	//{
	}// Callseq End 203
	add.s64 	%rl27, %rl1, 16;
	// Callseq Start 204
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl27;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl29, [retval0+0];
	
	//{
	}// Callseq End 204
	ld.u64 	%rl30, [%SP+0];
	add.s64 	%rl31, %rl30, %rl25;
	mov.u32 	%r4, 31;
	// Callseq Start 205
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl31;
	.param .b32 param1;
	st.param.b32	[param1+0], %r4;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl32, [retval0+0];
	
	//{
	}// Callseq End 205
	add.s64 	%rl33, %rl20, %rl19;
	add.s64 	%rl34, %rl33, %rl26;
	add.s64 	%rl35, %rl34, %rl32;
	// Callseq Start 206
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl27;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl37, [retval0+0];
	
	//{
	}// Callseq End 206
	ld.u64 	%rl38, [%SP+0];
	add.s64 	%rl39, %rl3, -32;
	// Callseq Start 207
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl39;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl41, [retval0+0];
	
	//{
	}// Callseq End 207
	ld.u64 	%rl42, [%SP+0];
	add.s64 	%rl43, %rl42, %rl38;
	add.s64 	%rl44, %rl3, -8;
	// Callseq Start 208
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl44;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl46, [retval0+0];
	
	//{
	}// Callseq End 208
	ld.u64 	%rl47, [%SP+0];
	add.s64 	%rl48, %rl47, %rl8;
	add.s64 	%rl49, %rl48, %rl43;
	// Callseq Start 209
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl49;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl50, [retval0+0];
	
	//{
	}// Callseq End 209
	// Callseq Start 210
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl43;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl51, [retval0+0];
	
	//{
	}// Callseq End 210
	add.s64 	%rl52, %rl3, -24;
	// Callseq Start 211
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl52;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl54, [retval0+0];
	
	//{
	}// Callseq End 211
	ld.u64 	%rl55, [%SP+0];
	add.s64 	%rl56, %rl55, %rl43;
	// Callseq Start 212
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl56;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl57, [retval0+0];
	
	//{
	}// Callseq End 212
	// Callseq Start 213
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl12;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl6;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl59, [retval0+0];
	
	//{
	}// Callseq End 213
	ld.u64 	%rl60, [%SP+0];
	add.s64 	%rl61, %rl60, %rl56;
	// Callseq Start 214
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl61;
	.param .b32 param1;
	st.param.b32	[param1+0], %r4;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl62, [retval0+0];
	
	//{
	}// Callseq End 214
	add.s64 	%rl63, %rl31, %rl8;
	add.s64 	%rl64, %rl63, %rl50;
	add.s64 	%rl65, %rl64, %rl51;
	add.s64 	%rl66, %rl65, %rl57;
	add.s64 	%rl67, %rl66, %rl62;
	add.s64 	%rl68, %rl48, %rl35;
	add.s64 	%rl69, %rl68, %rl61;
	mul.lo.s64 	%rl70, %rl69, -4348849565147123417;
	mad.lo.s64 	%rl71, %rl67, -7286425919675154353, %rl70;
	// Callseq Start 215
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl71;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy, 
	(
	param0
	);
	ld.param.b64	%rl72, [retval0+0];
	
	//{
	}// Callseq End 215
	mad.lo.s64 	%rl73, %rl72, -4348849565147123417, %rl35;
	// Callseq Start 216
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl73;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy, 
	(
	param0
	);
	ld.param.b64	%rl74, [retval0+0];
	
	//{
	}// Callseq End 216
	mul.lo.s64 	%rl75, %rl74, -7286425919675154353;
	st.param.b64	[func_retval0+0], %rl75;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy_param_1
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy
{
	.reg .s64 	%rl<12>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE13__hash_len_16Eyy_param_1];
	xor.b64  	%rl3, %rl2, %rl1;
	mul.lo.s64 	%rl4, %rl3, -7070675565921424023;
	shr.u64 	%rl5, %rl4, 47;
	xor.b64  	%rl6, %rl4, %rl2;
	xor.b64  	%rl7, %rl6, %rl5;
	mul.lo.s64 	%rl8, %rl7, -7070675565921424023;
	shr.u64 	%rl9, %rl8, 47;
	xor.b64  	%rl10, %rl9, %rl8;
	mul.lo.s64 	%rl11, %rl10, -7070675565921424023;
	st.param.b64	[func_retval0+0], %rl11;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy
	.align	2
.func  (.param .align 8 .b8 func_retval0[16]) _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_1,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_2
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy
{
	.local .align 8 .b8 	__local_depot38[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<23>;

// BB#0:                                // %entry
	mov.u64 	%rl22, __local_depot38;
	cvta.local.u64 	%SP, %rl22;
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_1];
	ld.param.u64 	%rl3, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEPKcyy_param_2];
	add.u64 	%rl4, %SP, 0;
	mov.u64 	%rl5, 8;
	// Callseq Start 217
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 217
	ld.u64 	%rl7, [%SP+0];
	add.s64 	%rl8, %rl1, 8;
	// Callseq Start 218
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl8;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl10, [retval0+0];
	
	//{
	}// Callseq End 218
	ld.u64 	%rl11, [%SP+0];
	add.s64 	%rl12, %rl1, 16;
	// Callseq Start 219
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl12;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl14, [retval0+0];
	
	//{
	}// Callseq End 219
	ld.u64 	%rl15, [%SP+0];
	add.s64 	%rl16, %rl1, 24;
	// Callseq Start 220
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z6memcpyPvPKvy, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64	%rl18, [retval0+0];
	
	//{
	}// Callseq End 220
	ld.u64 	%rl19, [%SP+0];
	// Callseq Start 221
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl11;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rl2;
	.param .b64 param5;
	st.param.b64	[param5+0], %rl3;
	.param .align 8 .b8 retval0[16];
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b64	%rl20, [retval0+0];
	ld.param.b64	%rl21, [retval0+8];
	
	//{
	}// Callseq End 221
	st.param.b64	[func_retval0+0], %rl20;
	st.param.b64	[func_retval0+8], %rl21;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi_param_0,
	.param .b32 _ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi_param_1
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<5>;

// BB#0:                                // %entry
	ld.param.u64 	%rl4, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi_param_0];
	ld.param.u32 	%r1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi_param_1];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB39_3;
// BB#1:                                // %cond.false
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	.reg .u32 %amt2;
	shr.b64 	%lhs, %rl4, %r1;
	sub.u32 	%amt2, 64, %r1;
	shl.b64 	%rhs, %rl4, %amt2;
	add.u64 	%rl4, %lhs, %rhs;
	}
	bra.uni 	BB39_2;
BB39_3:
BB39_2:                                 // %cond.end
	st.param.b64	[func_retval0+0], %rl4;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy_param_0
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy
{
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE11__shift_mixEy_param_0];
	shr.u64 	%rl2, %rl1, 47;
	xor.b64  	%rl3, %rl2, %rl1;
	st.param.b64	[func_retval0+0], %rl3;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy
	.align	2
.func  (.param .align 8 .b8 func_retval0[16]) _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_0,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_1,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_2,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_3,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_4,
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_5
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<17>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_0];
	ld.param.u64 	%rl2, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_1];
	ld.param.u64 	%rl3, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_2];
	ld.param.u64 	%rl4, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_3];
	ld.param.u64 	%rl5, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_4];
	ld.param.u64 	%rl6, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE29__weak_hash_len_32_with_seedsEyyyyyy_param_5];
	add.s64 	%rl7, %rl5, %rl1;
	add.s64 	%rl8, %rl6, %rl4;
	add.s64 	%rl9, %rl8, %rl7;
	mov.u32 	%r1, 21;
	// Callseq Start 222
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl10, [retval0+0];
	
	//{
	}// Callseq End 222
	add.s64 	%rl11, %rl3, %rl2;
	add.s64 	%rl12, %rl11, %rl7;
	mov.u32 	%r2, 44;
	// Callseq Start 223
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b64 retval0;
	call.uni (retval0), 
	_ZNSt3__121__murmur2_or_cityhashIyLy64EE8__rotateEyi, 
	(
	param0, 
	param1
	);
	ld.param.b64	%rl13, [retval0+0];
	
	//{
	}// Callseq End 223
	add.s64 	%rl14, %rl12, %rl4;
	add.s64 	%rl15, %rl10, %rl7;
	add.s64 	%rl16, %rl15, %rl13;
	st.param.b64	[func_retval0+0], %rl14;
	st.param.b64	[func_retval0+8], %rl16;
	ret;
}

	.weak	_ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi
	.align	2
.func  (.param .b64 func_retval0) _ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi(
	.param .b64 _ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi_param_0,
	.param .b32 _ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi_param_1
)                                       // @_ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi
{
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi_param_0];
	ld.param.u32 	%r1, [_ZNSt3__121__murmur2_or_cityhashIyLy64EE22__rotate_by_at_least_1Eyi_param_1];
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	.reg .u32 %amt2;
	shr.b64 	%lhs, %rl1, %r1;
	sub.u32 	%amt2, 64, %r1;
	shl.b64 	%rhs, %rl1, %amt2;
	add.u64 	%rl2, %lhs, %rhs;
	}
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	.weak	_Z7getSizeIPKcEiT_
.func  (.param .b32 func_retval0) _Z7getSizeIPKcEiT_(
	.param .b64 _Z7getSizeIPKcEiT__param_0
)                                       // @_Z7getSizeIPKcEiT_
{
	.reg .s32 	%r<2>;

// BB#0:                                // %entry
	mov.u32 	%r1, 8;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	.weak	_Z10fillBufferIPKcEvPciT_
.func _Z10fillBufferIPKcEvPciT_(
	.param .b64 _Z10fillBufferIPKcEvPciT__param_0,
	.param .b32 _Z10fillBufferIPKcEvPciT__param_1,
	.param .b64 _Z10fillBufferIPKcEvPciT__param_2
)                                       // @_Z10fillBufferIPKcEvPciT_
{
	.reg .s32 	%r<4>;
	.reg .s64 	%rl<5>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_Z10fillBufferIPKcEvPciT__param_0];
	ld.param.u32 	%r1, [_Z10fillBufferIPKcEvPciT__param_1];
	ld.param.u64 	%rl2, [_Z10fillBufferIPKcEvPciT__param_2];
	mov.u32 	%r2, 8;
	// Callseq Start 224
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r1;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z5alignii, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 224
	cvt.s64.s32	%rl3, %r3;
	add.s64 	%rl4, %rl1, %rl3;
	st.u64 	[%rl4], %rl2;
	ret;
}

	.weak	_Z5alignii
.func  (.param .b32 func_retval0) _Z5alignii(
	.param .b32 _Z5alignii_param_0,
	.param .b32 _Z5alignii_param_1
)                                       // @_Z5alignii
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<8>;

// BB#0:                                // %entry
	ld.param.u32 	%r7, [_Z5alignii_param_0];
	ld.param.u32 	%r5, [_Z5alignii_param_1];
	rem.s32 	%r1, %r7, %r5;
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB45_3;
// BB#1:                                // %cond.false
	add.s32 	%r6, %r5, %r7;
	sub.s32 	%r7, %r6, %r1;
	bra.uni 	BB45_2;
BB45_3:
BB45_2:                                 // %cond.end
	st.param.b32	[func_retval0+0], %r7;
	ret;
}

