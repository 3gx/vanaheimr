//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	// .globl	_ZNSt3__16chrono12system_clock3nowEv
	.align	2
.extern .func  (.param .b32 func_retval0) _Z12gettimeofdayP7timevalPv
(
	.param .b64 _Z12gettimeofdayP7timevalPv_param_0,
	.param .b64 _Z12gettimeofdayP7timevalPv_param_1
)
;
.extern .func  (.param .b32 func_retval0) __gxx_personality_v0
(

)
;
.extern .func  (.param .b64 func_retval0) __cxa_begin_catch
(
	.param .b64 __cxa_begin_catch_param_0
)
;
.extern .func _ZSt9terminatev
(

)
;
.extern .func  (.param .b32 func_retval0) _Z13clock_gettimelP8timespec
(
	.param .b64 _Z13clock_gettimelP8timespec_param_0,
	.param .b64 _Z13clock_gettimelP8timespec_param_1
)
;
.extern .func _ZNSt3__120__throw_system_errorEiPKc
(
	.param .b32 _ZNSt3__120__throw_system_errorEiPKc_param_0,
	.param .b64 _ZNSt3__120__throw_system_errorEiPKc_param_1
)
;
.visible .global .align 1 .u8 _ZNSt3__16chrono12system_clock9is_steadyE;
.visible .global .align 1 .u8 _ZNSt3__16chrono12steady_clock9is_steadyE = 1;
.extern .global .align 4 .u32 _errno;
.global .align 1 .b8 .str[38] = {99, 108, 111, 99, 107, 95, 103, 101, 116, 116, 105, 109, 101, 40, 67, 76, 79, 67, 75, 95, 77, 79, 78, 79, 84, 79, 78, 73, 67, 41, 32, 102, 97, 105, 108, 101, 100, 0};

.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZNSt3__16chrono12system_clock3nowEv(

)
{
	.local .align 8 .b8 	__local_depot0[328];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<52>;

	mov.u64 	%rl51, __local_depot0;
	cvta.local.u64 	%SP, %rl51;
	add.u64 	%rl2, %SP, 288;
	mov.u64 	%rl3, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl3;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z12gettimeofdayP7timevalPv, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	add.u64 	%rl4, %SP, 312;
	st.u64 	[%SP+256], %rl4;
	add.u64 	%rl5, %SP, 288;
	st.u64 	[%SP+264], %rl5;
	mov.u64 	%rl6, 0;
	st.u64 	[%SP+272], %rl6;
	ld.u64 	%rl7, [%SP+256];
	ld.u64 	%rl8, [%SP+264];
	ld.u64 	%rl9, [%rl8];
	st.u64 	[%rl7], %rl9;
	add.u64 	%rl10, %SP, 288;
	add.s64 	%rl11, %rl10, 8;
	add.u64 	%rl12, %SP, 320;
	st.u64 	[%SP+232], %rl12;
	st.u64 	[%SP+240], %rl11;
	mov.u64 	%rl13, 0;
	st.u64 	[%SP+248], %rl13;
	ld.u64 	%rl14, [%SP+232];
	ld.u64 	%rl15, [%SP+240];
	ld.u64 	%rl16, [%rl15];
	st.u64 	[%rl14], %rl16;
	add.u64 	%rl17, %SP, 312;
	st.u64 	[%SP+176], %rl17;
	add.u64 	%rl18, %SP, 320;
	st.u64 	[%SP+184], %rl18;
	ld.u64 	%rl19, [%SP+176];
	add.u64 	%rl20, %SP, 200;
	st.u64 	[%SP+136], %rl20;
	st.u64 	[%SP+144], %rl19;
	mov.u64 	%rl21, 0;
	st.u64 	[%SP+152], %rl21;
	ld.u64 	%rl22, [%SP+136];
	ld.u64 	%rl23, [%SP+144];
	st.u64 	[%SP+120], %rl23;
	add.u64 	%rl24, %SP, 128;
	st.u64 	[%SP+88], %rl24;
	st.u64 	[%SP+96], %rl23;
	st.u64 	[%SP+72], %rl23;
	ld.u64 	%rl25, [%rl23];
	mul.lo.s64 	%rl26, %rl25, 1000000;
	st.u64 	[%SP+104], %rl26;
	add.u64 	%rl27, %SP, 80;
	st.u64 	[%SP+48], %rl27;
	add.u64 	%rl28, %SP, 104;
	st.u64 	[%SP+56], %rl28;
	st.u64 	[%SP+64], %rl21;
	ld.u64 	%rl29, [%SP+48];
	ld.u64 	%rl30, [%SP+56];
	ld.u64 	%rl31, [%rl30];
	st.u64 	[%rl29], %rl31;
	ld.u64 	%rl32, [%SP+80];
	st.u64 	[%SP+112], %rl32;
	st.u64 	[%SP+160], %rl32;
	add.u64 	%rl33, %SP, 160;
	st.u64 	[%SP+40], %rl33;
	ld.u64 	%rl34, [%SP+160];
	st.u64 	[%rl22], %rl34;
	st.u64 	[%SP+0], %rl20;
	ld.u64 	%rl35, [%SP+200];
	ld.u64 	%rl36, [%SP+184];
	ld.u64 	%rl37, [%rl36];
	st.u64 	[%SP+208], %rl37;
	add.u64 	%rl38, %SP, 208;
	st.u64 	[%SP+8], %rl38;
	ld.u64 	%rl39, [%SP+208];
	add.s64 	%rl40, %rl35, %rl39;
	st.u64 	[%SP+192], %rl40;
	add.u64 	%rl41, %SP, 168;
	st.u64 	[%SP+16], %rl41;
	add.u64 	%rl42, %SP, 192;
	st.u64 	[%SP+24], %rl42;
	st.u64 	[%SP+32], %rl21;
	ld.u64 	%rl43, [%SP+16];
	ld.u64 	%rl44, [%SP+24];
	ld.u64 	%rl45, [%rl44];
	st.u64 	[%rl43], %rl45;
	ld.u64 	%rl1, [%SP+168];
	st.u64 	[%SP+304], %rl1;
	add.u64 	%rl46, %SP, 280;
	st.u64 	[%SP+216], %rl46;
	add.u64 	%rl47, %SP, 304;
	st.u64 	[%SP+224], %rl47;
	ld.u64 	%rl48, [%SP+216];
	ld.u64 	%rl49, [%SP+304];
	st.u64 	[%rl48], %rl49;
	ld.u64 	%rl50, [%SP+280];
	st.param.b64	[func_retval0+0], %rl50;
	ret;
}

	.hidden	__clang_call_terminate
	.weak	__clang_call_terminate
.func __clang_call_terminate(
	.param .b64 __clang_call_terminate_param_0
)
{
	.reg .s64 	%rl<3>;

	ld.param.u64 	%rl1, [__clang_call_terminate_param_0];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_begin_catch, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 1
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 2
}

	// .globl	_ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILx1ELx1000000EEEEEEE
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILx1ELx1000000EEEEEEE(
	.param .b64 _ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILx1ELx1000000EEEEEEE_param_0
)
{
	.local .align 8 .b8 	__local_depot2[136];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<20>;

	mov.u64 	%rl19, __local_depot2;
	cvta.local.u64 	%SP, %rl19;
	ld.param.u64 	%rl4, [_ZNSt3__16chrono12system_clock9to_time_tERKNS0_10time_pointIS1_NS0_8durationIxNS_5ratioILx1ELx1000000EEEEEEE_param_0];
	st.u64 	[%SP+112], %rl4;
	st.u64 	[%SP+104], %rl4;
	ld.u64 	%rl1, [%rl4];
	st.u64 	[%SP+96], %rl1;
	st.u64 	[%SP+120], %rl1;
	add.u64 	%rl5, %SP, 120;
	st.u64 	[%SP+80], %rl5;
	add.u64 	%rl6, %SP, 88;
	st.u64 	[%SP+48], %rl6;
	st.u64 	[%SP+56], %rl5;
	st.u64 	[%SP+32], %rl5;
	ld.u64 	%rl7, [%SP+120];
	mul.hi.s64 	%rl8, %rl7, 4835703278458516699;
	shr.u64 	%rl9, %rl8, 63;
	shr.s64 	%rl10, %rl8, 18;
	add.s64 	%rl11, %rl10, %rl9;
	st.u64 	[%SP+64], %rl11;
	add.u64 	%rl12, %SP, 40;
	st.u64 	[%SP+8], %rl12;
	add.u64 	%rl13, %SP, 64;
	st.u64 	[%SP+16], %rl13;
	mov.u64 	%rl14, 0;
	st.u64 	[%SP+24], %rl14;
	ld.u64 	%rl15, [%SP+8];
	ld.u64 	%rl16, [%SP+16];
	ld.u64 	%rl17, [%rl16];
	st.u64 	[%rl15], %rl17;
	ld.u64 	%rl2, [%SP+40];
	st.u64 	[%SP+72], %rl2;
	st.u64 	[%SP+128], %rl2;
	add.u64 	%rl18, %SP, 128;
	st.u64 	[%SP+0], %rl18;
	ld.u64 	%rl3, [%SP+128];
	st.param.b64	[func_retval0+0], %rl3;
	ret;
}

	// .globl	_ZNSt3__16chrono12system_clock11from_time_tEl
	.align	2
.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZNSt3__16chrono12system_clock11from_time_tEl(
	.param .b64 _ZNSt3__16chrono12system_clock11from_time_tEl_param_0
)
{
	.local .align 8 .b8 	__local_depot3[200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<30>;

	mov.u64 	%rl29, __local_depot3;
	cvta.local.u64 	%SP, %rl29;
	ld.param.u64 	%rl1, [_ZNSt3__16chrono12system_clock11from_time_tEl_param_0];
	st.u64 	[%SP+176], %rl1;
	add.u64 	%rl2, %SP, 192;
	st.u64 	[%SP+144], %rl2;
	add.u64 	%rl3, %SP, 176;
	st.u64 	[%SP+152], %rl3;
	mov.u64 	%rl4, 0;
	st.u64 	[%SP+160], %rl4;
	ld.u64 	%rl5, [%SP+144];
	ld.u64 	%rl6, [%SP+152];
	ld.u64 	%rl7, [%rl6];
	st.u64 	[%rl5], %rl7;
	add.u64 	%rl8, %SP, 184;
	st.u64 	[%SP+112], %rl8;
	add.u64 	%rl9, %SP, 192;
	st.u64 	[%SP+120], %rl9;
	mov.u64 	%rl10, 0;
	st.u64 	[%SP+128], %rl10;
	ld.u64 	%rl11, [%SP+112];
	ld.u64 	%rl12, [%SP+120];
	st.u64 	[%SP+96], %rl12;
	add.u64 	%rl13, %SP, 104;
	st.u64 	[%SP+64], %rl13;
	st.u64 	[%SP+72], %rl12;
	st.u64 	[%SP+48], %rl12;
	ld.u64 	%rl14, [%rl12];
	mul.lo.s64 	%rl15, %rl14, 1000000;
	st.u64 	[%SP+80], %rl15;
	add.u64 	%rl16, %SP, 56;
	st.u64 	[%SP+24], %rl16;
	add.u64 	%rl17, %SP, 80;
	st.u64 	[%SP+32], %rl17;
	st.u64 	[%SP+40], %rl10;
	ld.u64 	%rl18, [%SP+24];
	ld.u64 	%rl19, [%SP+32];
	ld.u64 	%rl20, [%rl19];
	st.u64 	[%rl18], %rl20;
	ld.u64 	%rl21, [%SP+56];
	st.u64 	[%SP+88], %rl21;
	st.u64 	[%SP+136], %rl21;
	add.u64 	%rl22, %SP, 136;
	st.u64 	[%SP+16], %rl22;
	ld.u64 	%rl23, [%SP+136];
	st.u64 	[%rl11], %rl23;
	add.u64 	%rl24, %SP, 168;
	st.u64 	[%SP+0], %rl24;
	add.u64 	%rl25, %SP, 184;
	st.u64 	[%SP+8], %rl25;
	ld.u64 	%rl26, [%SP+0];
	ld.u64 	%rl27, [%SP+184];
	st.u64 	[%rl26], %rl27;
	ld.u64 	%rl28, [%SP+168];
	st.param.b64	[func_retval0+0], %rl28;
	ret;
}

	// .globl	_ZNSt3__16chrono12steady_clock3nowEv
	.align	2
.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZNSt3__16chrono12steady_clock3nowEv(

)
{
	.local .align 8 .b8 	__local_depot4[328];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<56>;

	mov.u64 	%rl55, __local_depot4;
	cvta.local.u64 	%SP, %rl55;
	mov.u64 	%rl4, _errno;
	cvta.global.u64 	%rl1, %rl4;
	mov.u64 	%rl5, .str;
	cvta.global.u64 	%rl2, %rl5;
	mov.u64 	%rl6, 2;
	add.u64 	%rl7, %SP, 288;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl7;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z13clock_gettimelP8timespec, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 3
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB4_4;
	bra.uni 	BB4_2;
BB4_2:
	ld.u32 	%r2, [%rl1];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	call.uni 
	_ZNSt3__120__throw_system_errorEiPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 4
BB4_4:
	add.u64 	%rl8, %SP, 312;
	st.u64 	[%SP+256], %rl8;
	add.u64 	%rl9, %SP, 288;
	st.u64 	[%SP+264], %rl9;
	mov.u64 	%rl10, 0;
	st.u64 	[%SP+272], %rl10;
	ld.u64 	%rl11, [%SP+256];
	ld.u64 	%rl12, [%SP+264];
	ld.u64 	%rl13, [%rl12];
	st.u64 	[%rl11], %rl13;
	add.u64 	%rl14, %SP, 288;
	add.s64 	%rl15, %rl14, 8;
	add.u64 	%rl16, %SP, 320;
	st.u64 	[%SP+232], %rl16;
	st.u64 	[%SP+240], %rl15;
	mov.u64 	%rl17, 0;
	st.u64 	[%SP+248], %rl17;
	ld.u64 	%rl18, [%SP+232];
	ld.u64 	%rl19, [%SP+240];
	ld.u64 	%rl20, [%rl19];
	st.u64 	[%rl18], %rl20;
	add.u64 	%rl21, %SP, 312;
	st.u64 	[%SP+176], %rl21;
	add.u64 	%rl22, %SP, 320;
	st.u64 	[%SP+184], %rl22;
	ld.u64 	%rl23, [%SP+176];
	add.u64 	%rl24, %SP, 200;
	st.u64 	[%SP+136], %rl24;
	st.u64 	[%SP+144], %rl23;
	mov.u64 	%rl25, 0;
	st.u64 	[%SP+152], %rl25;
	ld.u64 	%rl26, [%SP+136];
	ld.u64 	%rl27, [%SP+144];
	st.u64 	[%SP+120], %rl27;
	add.u64 	%rl28, %SP, 128;
	st.u64 	[%SP+88], %rl28;
	st.u64 	[%SP+96], %rl27;
	st.u64 	[%SP+72], %rl27;
	ld.u64 	%rl29, [%rl27];
	mul.lo.s64 	%rl30, %rl29, 1000000000;
	st.u64 	[%SP+104], %rl30;
	add.u64 	%rl31, %SP, 80;
	st.u64 	[%SP+48], %rl31;
	add.u64 	%rl32, %SP, 104;
	st.u64 	[%SP+56], %rl32;
	st.u64 	[%SP+64], %rl25;
	ld.u64 	%rl33, [%SP+48];
	ld.u64 	%rl34, [%SP+56];
	ld.u64 	%rl35, [%rl34];
	st.u64 	[%rl33], %rl35;
	ld.u64 	%rl36, [%SP+80];
	st.u64 	[%SP+112], %rl36;
	st.u64 	[%SP+160], %rl36;
	add.u64 	%rl37, %SP, 160;
	st.u64 	[%SP+40], %rl37;
	ld.u64 	%rl38, [%SP+160];
	st.u64 	[%rl26], %rl38;
	st.u64 	[%SP+0], %rl24;
	ld.u64 	%rl39, [%SP+200];
	ld.u64 	%rl40, [%SP+184];
	ld.u64 	%rl41, [%rl40];
	st.u64 	[%SP+208], %rl41;
	add.u64 	%rl42, %SP, 208;
	st.u64 	[%SP+8], %rl42;
	ld.u64 	%rl43, [%SP+208];
	add.s64 	%rl44, %rl39, %rl43;
	st.u64 	[%SP+192], %rl44;
	add.u64 	%rl45, %SP, 168;
	st.u64 	[%SP+16], %rl45;
	add.u64 	%rl46, %SP, 192;
	st.u64 	[%SP+24], %rl46;
	st.u64 	[%SP+32], %rl25;
	ld.u64 	%rl47, [%SP+16];
	ld.u64 	%rl48, [%SP+24];
	ld.u64 	%rl49, [%rl48];
	st.u64 	[%rl47], %rl49;
	ld.u64 	%rl3, [%SP+168];
	st.u64 	[%SP+304], %rl3;
	add.u64 	%rl50, %SP, 280;
	st.u64 	[%SP+216], %rl50;
	add.u64 	%rl51, %SP, 304;
	st.u64 	[%SP+224], %rl51;
	ld.u64 	%rl52, [%SP+216];
	ld.u64 	%rl53, [%SP+304];
	st.u64 	[%rl52], %rl53;
	ld.u64 	%rl54, [%SP+280];
	st.param.b64	[func_retval0+0], %rl54;
	ret;
}

