#pragma once

#include <sys/types.h>

extern int          access(const char *, int);
extern unsigned int alarm(unsigned int);
extern int          brk(void *);
extern int          chdir(const char *);
extern int          chroot(const char *);
extern int          chown(const char *, uid_t, gid_t);
extern int          close(int);
extern size_t       confstr(int, char *, size_t);
extern char        *crypt(const char *, const char *);
extern char        *ctermid(char *);
extern char        *cuserid(char *s);
extern int          dup(int);
extern int          dup2(int, int);
extern void         encrypt(char[64], int);
extern int          execl(const char *, const char *, ...);
extern int          execle(const char *, const char *, ...);
extern int          execlp(const char *, const char *, ...);
extern int          execv(const char *, char *const []);
extern int          execve(const char *, char *const [], char *const []);
extern int          execvp(const char *, char *const []);
extern void        _exit(int);
extern int          fchown(int, uid_t, gid_t);
extern int          fchdir(int);
extern int          fdatasync(int);
extern pid_t        fork(void);
extern long int     fpathconf(int, int);
extern int          fsync(int);
extern int          ftruncate(int, off_t);
extern char        *getcwd(char *, size_t);
extern int          getdtablesize(void); 
extern gid_t        getegid(void);
extern uid_t        geteuid(void);
extern gid_t        getgid(void);
extern int          getgroups(int, gid_t []);
extern long         gethostid(void);
extern char        *getlogin(void);
extern int          getlogin_r(char *, size_t);
extern int          getopt(int, char * const [], const char *);
extern int          getpagesize(void); 
extern char        *getpass(const char *); 
extern pid_t        getpgid(pid_t);
extern pid_t        getpgrp(void);
extern pid_t        getpid(void);
extern pid_t        getppid(void);
extern pid_t        getsid(pid_t);
extern uid_t        getuid(void);
extern char        *getwd(char *);
extern int          isatty(int);
extern int          lchown(const char *, uid_t, gid_t);
extern int          link(const char *, const char *);
extern int          lockf(int, int, off_t);
extern off_t        lseek(int, off_t, int);
extern int          nice(int);
extern long int     pathconf(const char *, int);
extern int          pause(void);
extern int          pipe(int [2]);
extern size_t      pread(int, void *, size_t, off_t);
extern int          pthread_atfork(void (*)(void), void (*)(void), void(*)(void));
extern size_t      pwrite(int, const void *, size_t, off_t);
extern size_t      read(int, void *, size_t);
extern int          readlink(const char *, char *, size_t);
extern int          rmdir(const char *);
extern void        *sbrk(intptr_t);
extern int          setgid(gid_t);
extern int          setpgid(pid_t, pid_t);
extern pid_t        setpgrp(void);
extern int          setregid(gid_t, gid_t);
extern int          setreuid(uid_t, uid_t);
extern pid_t        setsid(void);
extern int          setuid(uid_t);
extern unsigned int sleep(unsigned int);
extern void         swab(const void *, void *, size_t);
extern int          symlink(const char *, const char *);
extern void         sync(void);
extern long int     sysconf(int);
extern pid_t        tcgetpgrp(int);
extern int          tcsetpgrp(int, pid_t);
extern int          truncate(const char *, off_t);
extern char        *ttyname(int);
extern int          ttyname_r(int, char *, size_t);
extern useconds_t   ualarm(useconds_t, useconds_t);
extern int          unlink(const char *);
extern int          usleep(useconds_t);
extern pid_t        vfork(void);
extern size_t      write(int, const void *, size_t);


