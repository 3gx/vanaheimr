//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 32

	// .globl	_Z6strlenPKc

.visible .func  (.param .b32 func_retval0) _Z6strlenPKc(
	.param .b32 _Z6strlenPKc_param_0
)
{
	.local .align 4 .b8 	__local_depot0[8];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<10>;

	mov.u32 	%r9, __local_depot0;
	cvta.local.u32 	%SP, %r9;
	ld.param.u32 	%r1, [_Z6strlenPKc_param_0];
	st.u32 	[%SP+0], %r1;
	st.u32 	[%SP+4], %r1;
BB0_1:
	ld.u32 	%r2, [%SP+4];
	ld.s8 	%r3, [%r2];
	setp.eq.s32	%p1, %r3, 0;
	@%p1 bra 	BB0_4;
	bra.uni 	BB0_2;
BB0_2:
	ld.u32 	%r7, [%SP+4];
	add.s32 	%r8, %r7, 1;
	st.u32 	[%SP+4], %r8;
	bra.uni 	BB0_1;
BB0_4:
	ld.u32 	%r4, [%SP+4];
	ld.u32 	%r5, [%SP+0];
	sub.s32 	%r6, %r4, %r5;
	st.param.b32	[func_retval0+0], %r6;
	ret;
}

	// .globl	_Z5equalPKcS0_
.visible .func  (.param .b32 func_retval0) _Z5equalPKcS0_(
	.param .b32 _Z5equalPKcS0__param_0,
	.param .b32 _Z5equalPKcS0__param_1
)
{
	.local .align 4 .b8 	__local_depot1[8];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<13>;

	mov.u32 	%r12, __local_depot1;
	cvta.local.u32 	%SP, %r12;
	ld.param.u32 	%r1, [_Z5equalPKcS0__param_0];
	ld.param.u32 	%r2, [_Z5equalPKcS0__param_1];
	st.u32 	[%SP+0], %r1;
	st.u32 	[%SP+4], %r2;
BB1_1:
	ld.u32 	%r3, [%SP+0];
	ld.s8 	%r4, [%r3];
	ld.u32 	%r5, [%SP+4];
	ld.s8 	%r6, [%r5];
	setp.eq.s32	%p1, %r4, %r6;
	@%p1 bra 	BB1_3;
	bra.uni 	BB1_2;
BB1_2:
	mov.u32 	%r11, 0;
	st.param.b32	[func_retval0+0], %r11;
	ret;
BB1_3:
	ld.u32 	%r7, [%SP+0];
	add.s32 	%r8, %r7, 1;
	st.u32 	[%SP+0], %r8;
	ld.u32 	%r9, [%SP+4];
	add.s32 	%r10, %r9, 1;
	st.u32 	[%SP+4], %r10;
	bra.uni 	BB1_1;
}

	// .globl	main
.visible .func  (.param .b32 func_retval0) main(
	.param .b32 main_param_0,
	.param .b32 main_param_1
)
{
	.local .align 4 .b8 	__local_depot2[12];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .s32 	%r<7>;

	mov.u32 	%r6, __local_depot2;
	cvta.local.u32 	%SP, %r6;
	ld.param.u32 	%r1, [main_param_0];
	ld.param.u32 	%r2, [main_param_1];
	mov.u32 	%r3, 0;
	st.u32 	[%SP+0], %r3;
	st.u32 	[%SP+4], %r1;
	st.u32 	[%SP+8], %r2;
	ld.u32 	%r4, [%r2];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z6strlenPKc, 
	(
	param0
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 0
	st.param.b32	[func_retval0+0], %r5;
	ret;
}

.visible .entry _pre_main(.param .b32 _argc, .param .b32 _argv)
{
	.param .align 4 .b32 argc;
	.param .align 4 .b32 argv;
	.param .align 4 .b32 retval;

	.reg .s32 %r<3>;
	

	ld.param.u32 %r1,[_argc];
	st.param.u32 [argc + 0], %r1;
	ld.param.u32 %r2,[_argv];
	st.param.u32 [argv], %r2;
	call (retval), main, (argc, argv);
	
	ret;
}


