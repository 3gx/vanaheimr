//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	// .globl	main

.visible .func  (.param .b32 func_retval0) main(
	.param .b32 main_param_0,
	.param .b64 main_param_1
)
{
	.local .align 8 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<12>;
	.reg .s64 	%rl<8>;

	mov.u64 	%rl7, __local_depot0;
	cvta.local.u64 	%SP, %rl7;
	ld.param.u32 	%r1, [main_param_0];
	ld.param.u64 	%rl1, [main_param_1];
	mov.u32 	%r2, 0;
	st.u32 	[%SP+0], %r2;
	st.u32 	[%SP+4], %r1;
	st.u64 	[%SP+8], %rl1;
	ld.u32 	%r3, [%SP+4];
	st.u32 	[%SP+16], %r3;
	st.u32 	[%SP+20], %r2;
BB0_1:
	ld.u32 	%r4, [%SP+20];
	ld.u32 	%r5, [%SP+4];
	setp.ge.s32	%p1, %r4, %r5;
	@%p1 bra 	BB0_4;
	bra.uni 	BB0_2;
BB0_2:
	ld.s32 	%rl2, [%SP+20];
	ld.u64 	%rl3, [%SP+8];
	shl.b64 	%rl4, %rl2, 3;
	add.s64 	%rl5, %rl3, %rl4;
	ld.u64 	%rl6, [%rl5];
	ld.s8 	%r7, [%rl6];
	ld.u32 	%r8, [%SP+16];
	add.s32 	%r9, %r8, %r7;
	st.u32 	[%SP+16], %r9;
	ld.u32 	%r10, [%SP+20];
	add.s32 	%r11, %r10, 1;
	st.u32 	[%SP+20], %r11;
	bra.uni 	BB0_1;
BB0_4:
	ld.u32 	%r6, [%SP+16];
	st.param.b32	[func_retval0+0], %r6;
	ret;
}

.visible .entry _pre_main(.param .b64 _retval, .param .b64 _argv, .param .b32 _argc)
{
	.param .align 4 .b32 argc;
	.param .align 4 .b64 argv;
	.param .align 4 .b32 retval;

	.reg .s32 %r<3>;
	.reg .s64 %l<3>;

	ld.param.u32 %r1,[_argc];
	st.param.u32 [argc], %r1;
	ld.param.u64 %l2,[_argv];
	st.param.u64 [argv], %l2;
	call (retval), main, (argc, argv);
	ld.param.u32 %r2, [retval];
	ld.param.u64 %l1, [_retval]; 	
	st.global.u32 [%l1], %r2;

	ret;
}

