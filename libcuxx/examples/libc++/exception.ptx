//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	// .globl	_ZSt18uncaught_exceptionv
.extern .func  (.param .b32 func_retval0) __cxa_uncaught_exception
(

)
;
.extern .func __cxa_decrement_exception_refcount
(
	.param .b64 __cxa_decrement_exception_refcount_param_0
)
;
.extern .func __cxa_increment_exception_refcount
(
	.param .b64 __cxa_increment_exception_refcount_param_0
)
;
.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZSt17current_exceptionv
(

)
;
.visible .func _ZNSt16nested_exceptionD0Ev
(
	.param .b64 _ZNSt16nested_exceptionD0Ev_param_0
)
;
.extern .func _ZdlPv
(
	.param .b64 _ZdlPv_param_0
)
;
.visible .func _ZNSt16nested_exceptionD2Ev
(
	.param .b64 _ZNSt16nested_exceptionD2Ev_param_0
)
;
.extern .func _ZSt9terminatev
(

)
;
.visible .func _ZSt17rethrow_exceptionSt13exception_ptr
(
	.param .b64 _ZSt17rethrow_exceptionSt13exception_ptr_param_0
)
;
.extern .func  (.param .b32 func_retval0) __gxx_personality_v0
(

)
;
.extern .func  (.param .b64 func_retval0) __cxa_current_primary_exception
(

)
;
.extern .func __cxa_rethrow_primary_exception
(
	.param .b64 __cxa_rethrow_primary_exception_param_0
)
;
.visible .global .align 1 .b8 _ZTSSt16nested_exception[21] = {83, 116, 49, 54, 110, 101, 115, 116, 101, 100, 95, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
.extern .global .align 8 .b64 _ZTVN10__cxxabiv117__class_type_infoE;
.visible .global .align 8 .u64 _ZTISt16nested_exception[2] = {_ZTVN10__cxxabiv117__class_type_infoE, _ZTSSt16nested_exception};
.visible .global .align 8 .u64 _ZTVSt16nested_exception[4] = {0, _ZTISt16nested_exception, _ZNSt16nested_exceptionD2Ev, _ZNSt16nested_exceptionD0Ev};
                                        // @_ZSt18uncaught_exceptionv
.visible .func  (.param .b32 func_retval0) _ZSt18uncaught_exceptionv(

)
{
	.reg .s32 	%r<3>;

// BB#0:                                // %entry
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 retval0;
	call.uni (retval0), 
	__cxa_uncaught_exception, 
	(
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	and.b32  	%r2, %r1, 1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_ZNSt13exception_ptrD2Ev
	.align	2
.visible .func _ZNSt13exception_ptrD2Ev(
	.param .b64 _ZNSt13exception_ptrD2Ev_param_0
)                                       // @_ZNSt13exception_ptrD2Ev
{
	.reg .s64 	%rl<3>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt13exception_ptrD2Ev_param_0];
	ld.u64 	%rl2, [%rl1];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	__cxa_decrement_exception_refcount, 
	(
	param0
	);
	
	//{
	}// Callseq End 1
	ret;
}

	// .globl	_ZNSt13exception_ptrC2ERKS_
	.align	2
.visible .func _ZNSt13exception_ptrC2ERKS_(
	.param .b64 _ZNSt13exception_ptrC2ERKS__param_0,
	.param .b64 _ZNSt13exception_ptrC2ERKS__param_1
)                                       // @_ZNSt13exception_ptrC2ERKS_
{
	.reg .s64 	%rl<4>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt13exception_ptrC2ERKS__param_0];
	ld.param.u64 	%rl2, [_ZNSt13exception_ptrC2ERKS__param_1];
	ld.u64 	%rl3, [%rl2];
	st.u64 	[%rl1], %rl3;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	call.uni 
	__cxa_increment_exception_refcount, 
	(
	param0
	);
	
	//{
	}// Callseq End 2
	ret;
}

	// .globl	_ZNSt13exception_ptraSERKS_
	.align	2
.visible .func  (.param .b64 func_retval0) _ZNSt13exception_ptraSERKS_(
	.param .b64 _ZNSt13exception_ptraSERKS__param_0,
	.param .b64 _ZNSt13exception_ptraSERKS__param_1
)                                       // @_ZNSt13exception_ptraSERKS_
{
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<7>;

// BB#0:                                // %entry
	ld.param.u64 	%rl2, [_ZNSt13exception_ptraSERKS__param_0];
	ld.param.u64 	%rl3, [_ZNSt13exception_ptraSERKS__param_1];
	ld.u64 	%rl4, [%rl2];
	ld.u64 	%rl1, [%rl3];
	setp.eq.s64	%p1, %rl4, %rl1;
	@%p1 bra 	BB3_2;
// BB#1:                                // %if.then
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	__cxa_increment_exception_refcount, 
	(
	param0
	);
	
	//{
	}// Callseq End 3
	ld.u64 	%rl5, [%rl2];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	call.uni 
	__cxa_decrement_exception_refcount, 
	(
	param0
	);
	
	//{
	}// Callseq End 4
	ld.u64 	%rl6, [%rl3];
	st.u64 	[%rl2], %rl6;
BB3_2:                                  // %if.end
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	// .globl	_ZNSt16nested_exceptionC2Ev
	.align	2
.visible .func _ZNSt16nested_exceptionC2Ev(
	.param .b64 _ZNSt16nested_exceptionC2Ev_param_0
)                                       // @_ZNSt16nested_exceptionC2Ev
{
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt16nested_exceptionC2Ev_param_0];
	mov.u64 	%rl2, _ZTVSt16nested_exception;
	cvta.global.u64 	%rl3, %rl2;
	add.s64 	%rl4, %rl3, 16;
	st.u64 	[%rl1], %rl4;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 8 .b8 retval0[8];
	call.uni (retval0), 
	_ZSt17current_exceptionv, 
	(
	);
	ld.param.b64	%rl5, [retval0+0];
	
	//{
	}// Callseq End 5
	st.u64 	[%rl1+8], %rl5;
	ret;
}

	// .globl	_ZSt17current_exceptionv
.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZSt17current_exceptionv(

)                                       // @_ZSt17current_exceptionv
{
	.reg .s64 	%rl<2>;

// BB#0:                                // %entry
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_current_primary_exception, 
	(
	);
	ld.param.b64	%rl1, [retval0+0];
	
	//{
	}// Callseq End 6
	st.param.b64	[func_retval0+0], %rl1;
	ret;
}

	// .globl	_ZNSt16nested_exceptionD0Ev
	.align	2
.visible .func _ZNSt16nested_exceptionD0Ev(
	.param .b64 _ZNSt16nested_exceptionD0Ev_param_0
)                                       // @_ZNSt16nested_exceptionD0Ev
{
	.reg .s64 	%rl<2>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt16nested_exceptionD0Ev_param_0];
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt16nested_exceptionD2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 7
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 8
	ret;
}

	// .globl	_ZNSt16nested_exceptionD2Ev
	.align	2
.visible .func _ZNSt16nested_exceptionD2Ev(
	.param .b64 _ZNSt16nested_exceptionD2Ev_param_0
)                                       // @_ZNSt16nested_exceptionD2Ev
{
	.reg .s64 	%rl<6>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZNSt16nested_exceptionD2Ev_param_0];
	mov.u64 	%rl2, _ZTVSt16nested_exception;
	cvta.global.u64 	%rl3, %rl2;
	add.s64 	%rl4, %rl3, 16;
	st.u64 	[%rl1], %rl4;
	add.s64 	%rl5, %rl1, 8;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	call.uni 
	_ZNSt13exception_ptrD2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 9
	ret;
}

	// .globl	_ZNKSt16nested_exception14rethrow_nestedEv
	.align	2
.visible .func _ZNKSt16nested_exception14rethrow_nestedEv(
	.param .b64 _ZNKSt16nested_exception14rethrow_nestedEv_param_0
)                                       // @_ZNKSt16nested_exception14rethrow_nestedEv
{
	.local .align 8 .b8 	__local_depot8[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<9>;

// BB#0:                                // %entry
	mov.u64 	%rl8, __local_depot8;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl2, [_ZNKSt16nested_exception14rethrow_nestedEv_param_0];
	mov.u64 	%rl3, 0;
	st.u64 	[%SP+0], %rl3;
	ld.u64 	%rl4, [%rl2+8];
	add.u64 	%rl5, %SP, 0;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	call.uni 
	_ZNSt13exception_ptrD2Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 10
	setp.ne.s64	%p1, %rl4, 0;
	@%p1 bra 	BB8_2;
// BB#1:                                // %if.then
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 13
BB8_2:                                  // %if.end
	add.s64 	%rl1, %rl2, 8;
	add.u64 	%rl6, %SP, 8;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	call.uni 
	_ZNSt13exception_ptrC2ERKS_, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 11
	ld.u64 	%rl7, [%SP+8];
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	call.uni 
	_ZSt17rethrow_exceptionSt13exception_ptr, 
	(
	param0
	);
	
	//{
	}// Callseq End 12
}

	// .globl	_ZSt17rethrow_exceptionSt13exception_ptr
.visible .func _ZSt17rethrow_exceptionSt13exception_ptr(
	.param .b64 _ZSt17rethrow_exceptionSt13exception_ptr_param_0
)                                       // @_ZSt17rethrow_exceptionSt13exception_ptr
{
	.reg .s64 	%rl<2>;

// BB#0:                                // %entry
	ld.param.u64 	%rl1, [_ZSt17rethrow_exceptionSt13exception_ptr_param_0];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	__cxa_rethrow_primary_exception, 
	(
	param0
	);
	
	//{
	}// Callseq End 14
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 15
}

