//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	.weak	_Znwy
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func  (.param .b64 func_retval0) _ZSt15get_new_handlerv
(

)
;
.extern .func  (.param .b64 func_retval0) __cxa_allocate_exception
(
	.param .b64 __cxa_allocate_exception_param_0
)
;
.extern .func _ZNSt9bad_allocC1Ev
(
	.param .b64 _ZNSt9bad_allocC1Ev_param_0
)
;
.extern .func _ZNSt9bad_allocD1Ev
(
	.param .b64 _ZNSt9bad_allocD1Ev_param_0
)
;
.extern .func __cxa_throw
(
	.param .b64 __cxa_throw_param_0,
	.param .b64 __cxa_throw_param_1,
	.param .b64 __cxa_throw_param_2
)
;
.extern .func  (.param .b32 func_retval0) __gxx_personality_v0
(

)
;
.extern .func  (.param .b64 func_retval0) __cxa_begin_catch
(
	.param .b64 __cxa_begin_catch_param_0
)
;
.extern .func __cxa_end_catch
(

)
;
.func __clang_call_terminate
(
	.param .b64 __clang_call_terminate_param_0
)
;
.extern .func _ZSt9terminatev
(

)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.extern .global .align 8 .b64 _ZTISt9bad_alloc;
.visible .global .align 1 .b8 _ZSt7nothrow[1];

.func  (.param .b64 func_retval0) _Znwy(
	.param .b64 _Znwy_param_0
)
{
	.local .align 8 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s64 	%rl<14>;

	mov.u64 	%rl13, __local_depot0;
	cvta.local.u64 	%SP, %rl13;
	mov.u64 	%rl3, _ZTISt9bad_alloc;
	cvta.global.u64 	%rl1, %rl3;
	ld.param.u64 	%rl2, [_Znwy_param_0];
	st.u64 	[%SP+0], %rl2;
	setp.ne.s64	%p1, %rl2, 0;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;
BB0_1:
	mov.u64 	%rl4, 1;
	st.u64 	[%SP+0], %rl4;
BB0_2:
BB0_3:
	ld.u64 	%rl5, [%SP+0];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 0
	st.u64 	[%SP+8], %rl6;
	setp.ne.s64	%p2, %rl6, 0;
	@%p2 bra 	BB0_8;
	bra.uni 	BB0_4;
BB0_4:
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_ZSt15get_new_handlerv, 
	(
	);
	ld.param.b64	%rl8, [retval0+0];
	
	//{
	}// Callseq End 1
	st.u64 	[%SP+16], %rl8;
	setp.eq.s64	%p3, %rl8, 0;
	@%p3 bra 	BB0_6;
	bra.uni 	BB0_5;
BB0_5:
	ld.u64 	%rl12, [%SP+16];
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	prototype_5 : .callprototype ()_ ();
	call 
	%rl12, 
	(
	)
	, prototype_5;
	
	//{
	}// Callseq End 5
	bra.uni 	BB0_7;
BB0_6:
	mov.u64 	%rl9, 8;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl10, [retval0+0];
	
	//{
	}// Callseq End 2
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 3
	mov.u64 	%rl11, _ZNSt9bad_allocD1Ev;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl11;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 4
BB0_7:
	bra.uni 	BB0_3;
BB0_8:
	ld.u64 	%rl7, [%SP+8];
	st.param.b64	[func_retval0+0], %rl7;
	ret;
}

	.weak	_ZnwyRKSt9nothrow_t
.func  (.param .b64 func_retval0) _ZnwyRKSt9nothrow_t(
	.param .b64 _ZnwyRKSt9nothrow_t_param_0,
	.param .b64 _ZnwyRKSt9nothrow_t_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<8>;

	mov.u64 	%rl7, __local_depot1;
	cvta.local.u64 	%SP, %rl7;
	ld.param.u64 	%rl2, [_ZnwyRKSt9nothrow_t_param_0];
	ld.param.u64 	%rl3, [_ZnwyRKSt9nothrow_t_param_1];
	st.u64 	[%SP+0], %rl2;
	st.u64 	[%SP+8], %rl3;
	mov.u64 	%rl4, 0;
	st.u64 	[%SP+16], %rl4;
	ld.u64 	%rl5, [%SP+0];
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Znwy, 
	(
	param0
	);
	ld.param.b64	%rl1, [retval0+0];
	
	//{
	}// Callseq End 6
	st.u64 	[%SP+16], %rl1;
	ld.u64 	%rl6, [%SP+16];
	st.param.b64	[func_retval0+0], %rl6;
	ret;
}

	.hidden	__clang_call_terminate
	.weak	__clang_call_terminate
.func __clang_call_terminate(
	.param .b64 __clang_call_terminate_param_0
)
{
	.reg .s64 	%rl<3>;

	ld.param.u64 	%rl1, [__clang_call_terminate_param_0];
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_begin_catch, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 7
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 8
}

	.weak	_Znay
.func  (.param .b64 func_retval0) _Znay(
	.param .b64 _Znay_param_0
)
{
	.local .align 8 .b8 	__local_depot3[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<4>;

	mov.u64 	%rl3, __local_depot3;
	cvta.local.u64 	%SP, %rl3;
	ld.param.u64 	%rl1, [_Znay_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 retval0;
	call.uni (retval0), 
	_Znwy, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 9
	st.param.b64	[func_retval0+0], %rl2;
	ret;
}

	.weak	_ZnayRKSt9nothrow_t
.func  (.param .b64 func_retval0) _ZnayRKSt9nothrow_t(
	.param .b64 _ZnayRKSt9nothrow_t_param_0,
	.param .b64 _ZnayRKSt9nothrow_t_param_1
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<8>;

	mov.u64 	%rl7, __local_depot4;
	cvta.local.u64 	%SP, %rl7;
	ld.param.u64 	%rl2, [_ZnayRKSt9nothrow_t_param_0];
	ld.param.u64 	%rl3, [_ZnayRKSt9nothrow_t_param_1];
	st.u64 	[%SP+0], %rl2;
	st.u64 	[%SP+8], %rl3;
	mov.u64 	%rl4, 0;
	st.u64 	[%SP+16], %rl4;
	ld.u64 	%rl5, [%SP+0];
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b64 retval0;
	call.uni (retval0), 
	_Znay, 
	(
	param0
	);
	ld.param.b64	%rl1, [retval0+0];
	
	//{
	}// Callseq End 10
	st.u64 	[%SP+16], %rl1;
	ld.u64 	%rl6, [%SP+16];
	st.param.b64	[func_retval0+0], %rl6;
	ret;
}

	.weak	_ZdlPv
.func _ZdlPv(
	.param .b64 _ZdlPv_param_0
)
{
	.local .align 8 .b8 	__local_depot5[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s64 	%rl<4>;

	mov.u64 	%rl3, __local_depot5;
	cvta.local.u64 	%SP, %rl3;
	ld.param.u64 	%rl1, [_ZdlPv_param_0];
	st.u64 	[%SP+0], %rl1;
	setp.eq.s64	%p1, %rl1, 0;
	@%p1 bra 	BB5_3;
	bra.uni 	BB5_1;
BB5_1:
	ld.u64 	%rl2, [%SP+0];
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	free, 
	(
	param0
	);
	
	//{
	}// Callseq End 11
BB5_3:
	ret;
}

	.weak	_ZdlPvRKSt9nothrow_t
.func _ZdlPvRKSt9nothrow_t(
	.param .b64 _ZdlPvRKSt9nothrow_t_param_0,
	.param .b64 _ZdlPvRKSt9nothrow_t_param_1
)
{
	.local .align 8 .b8 	__local_depot6[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<5>;

	mov.u64 	%rl4, __local_depot6;
	cvta.local.u64 	%SP, %rl4;
	ld.param.u64 	%rl1, [_ZdlPvRKSt9nothrow_t_param_0];
	ld.param.u64 	%rl2, [_ZdlPvRKSt9nothrow_t_param_1];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	ld.u64 	%rl3, [%SP+0];
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 12
	ret;
}

	.weak	_ZdaPv
.func _ZdaPv(
	.param .b64 _ZdaPv_param_0
)
{
	.local .align 8 .b8 	__local_depot7[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<3>;

	mov.u64 	%rl2, __local_depot7;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZdaPv_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZdlPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 13
	ret;
}

	.weak	_ZdaPvRKSt9nothrow_t
.func _ZdaPvRKSt9nothrow_t(
	.param .b64 _ZdaPvRKSt9nothrow_t_param_0,
	.param .b64 _ZdaPvRKSt9nothrow_t_param_1
)
{
	.local .align 8 .b8 	__local_depot8[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<5>;

	mov.u64 	%rl4, __local_depot8;
	cvta.local.u64 	%SP, %rl4;
	ld.param.u64 	%rl1, [_ZdaPvRKSt9nothrow_t_param_0];
	ld.param.u64 	%rl2, [_ZdaPvRKSt9nothrow_t_param_1];
	st.u64 	[%SP+0], %rl1;
	st.u64 	[%SP+8], %rl2;
	ld.u64 	%rl3, [%SP+0];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	call.uni 
	_ZdaPv, 
	(
	param0
	);
	
	//{
	}// Callseq End 14
	ret;
}

	// .globl	_ZSt17__throw_bad_allocv
.visible .func _ZSt17__throw_bad_allocv(

)
{
	.reg .s64 	%rl<6>;

	mov.u64 	%rl1, _ZTISt9bad_alloc;
	cvta.global.u64 	%rl2, %rl1;
	mov.u64 	%rl3, 8;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl3;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_allocate_exception, 
	(
	param0
	);
	ld.param.b64	%rl4, [retval0+0];
	
	//{
	}// Callseq End 15
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	call.uni 
	_ZNSt9bad_allocC1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 16
	mov.u64 	%rl5, _ZNSt9bad_allocD1Ev;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rl5;
	call.uni 
	__cxa_throw, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 17
}

