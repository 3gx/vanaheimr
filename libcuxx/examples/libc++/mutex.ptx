//
// Generated by LLVM NVPTX Back-End
//

.version 3.1
.target sm_20
.address_size 64

	// .globl	_Z18pthread_mutex_lockP15pthread_mutex_t
.extern .func  (.param .b32 func_retval0) _Z21pthread_mutex_destroyP15pthread_mutex_t
(
	.param .b64 _Z21pthread_mutex_destroyP15pthread_mutex_t_param_0
)
;
.extern .func  (.param .b32 func_retval0) __gxx_personality_v0
(

)
;
.func __clang_call_terminate
(
	.param .b64 __clang_call_terminate_param_0
)
;
.extern .func  (.param .b64 func_retval0) __cxa_begin_catch
(
	.param .b64 __cxa_begin_catch_param_0
)
;
.extern .func _ZSt9terminatev
(

)
;
.extern .func _ZNSt3__120__throw_system_errorEiPKc
(
	.param .b32 _ZNSt3__120__throw_system_errorEiPKc_param_0,
	.param .b64 _ZNSt3__120__throw_system_errorEiPKc_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z21pthread_mutex_trylockP15pthread_mutex_t
(
	.param .b64 _Z21pthread_mutex_trylockP15pthread_mutex_t_param_0
)
;
.extern .func _Z13__assert_failPKcS0_jS0_
(
	.param .b64 _Z13__assert_failPKcS0_jS0__param_0,
	.param .b64 _Z13__assert_failPKcS0_jS0__param_1,
	.param .b32 _Z13__assert_failPKcS0_jS0__param_2,
	.param .b64 _Z13__assert_failPKcS0_jS0__param_3
)
;
.extern .func  (.param .b32 func_retval0) _Z22pthread_mutexattr_initP19pthread_mutexattr_t
(
	.param .b64 _Z22pthread_mutexattr_initP19pthread_mutexattr_t_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z25pthread_mutexattr_settypeP19pthread_mutexattr_ti
(
	.param .b64 _Z25pthread_mutexattr_settypeP19pthread_mutexattr_ti_param_0,
	.param .b32 _Z25pthread_mutexattr_settypeP19pthread_mutexattr_ti_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z25pthread_mutexattr_destroyP19pthread_mutexattr_t
(
	.param .b64 _Z25pthread_mutexattr_destroyP19pthread_mutexattr_t_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z18pthread_mutex_initP15pthread_mutex_tPK19pthread_mutexattr_t
(
	.param .b64 _Z18pthread_mutex_initP15pthread_mutex_tPK19pthread_mutexattr_t_param_0,
	.param .b64 _Z18pthread_mutex_initP15pthread_mutex_tPK19pthread_mutexattr_t_param_1
)
;
.extern .func _ZNSt3__118condition_variableD1Ev
(
	.param .b64 _ZNSt3__118condition_variableD1Ev_param_0
)
;
.extern .func _ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE
(
	.param .b64 _ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE_param_0,
	.param .b64 _ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE_param_1
)
;
.extern .func _ZNSt3__118condition_variable10notify_oneEv
(
	.param .b64 _ZNSt3__118condition_variable10notify_oneEv_param_0
)
;
.extern .func  (.param .b64 func_retval0) _Z12pthread_selfv
(

)
;
.extern .func  (.param .b32 func_retval0) _Z13pthread_equalmm
(
	.param .b64 _Z13pthread_equalmm_param_0,
	.param .b64 _Z13pthread_equalmm_param_1
)
;
.func _ZNSt3__111unique_lockINS_5mutexEE6unlockEv
(
	.param .b64 _ZNSt3__111unique_lockINS_5mutexEE6unlockEv_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z17pthread_cond_waitP14pthread_cond_tP15pthread_mutex_t
(
	.param .b64 _Z17pthread_cond_waitP14pthread_cond_tP15pthread_mutex_t_param_0,
	.param .b64 _Z17pthread_cond_waitP14pthread_cond_tP15pthread_mutex_t_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z22pthread_cond_broadcastP14pthread_cond_t
(
	.param .b64 _Z22pthread_cond_broadcastP14pthread_cond_t_param_0
)
;
.extern .func __cxa_rethrow
(

)
;
.extern .func __cxa_end_catch
(

)
;
.visible .global .align 1 .b8 _ZNSt3__110defer_lockE[1];
.visible .global .align 1 .b8 _ZNSt3__111try_to_lockE[1];
.visible .global .align 1 .b8 _ZNSt3__110adopt_lockE[1];
.global .align 1 .b8 .str[18] = {109, 117, 116, 101, 120, 32, 108, 111, 99, 107, 32, 102, 97, 105, 108, 101, 100, 0};
.global .align 1 .b8 .str1[8] = {101, 99, 32, 61, 61, 32, 48, 0};
.global .align 1 .b8 .str2[51] = {47, 85, 115, 101, 114, 115, 47, 103, 114, 101, 103, 111, 114, 121, 100, 105, 97, 109, 111, 115, 47, 99, 104, 101, 99, 107, 111, 117, 116, 47, 108, 105, 98, 99, 120, 120, 47, 115, 114, 99, 47, 109, 117, 116, 101, 120, 46, 99, 112, 112, 0};
.global .align 1 .b8 __func__._ZNSt3__15mutex6unlockEv[7] = {117, 110, 108, 111, 99, 107, 0};
.global .align 1 .b8 .str3[35] = {114, 101, 99, 117, 114, 115, 105, 118, 101, 95, 109, 117, 116, 101, 120, 32, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 32, 102, 97, 105, 108, 101, 100, 0};
.global .align 1 .b8 .str4[7] = {101, 32, 61, 61, 32, 48, 0};
.global .align 1 .b8 __func__._ZNSt3__115recursive_mutexD2Ev[17] = {126, 114, 101, 99, 117, 114, 115, 105, 118, 101, 95, 109, 117, 116, 101, 120, 0};
.global .align 1 .b8 .str5[28] = {114, 101, 99, 117, 114, 115, 105, 118, 101, 95, 109, 117, 116, 101, 120, 32, 108, 111, 99, 107, 32, 102, 97, 105, 108, 101, 100, 0};
.global .align 1 .b8 .str6[41] = {114, 101, 99, 117, 114, 115, 105, 118, 101, 95, 116, 105, 109, 101, 100, 95, 109, 117, 116, 101, 120, 32, 108, 111, 99, 107, 32, 108, 105, 109, 105, 116, 32, 114, 101, 97, 99, 104, 101, 100, 0};
.global .align 1 .b8 .str7[32] = {117, 110, 105, 113, 117, 101, 95, 108, 111, 99, 107, 58, 58, 117, 110, 108, 111, 99, 107, 58, 32, 110, 111, 116, 32, 108, 111, 99, 107, 101, 100, 0};
.global .align 8 .b8 _ZNSt3__1L2cvE[48] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.global .align 8 .b8 _ZNSt3__1L3mutE[40] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

.visible .func  (.param .b32 func_retval0) _Z18pthread_mutex_lockP15pthread_mutex_t(
	.param .b64 _Z18pthread_mutex_lockP15pthread_mutex_t_param_0
)
{
	.local .align 8 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<3>;

	mov.u64 	%rl2, __local_depot0;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_Z18pthread_mutex_lockP15pthread_mutex_t_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z20pthread_mutex_unlockP15pthread_mutex_t
.visible .func  (.param .b32 func_retval0) _Z20pthread_mutex_unlockP15pthread_mutex_t(
	.param .b64 _Z20pthread_mutex_unlockP15pthread_mutex_t_param_0
)
{
	.local .align 8 .b8 	__local_depot1[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<3>;

	mov.u64 	%rl2, __local_depot1;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_Z20pthread_mutex_unlockP15pthread_mutex_t_param_0];
	st.u64 	[%SP+0], %rl1;
	mov.u32 	%r1, 0;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_ZNSt3__15mutexD2Ev
	.align	2
.visible .func _ZNSt3__15mutexD2Ev(
	.param .b64 _ZNSt3__15mutexD2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot2[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<3>;

	mov.u64 	%rl2, __local_depot2;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__15mutexD2Ev_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z21pthread_mutex_destroyP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 0
	ret;
}

	.hidden	__clang_call_terminate
	.weak	__clang_call_terminate
.func __clang_call_terminate(
	.param .b64 __clang_call_terminate_param_0
)
{
	.reg .s64 	%rl<3>;

	ld.param.u64 	%rl1, [__clang_call_terminate_param_0];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 retval0;
	call.uni (retval0), 
	__cxa_begin_catch, 
	(
	param0
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 1
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	call.uni 
	_ZSt9terminatev, 
	(
	);
	
	//{
	}// Callseq End 2
}

	// .globl	_ZNSt3__15mutex4lockEv
	.align	2
.visible .func _ZNSt3__15mutex4lockEv(
	.param .b64 _ZNSt3__15mutex4lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot4[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<5>;

	mov.u64 	%rl4, __local_depot4;
	cvta.local.u64 	%SP, %rl4;
	ld.param.u64 	%rl2, [_ZNSt3__15mutex4lockEv_param_0];
	mov.u64 	%rl3, .str;
	cvta.global.u64 	%rl1, %rl3;
	st.u64 	[%SP+0], %rl2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_mutex_lockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 3
	st.u32 	[%SP+8], %r1;
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB4_2;
	bra.uni 	BB4_1;
BB4_1:
	ld.u32 	%r2, [%SP+8];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	call.uni 
	_ZNSt3__120__throw_system_errorEiPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 4
BB4_2:
	ret;
}

	// .globl	_ZNSt3__15mutex8try_lockEv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNSt3__15mutex8try_lockEv(
	.param .b64 _ZNSt3__15mutex8try_lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot5[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<3>;

	mov.u64 	%rl2, __local_depot5;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__15mutex8try_lockEv_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z21pthread_mutex_trylockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 5
	setp.eq.s32	%p1, %r1, 0;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_ZNSt3__15mutex6unlockEv
	.align	2
.visible .func _ZNSt3__15mutex6unlockEv(
	.param .b64 _ZNSt3__15mutex6unlockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot6[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<9>;

	mov.u64 	%rl8, __local_depot6;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl4, [_ZNSt3__15mutex6unlockEv_param_0];
	mov.u64 	%rl5, .str1;
	cvta.global.u64 	%rl1, %rl5;
	mov.u64 	%rl6, .str2;
	cvta.global.u64 	%rl2, %rl6;
	mov.u64 	%rl7, __func__._ZNSt3__15mutex6unlockEv;
	cvta.global.u64 	%rl3, %rl7;
	st.u64 	[%SP+0], %rl4;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z20pthread_mutex_unlockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 6
	st.u32 	[%SP+8], %r1;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB6_3;
	bra.uni 	BB6_2;
BB6_2:
	bra.uni 	BB6_5;
BB6_3:
	mov.u32 	%r2, 46;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl3;
	call.uni 
	_Z13__assert_failPKcS0_jS0_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 7
BB6_5:
	ret;
}

	// .globl	_ZNSt3__115recursive_mutexC2Ev
	.align	2
.visible .func _ZNSt3__115recursive_mutexC2Ev(
	.param .b64 _ZNSt3__115recursive_mutexC2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot7[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .s32 	%r<10>;
	.reg .s64 	%rl<12>;

	mov.u64 	%rl11, __local_depot7;
	cvta.local.u64 	%SP, %rl11;
	ld.param.u64 	%rl3, [_ZNSt3__115recursive_mutexC2Ev_param_0];
	mov.u64 	%rl4, .str3;
	cvta.global.u64 	%rl1, %rl4;
	st.u64 	[%SP+0], %rl3;
	mov.u64 	%rl2, %rl3;
	add.u64 	%rl5, %SP, 8;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z22pthread_mutexattr_initP19pthread_mutexattr_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 8
	st.u32 	[%SP+12], %r1;
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB7_2;
	bra.uni 	BB7_1;
BB7_1:
	bra.uni 	BB7_9;
BB7_2:
	add.u64 	%rl6, %SP, 8;
	mov.u32 	%r2, 1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25pthread_mutexattr_settypeP19pthread_mutexattr_ti, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 9
	st.u32 	[%SP+12], %r3;
	setp.eq.s32	%p2, %r3, 0;
	@%p2 bra 	BB7_4;
	bra.uni 	BB7_3;
BB7_3:
	add.u64 	%rl10, %SP, 8;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25pthread_mutexattr_destroyP19pthread_mutexattr_t, 
	(
	param0
	);
	ld.param.b32	%r8, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB7_9;
BB7_4:
	add.u64 	%rl7, %SP, 8;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl7;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_mutex_initP15pthread_mutex_tPK19pthread_mutexattr_t, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 10
	st.u32 	[%SP+12], %r4;
	setp.eq.s32	%p3, %r4, 0;
	@%p3 bra 	BB7_6;
	bra.uni 	BB7_5;
BB7_5:
	add.u64 	%rl9, %SP, 8;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25pthread_mutexattr_destroyP19pthread_mutexattr_t, 
	(
	param0
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB7_9;
BB7_6:
	add.u64 	%rl8, %SP, 8;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25pthread_mutexattr_destroyP19pthread_mutexattr_t, 
	(
	param0
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 11
	st.u32 	[%SP+12], %r5;
	setp.eq.s32	%p4, %r5, 0;
	@%p4 bra 	BB7_8;
	bra.uni 	BB7_7;
BB7_7:
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z21pthread_mutex_destroyP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB7_9;
BB7_8:
	bra.uni 	BB7_10;
BB7_9:
	ld.u32 	%r9, [%SP+12];
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	call.uni 
	_ZNSt3__120__throw_system_errorEiPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 15
BB7_10:
	ret;
}

	// .globl	_ZNSt3__115recursive_mutexD2Ev
	.align	2
.visible .func _ZNSt3__115recursive_mutexD2Ev(
	.param .b64 _ZNSt3__115recursive_mutexD2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot8[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<9>;

	mov.u64 	%rl8, __local_depot8;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl4, [_ZNSt3__115recursive_mutexD2Ev_param_0];
	mov.u64 	%rl5, .str4;
	cvta.global.u64 	%rl1, %rl5;
	mov.u64 	%rl6, .str2;
	cvta.global.u64 	%rl2, %rl6;
	mov.u64 	%rl7, __func__._ZNSt3__115recursive_mutexD2Ev;
	cvta.global.u64 	%rl3, %rl7;
	st.u64 	[%SP+0], %rl4;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z21pthread_mutex_destroyP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 16
	st.u32 	[%SP+8], %r1;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB8_3;
	bra.uni 	BB8_2;
BB8_2:
	bra.uni 	BB8_5;
BB8_3:
	mov.u32 	%r2, 84;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl3;
	call.uni 
	_Z13__assert_failPKcS0_jS0_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 17
BB8_5:
	ret;
}

	// .globl	_ZNSt3__115recursive_mutex4lockEv
	.align	2
.visible .func _ZNSt3__115recursive_mutex4lockEv(
	.param .b64 _ZNSt3__115recursive_mutex4lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot9[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<5>;

	mov.u64 	%rl4, __local_depot9;
	cvta.local.u64 	%SP, %rl4;
	ld.param.u64 	%rl2, [_ZNSt3__115recursive_mutex4lockEv_param_0];
	mov.u64 	%rl3, .str5;
	cvta.global.u64 	%rl1, %rl3;
	st.u64 	[%SP+0], %rl2;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_mutex_lockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 18
	st.u32 	[%SP+8], %r1;
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB9_2;
	bra.uni 	BB9_1;
BB9_1:
	ld.u32 	%r2, [%SP+8];
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	call.uni 
	_ZNSt3__120__throw_system_errorEiPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 19
BB9_2:
	ret;
}

	// .globl	_ZNSt3__115recursive_mutex6unlockEv
	.align	2
.visible .func _ZNSt3__115recursive_mutex6unlockEv(
	.param .b64 _ZNSt3__115recursive_mutex6unlockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot10[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<9>;

	mov.u64 	%rl8, __local_depot10;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl4, [_ZNSt3__115recursive_mutex6unlockEv_param_0];
	mov.u64 	%rl5, .str4;
	cvta.global.u64 	%rl1, %rl5;
	mov.u64 	%rl6, .str2;
	cvta.global.u64 	%rl2, %rl6;
	mov.u64 	%rl7, __func__._ZNSt3__15mutex6unlockEv;
	cvta.global.u64 	%rl3, %rl7;
	st.u64 	[%SP+0], %rl4;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z20pthread_mutex_unlockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 20
	st.u32 	[%SP+8], %r1;
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB10_3;
	bra.uni 	BB10_2;
BB10_2:
	bra.uni 	BB10_5;
BB10_3:
	mov.u32 	%r2, 100;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl2;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rl3;
	call.uni 
	_Z13__assert_failPKcS0_jS0_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	
	//{
	}// Callseq End 21
BB10_5:
	ret;
}

	// .globl	_ZNSt3__115recursive_mutex8try_lockEv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNSt3__115recursive_mutex8try_lockEv(
	.param .b64 _ZNSt3__115recursive_mutex8try_lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot11[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .s64 	%rl<3>;

	mov.u64 	%rl2, __local_depot11;
	cvta.local.u64 	%SP, %rl2;
	ld.param.u64 	%rl1, [_ZNSt3__115recursive_mutex8try_lockEv_param_0];
	st.u64 	[%SP+0], %rl1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z21pthread_mutex_trylockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 22
	setp.eq.s32	%p1, %r1, 0;
	selp.u32	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_ZNSt3__111timed_mutexC2Ev
	.align	2
.visible .func _ZNSt3__111timed_mutexC2Ev(
	.param .b64 _ZNSt3__111timed_mutexC2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot12[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<4>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<12>;

	mov.u64 	%rl11, __local_depot12;
	cvta.local.u64 	%SP, %rl11;
	ld.param.u64 	%rl7, [_ZNSt3__111timed_mutexC2Ev_param_0];
	st.u64 	[%SP+16], %rl7;
	mov.u64 	%rl1, %rl7;
	st.u64 	[%SP+8], %rl7;
	mov.u32 	%r1, 0;
	st.u32 	[%rl7], %r1;
	st.u32 	[%rl7+4], %r1;
	mov.u64 	%rl8, 0;
	st.u64 	[%rl7+8], %rl8;
	st.u32 	[%rl7+16], %r1;
	st.u64 	[%rl7+24], %rl8;
	st.u32 	[%rl7+32], %r1;
	add.s64 	%rl2, %rl7, 40;
	st.u64 	[%SP+0], %rl2;
	st.u64 	[%rl7+40], %rl8;
	st.u32 	[%rl7+48], %r1;
	st.u64 	[%rl7+56], %rl8;
	mov.u16 	%rs1, 0;
	st.u8 	[%rl7+64], %rs1;
	add.s64 	%rl3, %rl7, 65;
	add.s64 	%rl4, %rl7, 80;
	mov.u64 	%rl10, %rl3;
BB12_1:
	mov.u64 	%rl5, %rl10;
	mov.u16 	%rs2, 0;
	st.u8 	[%rl5], %rs2;
	add.s64 	%rl6, %rl5, 1;
	setp.ne.s64	%p1, %rl6, %rl4;
	mov.u64 	%rl10, %rl6;
	@%p1 bra 	BB12_1;
	bra.uni 	BB12_2;
BB12_2:
	mov.u64 	%rl9, 0;
	st.u64 	[%rl2+40], %rl9;
	mov.u16 	%rs3, 0;
	st.u8 	[%rl1+88], %rs3;
	ret;
}

	// .globl	_ZNSt3__111timed_mutexD2Ev
	.align	2
.visible .func _ZNSt3__111timed_mutexD2Ev(
	.param .b64 _ZNSt3__111timed_mutexD2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot13[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<9>;

	mov.u64 	%rl8, __local_depot13;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl2, [_ZNSt3__111timed_mutexD2Ev_param_0];
	st.u64 	[%SP+24], %rl2;
	mov.u64 	%rl1, %rl2;
	add.u64 	%rl3, %SP, 32;
	st.u64 	[%SP+8], %rl3;
	st.u64 	[%SP+16], %rl2;
	ld.u64 	%rl4, [%SP+8];
	st.u64 	[%rl4], %rl2;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 23
	add.u64 	%rl5, %SP, 32;
	st.u64 	[%SP+0], %rl5;
	ld.u64 	%rl6, [%SP+32];
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 24
	add.s64 	%rl7, %rl1, 40;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	call.uni 
	_ZNSt3__118condition_variableD1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 25
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutexD1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 26
	ret;
}

	// .globl	_ZNSt3__111timed_mutex4lockEv
	.align	2
.visible .func _ZNSt3__111timed_mutex4lockEv(
	.param .b64 _ZNSt3__111timed_mutex4lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot14[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<7>;
	.reg .s64 	%rl<11>;

	mov.u64 	%rl10, __local_depot14;
	cvta.local.u64 	%SP, %rl10;
	ld.param.u64 	%rl3, [_ZNSt3__111timed_mutex4lockEv_param_0];
	st.u64 	[%SP+32], %rl3;
	mov.u64 	%rl1, %rl3;
	add.u64 	%rl4, %SP, 40;
	st.u64 	[%SP+16], %rl4;
	st.u64 	[%SP+24], %rl3;
	ld.u64 	%rl5, [%SP+16];
	st.u64 	[%rl5], %rl3;
	mov.u16 	%rs1, 1;
	st.u8 	[%rl5+8], %rs1;
	ld.u64 	%rl6, [%rl5];
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 27
BB14_1:
	ld.u8 	%rs2, [%rl1+88];
	and.b16  	%rs3, %rs2, 1;
	setp.eq.b16	%p1, %rs3, 1;
	@!%p1 bra 	BB14_4;
	bra.uni 	BB14_2;
BB14_2:
	add.s64 	%rl8, %rl1, 40;
	add.u64 	%rl9, %SP, 40;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl9;
	call.uni 
	_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 29
	bra.uni 	BB14_1;
BB14_4:
	mov.u16 	%rs4, 1;
	st.u8 	[%rl1+88], %rs4;
	add.u64 	%rl2, %SP, 40;
	st.u64 	[%SP+0], %rl2;
	ld.u8 	%rs5, [%SP+48];
	and.b16  	%rs6, %rs5, 1;
	setp.eq.b16	%p2, %rs6, 1;
	@!%p2 bra 	BB14_6;
	bra.uni 	BB14_5;
BB14_5:
	ld.u64 	%rl7, [%rl2];
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 28
BB14_6:
	ret;
}

	// .globl	_ZNSt3__111timed_mutex8try_lockEv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNSt3__111timed_mutex8try_lockEv(
	.param .b64 _ZNSt3__111timed_mutex8try_lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot15[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<12>;
	.reg .s32 	%r<5>;
	.reg .s64 	%rl<11>;

	mov.u64 	%rl10, __local_depot15;
	cvta.local.u64 	%SP, %rl10;
	ld.param.u64 	%rl3, [_ZNSt3__111timed_mutex8try_lockEv_param_0];
	st.u64 	[%SP+40], %rl3;
	mov.u64 	%rl1, %rl3;
	ld.u8 	%rs1, [%SP+64];
	add.u64 	%rl4, %SP, 48;
	st.u64 	[%SP+16], %rl4;
	st.u64 	[%SP+24], %rl3;
	st.u8 	[%SP+32], %rs1;
	ld.u64 	%rl5, [%SP+16];
	ld.u64 	%rl6, [%SP+24];
	st.u64 	[%rl5], %rl6;
	ld.u64 	%rl7, [%SP+24];
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZNSt3__15mutex8try_lockEv, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 30
	cvt.u16.u32	%rs2, %r1;
	and.b16  	%rs3, %rs2, 1;
	st.u8 	[%rl5+8], %rs3;
	add.u64 	%rl8, %SP, 48;
	st.u64 	[%SP+8], %rl8;
	ld.u8 	%rs4, [%SP+56];
	and.b16  	%rs5, %rs4, 1;
	setp.eq.b16	%p1, %rs5, 1;
	@!%p1 bra 	BB15_4;
	bra.uni 	BB15_2;
BB15_2:
	ld.u8 	%rs6, [%rl1+88];
	and.b16  	%rs7, %rs6, 1;
	setp.eq.b16	%p2, %rs7, 1;
	@%p2 bra 	BB15_4;
	bra.uni 	BB15_3;
BB15_3:
	mov.u16 	%rs8, 1;
	st.u8 	[%rl1+88], %rs8;
	st.u8 	[%SP+33], %rs8;
	mov.u32 	%r2, 1;
	st.u32 	[%SP+68], %r2;
	bra.uni 	BB15_5;
BB15_4:
	mov.u16 	%rs9, 0;
	st.u8 	[%SP+33], %rs9;
	mov.u32 	%r3, 1;
	st.u32 	[%SP+68], %r3;
BB15_5:
	add.u64 	%rl2, %SP, 48;
	st.u64 	[%SP+0], %rl2;
	ld.u8 	%rs10, [%SP+56];
	and.b16  	%rs11, %rs10, 1;
	setp.eq.b16	%p3, %rs11, 1;
	@!%p3 bra 	BB15_7;
	bra.uni 	BB15_6;
BB15_6:
	ld.u64 	%rl9, [%rl2];
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 31
BB15_7:
	ld.u8 	%r4, [%SP+33];
	st.param.b32	[func_retval0+0], %r4;
	ret;
}

	// .globl	_ZNSt3__111timed_mutex6unlockEv
	.align	2
.visible .func _ZNSt3__111timed_mutex6unlockEv(
	.param .b64 _ZNSt3__111timed_mutex6unlockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot16[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s16 	%rs<2>;
	.reg .s64 	%rl<9>;

	mov.u64 	%rl8, __local_depot16;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl2, [_ZNSt3__111timed_mutex6unlockEv_param_0];
	st.u64 	[%SP+24], %rl2;
	mov.u64 	%rl1, %rl2;
	add.u64 	%rl3, %SP, 32;
	st.u64 	[%SP+8], %rl3;
	st.u64 	[%SP+16], %rl2;
	ld.u64 	%rl4, [%SP+8];
	st.u64 	[%rl4], %rl2;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 32
	mov.u16 	%rs1, 0;
	st.u8 	[%rl1+88], %rs1;
	add.s64 	%rl5, %rl1, 40;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	call.uni 
	_ZNSt3__118condition_variable10notify_oneEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 33
	add.u64 	%rl6, %SP, 32;
	st.u64 	[%SP+0], %rl6;
	ld.u64 	%rl7, [%SP+32];
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 34
	ret;
}

	// .globl	_ZNSt3__121recursive_timed_mutexC2Ev
	.align	2
.visible .func _ZNSt3__121recursive_timed_mutexC2Ev(
	.param .b64 _ZNSt3__121recursive_timed_mutexC2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot17[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<13>;

	mov.u64 	%rl12, __local_depot17;
	cvta.local.u64 	%SP, %rl12;
	ld.param.u64 	%rl7, [_ZNSt3__121recursive_timed_mutexC2Ev_param_0];
	st.u64 	[%SP+16], %rl7;
	mov.u64 	%rl1, %rl7;
	st.u64 	[%SP+8], %rl7;
	mov.u32 	%r1, 0;
	st.u32 	[%rl7], %r1;
	st.u32 	[%rl7+4], %r1;
	mov.u64 	%rl8, 0;
	st.u64 	[%rl7+8], %rl8;
	st.u32 	[%rl7+16], %r1;
	st.u64 	[%rl7+24], %rl8;
	st.u32 	[%rl7+32], %r1;
	add.s64 	%rl2, %rl7, 40;
	st.u64 	[%SP+0], %rl2;
	st.u64 	[%rl7+40], %rl8;
	st.u32 	[%rl7+48], %r1;
	st.u64 	[%rl7+56], %rl8;
	mov.u16 	%rs1, 0;
	st.u8 	[%rl7+64], %rs1;
	add.s64 	%rl3, %rl7, 65;
	add.s64 	%rl4, %rl7, 80;
	mov.u64 	%rl11, %rl3;
BB17_1:
	mov.u64 	%rl5, %rl11;
	mov.u16 	%rs2, 0;
	st.u8 	[%rl5], %rs2;
	add.s64 	%rl6, %rl5, 1;
	setp.ne.s64	%p1, %rl6, %rl4;
	mov.u64 	%rl11, %rl6;
	@%p1 bra 	BB17_1;
	bra.uni 	BB17_2;
BB17_2:
	mov.u64 	%rl9, 0;
	st.u64 	[%rl2+40], %rl9;
	mov.u64 	%rl10, 0;
	st.u64 	[%rl1+88], %rl10;
	st.u64 	[%rl1+96], %rl10;
	ret;
}

	// .globl	_ZNSt3__121recursive_timed_mutexD2Ev
	.align	2
.visible .func _ZNSt3__121recursive_timed_mutexD2Ev(
	.param .b64 _ZNSt3__121recursive_timed_mutexD2Ev_param_0
)
{
	.local .align 8 .b8 	__local_depot18[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s64 	%rl<9>;

	mov.u64 	%rl8, __local_depot18;
	cvta.local.u64 	%SP, %rl8;
	ld.param.u64 	%rl2, [_ZNSt3__121recursive_timed_mutexD2Ev_param_0];
	st.u64 	[%SP+24], %rl2;
	mov.u64 	%rl1, %rl2;
	add.u64 	%rl3, %SP, 32;
	st.u64 	[%SP+8], %rl3;
	st.u64 	[%SP+16], %rl2;
	ld.u64 	%rl4, [%SP+8];
	st.u64 	[%rl4], %rl2;
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 35
	add.u64 	%rl5, %SP, 32;
	st.u64 	[%SP+0], %rl5;
	ld.u64 	%rl6, [%SP+32];
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 36
	add.s64 	%rl7, %rl1, 40;
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl7;
	call.uni 
	_ZNSt3__118condition_variableD1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 37
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	call.uni 
	_ZNSt3__15mutexD1Ev, 
	(
	param0
	);
	
	//{
	}// Callseq End 38
	ret;
}

	// .globl	_ZNSt3__121recursive_timed_mutex4lockEv
	.align	2
.visible .func _ZNSt3__121recursive_timed_mutex4lockEv(
	.param .b64 _ZNSt3__121recursive_timed_mutex4lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot19[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .s16 	%rs<4>;
	.reg .s32 	%r<6>;
	.reg .s64 	%rl<22>;

	mov.u64 	%rl21, __local_depot19;
	cvta.local.u64 	%SP, %rl21;
	ld.param.u64 	%rl4, [_ZNSt3__121recursive_timed_mutex4lockEv_param_0];
	mov.u64 	%rl5, .str6;
	cvta.global.u64 	%rl1, %rl5;
	st.u64 	[%SP+32], %rl4;
	mov.u64 	%rl2, %rl4;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_Z12pthread_selfv, 
	(
	);
	ld.param.b64	%rl6, [retval0+0];
	
	//{
	}// Callseq End 39
	st.u64 	[%SP+40], %rl6;
	add.u64 	%rl7, %SP, 48;
	st.u64 	[%SP+16], %rl7;
	st.u64 	[%SP+24], %rl4;
	ld.u64 	%rl8, [%SP+16];
	st.u64 	[%rl8], %rl4;
	mov.u16 	%rs1, 1;
	st.u8 	[%rl8+8], %rs1;
	ld.u64 	%rl9, [%rl8];
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl9;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 40
	ld.u64 	%rl10, [%SP+40];
	ld.u64 	%rl11, [%rl4+96];
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl11;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z13pthread_equalmm, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 41
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB19_6;
	bra.uni 	BB19_2;
BB19_2:
	ld.u64 	%rl17, [%rl2+88];
	setp.ne.s64	%p3, %rl17, -1;
	@%p3 bra 	BB19_5;
	bra.uni 	BB19_3;
BB19_3:
	mov.u32 	%r3, 9976;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	call.uni 
	_ZNSt3__120__throw_system_errorEiPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 43
BB19_5:
	ld.u64 	%rl18, [%rl2+88];
	add.s64 	%rl19, %rl18, 1;
	st.u64 	[%rl2+88], %rl19;
	mov.u32 	%r4, 1;
	st.u32 	[%SP+76], %r4;
	bra.uni 	BB19_11;
BB19_6:
BB19_7:
	ld.u64 	%rl12, [%rl2+88];
	setp.eq.s64	%p2, %rl12, 0;
	@%p2 bra 	BB19_10;
	bra.uni 	BB19_8;
BB19_8:
	add.s64 	%rl15, %rl2, 40;
	add.u64 	%rl16, %SP, 48;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl16;
	call.uni 
	_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 42
	bra.uni 	BB19_7;
BB19_10:
	mov.u64 	%rl13, 1;
	st.u64 	[%rl2+88], %rl13;
	ld.u64 	%rl14, [%SP+40];
	st.u64 	[%rl2+96], %rl14;
	mov.u32 	%r2, 0;
	st.u32 	[%SP+76], %r2;
BB19_11:
	add.u64 	%rl3, %SP, 48;
	st.u64 	[%SP+8], %rl3;
	ld.u8 	%rs2, [%SP+56];
	and.b16  	%rs3, %rs2, 1;
	setp.eq.b16	%p4, %rs3, 1;
	@!%p4 bra 	BB19_13;
	bra.uni 	BB19_12;
BB19_12:
	ld.u64 	%rl20, [%rl3];
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl20;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 44
BB19_13:
	ld.u32 	%r5, [%SP+76];
	setp.gt.u32	%p5, %r5, 1;
	@%p5 bra 	BB19_15;
	bra.uni 	BB19_14;
BB19_14:
	ret;
BB19_15:
}

	// .globl	_ZNSt3__121recursive_timed_mutex8try_lockEv
	.align	2
.visible .func  (.param .b32 func_retval0) _ZNSt3__121recursive_timed_mutex8try_lockEv(
	.param .b64 _ZNSt3__121recursive_timed_mutex8try_lockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot20[104];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .s16 	%rs<11>;
	.reg .s32 	%r<7>;
	.reg .s64 	%rl<19>;

	mov.u64 	%rl18, __local_depot20;
	cvta.local.u64 	%SP, %rl18;
	ld.param.u64 	%rl4, [_ZNSt3__121recursive_timed_mutex8try_lockEv_param_0];
	st.u64 	[%SP+48], %rl4;
	mov.u64 	%rl1, %rl4;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 retval0;
	call.uni (retval0), 
	_Z12pthread_selfv, 
	(
	);
	ld.param.b64	%rl2, [retval0+0];
	
	//{
	}// Callseq End 45
	st.u64 	[%SP+56], %rl2;
	ld.u8 	%rs1, [%SP+80];
	add.u64 	%rl5, %SP, 64;
	st.u64 	[%SP+24], %rl5;
	st.u64 	[%SP+32], %rl1;
	st.u8 	[%SP+40], %rs1;
	ld.u64 	%rl6, [%SP+24];
	ld.u64 	%rl7, [%SP+32];
	st.u64 	[%rl6], %rl7;
	ld.u64 	%rl8, [%SP+32];
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl8;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZNSt3__15mutex8try_lockEv, 
	(
	param0
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 46
	cvt.u16.u32	%rs2, %r2;
	and.b16  	%rs3, %rs2, 1;
	st.u8 	[%rl6+8], %rs3;
	add.u64 	%rl9, %SP, 64;
	st.u64 	[%SP+16], %rl9;
	ld.u8 	%rs4, [%SP+72];
	and.b16  	%rs5, %rs4, 1;
	setp.eq.b16	%p1, %rs5, 1;
	@!%p1 bra 	BB20_9;
	bra.uni 	BB20_3;
BB20_3:
	ld.u64 	%rl10, [%rl1+88];
	setp.eq.s64	%p2, %rl10, 0;
	@%p2 bra 	BB20_6;
	bra.uni 	BB20_4;
BB20_4:
	ld.u64 	%rl11, [%SP+56];
	ld.u64 	%rl12, [%rl1+96];
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z13pthread_equalmm, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 47
	setp.eq.s32	%p3, %r1, 0;
	@%p3 bra 	BB20_9;
	bra.uni 	BB20_6;
BB20_6:
	ld.u64 	%rl13, [%rl1+88];
	setp.ne.s64	%p4, %rl13, -1;
	@%p4 bra 	BB20_8;
	bra.uni 	BB20_7;
BB20_7:
	mov.u16 	%rs8, 0;
	st.u8 	[%SP+41], %rs8;
	mov.u32 	%r5, 1;
	st.u32 	[%SP+100], %r5;
	bra.uni 	BB20_10;
BB20_8:
	ld.u64 	%rl14, [%rl1+88];
	add.s64 	%rl15, %rl14, 1;
	st.u64 	[%rl1+88], %rl15;
	ld.u64 	%rl16, [%SP+56];
	st.u64 	[%rl1+96], %rl16;
	mov.u16 	%rs7, 1;
	st.u8 	[%SP+41], %rs7;
	mov.u32 	%r4, 1;
	st.u32 	[%SP+100], %r4;
	bra.uni 	BB20_10;
BB20_9:
	mov.u16 	%rs6, 0;
	st.u8 	[%SP+41], %rs6;
	mov.u32 	%r3, 1;
	st.u32 	[%SP+100], %r3;
BB20_10:
	add.u64 	%rl3, %SP, 64;
	st.u64 	[%SP+0], %rl3;
	ld.u8 	%rs9, [%SP+72];
	and.b16  	%rs10, %rs9, 1;
	setp.eq.b16	%p5, %rs10, 1;
	@!%p5 bra 	BB20_12;
	bra.uni 	BB20_11;
BB20_11:
	ld.u64 	%rl17, [%rl3];
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl17;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 48
BB20_12:
	ld.u8 	%r6, [%SP+41];
	st.param.b32	[func_retval0+0], %r6;
	ret;
}

	// .globl	_ZNSt3__121recursive_timed_mutex6unlockEv
	.align	2
.visible .func _ZNSt3__121recursive_timed_mutex6unlockEv(
	.param .b64 _ZNSt3__121recursive_timed_mutex6unlockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot21[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<4>;
	.reg .s64 	%rl<14>;

	mov.u64 	%rl13, __local_depot21;
	cvta.local.u64 	%SP, %rl13;
	ld.param.u64 	%rl3, [_ZNSt3__121recursive_timed_mutex6unlockEv_param_0];
	st.u64 	[%SP+32], %rl3;
	mov.u64 	%rl1, %rl3;
	add.u64 	%rl4, %SP, 40;
	st.u64 	[%SP+16], %rl4;
	st.u64 	[%SP+24], %rl3;
	ld.u64 	%rl5, [%SP+16];
	st.u64 	[%rl5], %rl3;
	mov.u16 	%rs1, 1;
	st.u8 	[%rl5+8], %rs1;
	ld.u64 	%rl6, [%rl5];
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl6;
	call.uni 
	_ZNSt3__15mutex4lockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 49
	ld.u64 	%rl7, [%rl1+88];
	add.s64 	%rl8, %rl7, -1;
	st.u64 	[%rl1+88], %rl8;
	setp.ne.s64	%p1, %rl8, 0;
	@%p1 bra 	BB21_5;
	bra.uni 	BB21_3;
BB21_3:
	mov.u64 	%rl9, 0;
	st.u64 	[%rl1+96], %rl9;
	add.u64 	%rl10, %SP, 40;
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl10;
	call.uni 
	_ZNSt3__111unique_lockINS_5mutexEE6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 50
	add.s64 	%rl11, %rl1, 40;
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl11;
	call.uni 
	_ZNSt3__118condition_variable10notify_oneEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 51
BB21_5:
	add.u64 	%rl2, %SP, 40;
	st.u64 	[%SP+0], %rl2;
	ld.u8 	%rs2, [%SP+48];
	and.b16  	%rs3, %rs2, 1;
	setp.eq.b16	%p2, %rs3, 1;
	@!%p2 bra 	BB21_7;
	bra.uni 	BB21_6;
BB21_6:
	ld.u64 	%rl12, [%rl2];
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl12;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 52
BB21_7:
	ret;
}

	.weak	_ZNSt3__111unique_lockINS_5mutexEE6unlockEv
	.align	2
.func _ZNSt3__111unique_lockINS_5mutexEE6unlockEv(
	.param .b64 _ZNSt3__111unique_lockINS_5mutexEE6unlockEv_param_0
)
{
	.local .align 8 .b8 	__local_depot22[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<4>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rl<7>;

	mov.u64 	%rl6, __local_depot22;
	cvta.local.u64 	%SP, %rl6;
	ld.param.u64 	%rl3, [_ZNSt3__111unique_lockINS_5mutexEE6unlockEv_param_0];
	mov.u64 	%rl4, .str7;
	cvta.global.u64 	%rl1, %rl4;
	st.u64 	[%SP+0], %rl3;
	mov.u64 	%rl2, %rl3;
	ld.u8 	%rs1, [%rl3+8];
	and.b16  	%rs2, %rs1, 1;
	setp.eq.b16	%p1, %rs2, 1;
	@%p1 bra 	BB22_2;
	bra.uni 	BB22_1;
BB22_1:
	mov.u32 	%r1, 9972;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	call.uni 
	_ZNSt3__120__throw_system_errorEiPKc, 
	(
	param0, 
	param1
	);
	
	//{
	}// Callseq End 53
BB22_2:
	ld.u64 	%rl5, [%rl2];
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl5;
	call.uni 
	_ZNSt3__15mutex6unlockEv, 
	(
	param0
	);
	
	//{
	}// Callseq End 54
	mov.u16 	%rs3, 0;
	st.u8 	[%rl2+8], %rs3;
	ret;
}

	// .globl	_ZNSt3__111__call_onceERVmPvPFvS2_E
.visible .func _ZNSt3__111__call_onceERVmPvPFvS2_E(
	.param .b64 _ZNSt3__111__call_onceERVmPvPFvS2_E_param_0,
	.param .b64 _ZNSt3__111__call_onceERVmPvPFvS2_E_param_1,
	.param .b64 _ZNSt3__111__call_onceERVmPvPFvS2_E_param_2
)
{
	.local .align 8 .b8 	__local_depot23[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s32 	%r<8>;
	.reg .s64 	%rl<19>;

	mov.u64 	%rl18, __local_depot23;
	cvta.local.u64 	%SP, %rl18;
	ld.param.u64 	%rl3, [_ZNSt3__111__call_onceERVmPvPFvS2_E_param_0];
	ld.param.u64 	%rl4, [_ZNSt3__111__call_onceERVmPvPFvS2_E_param_1];
	ld.param.u64 	%rl5, [_ZNSt3__111__call_onceERVmPvPFvS2_E_param_2];
	mov.u64 	%rl6, _ZNSt3__1L3mutE;
	cvta.global.u64 	%rl1, %rl6;
	mov.u64 	%rl7, _ZNSt3__1L2cvE;
	cvta.global.u64 	%rl2, %rl7;
	st.u64 	[%SP+0], %rl3;
	st.u64 	[%SP+8], %rl4;
	st.u64 	[%SP+16], %rl5;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_mutex_lockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	
	//{
	}// Callseq End 55
BB23_1:
	ld.u64 	%rl8, [%SP+0];
	ld.volatile.u64 	%rl9, [%rl8];
	setp.ne.s64	%p1, %rl9, 1;
	@%p1 bra 	BB23_3;
	bra.uni 	BB23_2;
BB23_2:
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z17pthread_cond_waitP14pthread_cond_tP15pthread_mutex_t, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 62
	bra.uni 	BB23_1;
BB23_3:
	ld.u64 	%rl10, [%SP+0];
	ld.volatile.u64 	%rl11, [%rl10];
	setp.ne.s64	%p2, %rl11, 0;
	@%p2 bra 	BB23_11;
	bra.uni 	BB23_4;
BB23_4:
	ld.u64 	%rl12, [%SP+0];
	mov.u64 	%rl13, 1;
	st.volatile.u64 	[%rl12], %rl13;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z20pthread_mutex_unlockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 57
	ld.u64 	%rl14, [%SP+16];
	ld.u64 	%rl15, [%SP+8];
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl15;
	prototype_58 : .callprototype ()_ (.param .b64 _);
	call 
	%rl14, 
	(
	param0
	)
	, prototype_58;
	
	//{
	}// Callseq End 58
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z18pthread_mutex_lockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 59
	ld.u64 	%rl16, [%SP+0];
	mov.u64 	%rl17, -1;
	st.volatile.u64 	[%rl16], %rl17;
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z20pthread_mutex_unlockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 60
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z22pthread_cond_broadcastP14pthread_cond_t, 
	(
	param0
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 61
	bra.uni 	BB23_12;
BB23_11:
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rl1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z20pthread_mutex_unlockP15pthread_mutex_t, 
	(
	param0
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 56
BB23_12:
	ret;
}

